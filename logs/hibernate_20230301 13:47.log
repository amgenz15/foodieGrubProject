[DEBUG] 2023-03-01 13:47:30.938 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-03-01 13:47:30.955 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2023-03-01 13:47:30.959 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2023-03-01 13:47:31.177 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2023-03-01 13:47:31.188 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2023-03-01 13:47:31.605 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [.//Hibernate/Hiberntae Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2023-03-01 13:47:31.613 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2023-03-01 13:47:31.618 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2023-03-01 13:47:32.364 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2023-03-01 13:47:32.412 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-03-01 13:47:32.412 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2023-03-01 13:47:32.429 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2023-03-01 13:47:32.494 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6c518474
[DEBUG] 2023-03-01 13:47:32.495 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6c518474
[DEBUG] 2023-03-01 13:47:32.495 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6c518474
[DEBUG] 2023-03-01 13:47:32.496 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5e2a3040
[DEBUG] 2023-03-01 13:47:32.497 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@64524dd
[DEBUG] 2023-03-01 13:47:32.497 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7479b626
[DEBUG] 2023-03-01 13:47:32.546 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5ff2b8ca
[DEBUG] 2023-03-01 13:47:32.569 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5ff2b8ca
[DEBUG] 2023-03-01 13:47:32.570 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5ff2b8ca
[DEBUG] 2023-03-01 13:47:32.572 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5fe7f967
[DEBUG] 2023-03-01 13:47:32.573 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5fe7f967
[DEBUG] 2023-03-01 13:47:32.573 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5fe7f967
[DEBUG] 2023-03-01 13:47:32.574 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5e8cda75
[DEBUG] 2023-03-01 13:47:32.574 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5e8cda75
[DEBUG] 2023-03-01 13:47:32.574 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5e8cda75
[DEBUG] 2023-03-01 13:47:32.575 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@222afc67
[DEBUG] 2023-03-01 13:47:32.575 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@222afc67
[DEBUG] 2023-03-01 13:47:32.575 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@222afc67
[DEBUG] 2023-03-01 13:47:32.576 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3ae9d1e2
[DEBUG] 2023-03-01 13:47:32.576 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3ae9d1e2
[DEBUG] 2023-03-01 13:47:32.576 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ae9d1e2
[DEBUG] 2023-03-01 13:47:32.577 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2e060819
[DEBUG] 2023-03-01 13:47:32.577 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2e060819
[DEBUG] 2023-03-01 13:47:32.583 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2e060819
[DEBUG] 2023-03-01 13:47:32.584 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@216914
[DEBUG] 2023-03-01 13:47:32.603 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@216914
[DEBUG] 2023-03-01 13:47:32.603 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@216914
[DEBUG] 2023-03-01 13:47:32.604 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61af1510
[DEBUG] 2023-03-01 13:47:32.605 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61af1510
[DEBUG] 2023-03-01 13:47:32.605 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3901f6af
[DEBUG] 2023-03-01 13:47:32.609 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3901f6af
[DEBUG] 2023-03-01 13:47:32.610 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@13da7ab0
[DEBUG] 2023-03-01 13:47:32.610 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@13da7ab0
[DEBUG] 2023-03-01 13:47:32.611 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@77eb5790
[DEBUG] 2023-03-01 13:47:32.611 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@ef1695a
[DEBUG] 2023-03-01 13:47:32.611 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@27b45ea
[DEBUG] 2023-03-01 13:47:32.612 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@27b45ea
[DEBUG] 2023-03-01 13:47:32.612 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6778aea6
[DEBUG] 2023-03-01 13:47:32.612 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6778aea6
[DEBUG] 2023-03-01 13:47:32.637 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2dfe5525
[DEBUG] 2023-03-01 13:47:32.638 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2dfe5525
[DEBUG] 2023-03-01 13:47:32.639 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6d303498
[DEBUG] 2023-03-01 13:47:32.640 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6d303498
[DEBUG] 2023-03-01 13:47:32.643 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@29eda4f8
[DEBUG] 2023-03-01 13:47:32.643 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@29eda4f8
[DEBUG] 2023-03-01 13:47:32.644 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@57402ba1
[DEBUG] 2023-03-01 13:47:32.651 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@57402ba1
[DEBUG] 2023-03-01 13:47:32.653 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@62573c86
[DEBUG] 2023-03-01 13:47:32.661 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@62573c86
[DEBUG] 2023-03-01 13:47:32.668 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3936df72
[DEBUG] 2023-03-01 13:47:32.668 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3936df72
[DEBUG] 2023-03-01 13:47:32.671 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3ce53f6a
[DEBUG] 2023-03-01 13:47:32.672 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3ce53f6a
[DEBUG] 2023-03-01 13:47:32.673 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@8f2098e
[DEBUG] 2023-03-01 13:47:32.691 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@8f2098e
[DEBUG] 2023-03-01 13:47:32.692 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@481e91b6
[DEBUG] 2023-03-01 13:47:32.693 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@481e91b6
[DEBUG] 2023-03-01 13:47:32.694 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3dd818e8
[DEBUG] 2023-03-01 13:47:32.694 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3dd818e8
[DEBUG] 2023-03-01 13:47:32.695 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3dd818e8
[DEBUG] 2023-03-01 13:47:32.696 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@47b67fcb
[DEBUG] 2023-03-01 13:47:32.698 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6b8280e6
[DEBUG] 2023-03-01 13:47:32.698 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6b8280e6
[DEBUG] 2023-03-01 13:47:32.698 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6b8280e6
[DEBUG] 2023-03-01 13:47:32.700 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15dc339f
[DEBUG] 2023-03-01 13:47:32.701 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@76889e60
[DEBUG] 2023-03-01 13:47:32.701 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@76889e60
[DEBUG] 2023-03-01 13:47:32.703 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3e104d4b
[DEBUG] 2023-03-01 13:47:32.703 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e104d4b
[DEBUG] 2023-03-01 13:47:32.713 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@64469d8
[DEBUG] 2023-03-01 13:47:32.713 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@64469d8
[DEBUG] 2023-03-01 13:47:32.714 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@43e1692f
[DEBUG] 2023-03-01 13:47:32.715 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@43e1692f
[DEBUG] 2023-03-01 13:47:32.722 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@66213a0d
[DEBUG] 2023-03-01 13:47:32.722 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@66213a0d
[DEBUG] 2023-03-01 13:47:32.723 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70c0a3d5
[DEBUG] 2023-03-01 13:47:32.724 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4f5f6e45
[DEBUG] 2023-03-01 13:47:32.724 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4f5f6e45
[DEBUG] 2023-03-01 13:47:32.724 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4f5f6e45
[DEBUG] 2023-03-01 13:47:32.739 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79316f3a
[DEBUG] 2023-03-01 13:47:32.740 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79316f3a
[DEBUG] 2023-03-01 13:47:32.754 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79316f3a
[DEBUG] 2023-03-01 13:47:32.756 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6fc29daa
[DEBUG] 2023-03-01 13:47:32.756 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@ebd06a9
[DEBUG] 2023-03-01 13:47:32.757 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1640190a
[DEBUG] 2023-03-01 13:47:32.757 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1640190a
[DEBUG] 2023-03-01 13:47:32.758 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1640190a
[DEBUG] 2023-03-01 13:47:32.765 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@382c90c2
[DEBUG] 2023-03-01 13:47:32.765 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@382c90c2
[DEBUG] 2023-03-01 13:47:32.765 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@382c90c2
[DEBUG] 2023-03-01 13:47:32.766 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@760245e1
[DEBUG] 2023-03-01 13:47:32.766 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6ff6efdc
[DEBUG] 2023-03-01 13:47:32.768 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3a08078c
[DEBUG] 2023-03-01 13:47:32.768 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a08078c
[DEBUG] 2023-03-01 13:47:32.769 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@396ef8b2
[DEBUG] 2023-03-01 13:47:32.785 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@11f406f8
[DEBUG] 2023-03-01 13:47:32.785 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@11f406f8
[DEBUG] 2023-03-01 13:47:32.786 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@45c2e0a6
[DEBUG] 2023-03-01 13:47:32.786 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@45c2e0a6
[DEBUG] 2023-03-01 13:47:32.787 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@690bc15e
[DEBUG] 2023-03-01 13:47:32.787 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3db972d2
[DEBUG] 2023-03-01 13:47:32.788 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@13741d5a
[DEBUG] 2023-03-01 13:47:32.791 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3f702946
[DEBUG] 2023-03-01 13:47:32.791 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f702946
[DEBUG] 2023-03-01 13:47:32.791 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@14b7786
[DEBUG] 2023-03-01 13:47:32.791 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@750ff7d3
[DEBUG] 2023-03-01 13:47:32.791 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63b3ee82
[DEBUG] 2023-03-01 13:47:32.791 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2620e717
[DEBUG] 2023-03-01 13:47:32.815 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c8d5312
[DEBUG] 2023-03-01 13:47:32.815 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7636823f
[DEBUG] 2023-03-01 13:47:32.816 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@a0db585
[DEBUG] 2023-03-01 13:47:32.816 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2b34e38c
[DEBUG] 2023-03-01 13:47:32.894 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-03-01 13:47:32.895 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-03-01 13:47:32.895 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-03-01 13:47:32.896 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-03-01 13:47:32.896 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-03-01 13:47:32.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-03-01 13:47:32.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-03-01 13:47:32.918 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-03-01 13:47:32.925 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2023-03-01 13:47:32.925 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-03-01 13:47:32.926 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-03-01 13:47:32.931 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2023-03-01 13:47:32.931 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-03-01 13:47:32.933 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2023-03-01 13:47:32.957 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_foodie_grub
[INFO ] 2023-03-01 13:47:32.957 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2023-03-01 13:47:32.957 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2023-03-01 13:47:33.358 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2023-03-01 13:47:33.658 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2023-03-01 13:47:33.665 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2023-03-01 13:47:33.665 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2023-03-01 13:47:33.674 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2023-03-01 13:47:33.732 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-03-01 13:47:33.768 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-03-01 13:47:33.807 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-03-01 13:47:33.811 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ee25d80] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@16a35bd]
[DEBUG] 2023-03-01 13:47:33.885 [main] AnnotationBinder - Binding entity from annotated class: com.amgenz.entity.User
[DEBUG] 2023-03-01 13:47:33.924 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2023-03-01 13:47:33.927 [main] EntityBinder - Import with entity name Users
[DEBUG] 2023-03-01 13:47:33.929 [main] EntityBinder - Bind entity com.amgenz.entity.User on table users
[DEBUG] 2023-03-01 13:47:33.965 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:33.967 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-03-01 13:47:33.968 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.User:id]
[DEBUG] 2023-03-01 13:47:33.969 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2023-03-01 13:47:33.985 [main] PropertyBinder - Building property id
[DEBUG] 2023-03-01 13:47:33.989 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2023-03-01 13:47:33.991 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:33.993 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2023-03-01 13:47:33.993 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.User:email]
[DEBUG] 2023-03-01 13:47:33.993 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2023-03-01 13:47:33.994 [main] PropertyBinder - Building property email
[DEBUG] 2023-03-01 13:47:33.995 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:33.995 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2023-03-01 13:47:33.996 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.User:firstName]
[DEBUG] 2023-03-01 13:47:33.996 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2023-03-01 13:47:33.996 [main] PropertyBinder - Building property firstName
[DEBUG] 2023-03-01 13:47:33.996 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:33.997 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2023-03-01 13:47:33.997 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.User:lastName]
[DEBUG] 2023-03-01 13:47:33.998 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2023-03-01 13:47:33.998 [main] PropertyBinder - Building property lastName
[DEBUG] 2023-03-01 13:47:34.021 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2023-03-01 13:47:34.022 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.025 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.057 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.057 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.058 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2023-03-01 13:47:34.059 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2023-03-01 13:47:34.060 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2023-03-01 13:47:34.061 [main] CollectionBinder - Collection role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:34.064 [main] PropertyBinder - Building property recipes
[DEBUG] 2023-03-01 13:47:34.067 [main] AnnotationBinder - Binding entity from annotated class: com.amgenz.entity.Recipe
[DEBUG] 2023-03-01 13:47:34.068 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2023-03-01 13:47:34.069 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2023-03-01 13:47:34.069 [main] EntityBinder - Bind entity com.amgenz.entity.Recipe on table recipes
[DEBUG] 2023-03-01 13:47:34.092 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.092 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-03-01 13:47:34.092 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.Recipe:id]
[DEBUG] 2023-03-01 13:47:34.093 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2023-03-01 13:47:34.093 [main] PropertyBinder - Building property id
[DEBUG] 2023-03-01 13:47:34.093 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2023-03-01 13:47:34.094 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=calories, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.094 [main] PropertyBinder - MetadataSourceProcessor property calories with lazy=false
[DEBUG] 2023-03-01 13:47:34.094 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.Recipe:calories]
[DEBUG] 2023-03-01 13:47:34.102 [main] SimpleValueBinder - building SimpleValue for calories
[DEBUG] 2023-03-01 13:47:34.103 [main] PropertyBinder - Building property calories
[DEBUG] 2023-03-01 13:47:34.107 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=carbohydrates, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.107 [main] PropertyBinder - MetadataSourceProcessor property carbohydrates with lazy=false
[DEBUG] 2023-03-01 13:47:34.107 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.Recipe:carbohydrates]
[DEBUG] 2023-03-01 13:47:34.107 [main] SimpleValueBinder - building SimpleValue for carbohydrates
[DEBUG] 2023-03-01 13:47:34.108 [main] PropertyBinder - Building property carbohydrates
[DEBUG] 2023-03-01 13:47:34.108 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=fat, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.108 [main] PropertyBinder - MetadataSourceProcessor property fat with lazy=false
[DEBUG] 2023-03-01 13:47:34.108 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.Recipe:fat]
[DEBUG] 2023-03-01 13:47:34.108 [main] SimpleValueBinder - building SimpleValue for fat
[DEBUG] 2023-03-01 13:47:34.109 [main] PropertyBinder - Building property fat
[DEBUG] 2023-03-01 13:47:34.109 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='recipe'}
[DEBUG] 2023-03-01 13:47:34.115 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.116 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.116 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.117 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.120 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='ingredients_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2023-03-01 13:47:34.120 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='recipe'}
[DEBUG] 2023-03-01 13:47:34.120 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='recipe'}
[DEBUG] 2023-03-01 13:47:34.120 [main] CollectionBinder - Collection role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:34.122 [main] PropertyBinder - Building property ingredients
[DEBUG] 2023-03-01 13:47:34.122 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='recipe'}
[DEBUG] 2023-03-01 13:47:34.123 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=instructions, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.123 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.123 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.132 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=instructions_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.133 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='instructions_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2023-03-01 13:47:34.133 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='recipe'}
[DEBUG] 2023-03-01 13:47:34.133 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='recipe'}
[DEBUG] 2023-03-01 13:47:34.133 [main] CollectionBinder - Collection role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:34.134 [main] PropertyBinder - Building property instructions
[DEBUG] 2023-03-01 13:47:34.134 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=protein, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.134 [main] PropertyBinder - MetadataSourceProcessor property protein with lazy=false
[DEBUG] 2023-03-01 13:47:34.135 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.Recipe:protein]
[DEBUG] 2023-03-01 13:47:34.135 [main] SimpleValueBinder - building SimpleValue for protein
[DEBUG] 2023-03-01 13:47:34.135 [main] PropertyBinder - Building property protein
[DEBUG] 2023-03-01 13:47:34.136 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=recipe_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.136 [main] PropertyBinder - MetadataSourceProcessor property recipeName with lazy=false
[DEBUG] 2023-03-01 13:47:34.136 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.Recipe:recipeName]
[DEBUG] 2023-03-01 13:47:34.136 [main] SimpleValueBinder - building SimpleValue for recipeName
[DEBUG] 2023-03-01 13:47:34.136 [main] PropertyBinder - Building property recipeName
[DEBUG] 2023-03-01 13:47:34.137 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=serving, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.137 [main] PropertyBinder - MetadataSourceProcessor property serving with lazy=false
[DEBUG] 2023-03-01 13:47:34.137 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.Recipe:serving]
[DEBUG] 2023-03-01 13:47:34.140 [main] SimpleValueBinder - building SimpleValue for serving
[DEBUG] 2023-03-01 13:47:34.140 [main] PropertyBinder - Building property serving
[DEBUG] 2023-03-01 13:47:34.140 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=total_time_in_min, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.140 [main] PropertyBinder - MetadataSourceProcessor property totalTimeInMin with lazy=false
[DEBUG] 2023-03-01 13:47:34.140 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.Recipe:totalTimeInMin]
[DEBUG] 2023-03-01 13:47:34.141 [main] SimpleValueBinder - building SimpleValue for totalTimeInMin
[DEBUG] 2023-03-01 13:47:34.141 [main] PropertyBinder - Building property totalTimeInMin
[DEBUG] 2023-03-01 13:47:34.141 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=type, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.141 [main] PropertyBinder - MetadataSourceProcessor property type with lazy=false
[DEBUG] 2023-03-01 13:47:34.141 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.Recipe:type]
[DEBUG] 2023-03-01 13:47:34.141 [main] SimpleValueBinder - building SimpleValue for type
[DEBUG] 2023-03-01 13:47:34.157 [main] PropertyBinder - Building property type
[DEBUG] 2023-03-01 13:47:34.158 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2023-03-01 13:47:34.173 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.190 [main] PropertyBinder - Building property user
[DEBUG] 2023-03-01 13:47:34.191 [main] AnnotationBinder - Binding entity from annotated class: com.amgenz.entity.RecipeIngredient
[DEBUG] 2023-03-01 13:47:34.191 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2023-03-01 13:47:34.191 [main] EntityBinder - Import with entity name RecipeIngredient
[DEBUG] 2023-03-01 13:47:34.191 [main] EntityBinder - Bind entity com.amgenz.entity.RecipeIngredient on table recipe_ingredient
[DEBUG] 2023-03-01 13:47:34.235 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipe_ingredient), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.235 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-03-01 13:47:34.235 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.RecipeIngredient:id]
[DEBUG] 2023-03-01 13:47:34.235 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2023-03-01 13:47:34.236 [main] PropertyBinder - Building property id
[DEBUG] 2023-03-01 13:47:34.236 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2023-03-01 13:47:34.236 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipe_ingredient), mappingColumn=ingredient, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.236 [main] PropertyBinder - MetadataSourceProcessor property ingredient with lazy=false
[DEBUG] 2023-03-01 13:47:34.236 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.RecipeIngredient:ingredient]
[DEBUG] 2023-03-01 13:47:34.236 [main] SimpleValueBinder - building SimpleValue for ingredient
[DEBUG] 2023-03-01 13:47:34.236 [main] PropertyBinder - Building property ingredient
[DEBUG] 2023-03-01 13:47:34.236 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipe_ingredient), mappingColumn=ingredient_amount, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.237 [main] PropertyBinder - MetadataSourceProcessor property ingredientAmount with lazy=false
[DEBUG] 2023-03-01 13:47:34.237 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.RecipeIngredient:ingredientAmount]
[DEBUG] 2023-03-01 13:47:34.237 [main] SimpleValueBinder - building SimpleValue for ingredientAmount
[DEBUG] 2023-03-01 13:47:34.237 [main] PropertyBinder - Building property ingredientAmount
[DEBUG] 2023-03-01 13:47:34.237 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipe_ingredient), mappingColumn=ingredient_amount_measurement, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.237 [main] PropertyBinder - MetadataSourceProcessor property ingredientAmountMeasurement with lazy=false
[DEBUG] 2023-03-01 13:47:34.237 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.RecipeIngredient:ingredientAmountMeasurement]
[DEBUG] 2023-03-01 13:47:34.237 [main] SimpleValueBinder - building SimpleValue for ingredientAmountMeasurement
[DEBUG] 2023-03-01 13:47:34.237 [main] PropertyBinder - Building property ingredientAmountMeasurement
[DEBUG] 2023-03-01 13:47:34.237 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2023-03-01 13:47:34.238 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipe_ingredient), mappingColumn=recipe, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.238 [main] PropertyBinder - Building property recipe
[DEBUG] 2023-03-01 13:47:34.238 [main] AnnotationBinder - Binding entity from annotated class: com.amgenz.entity.RecipeInstruction
[DEBUG] 2023-03-01 13:47:34.238 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2023-03-01 13:47:34.238 [main] EntityBinder - Import with entity name RecipeInstruction
[DEBUG] 2023-03-01 13:47:34.238 [main] EntityBinder - Bind entity com.amgenz.entity.RecipeInstruction on table recipe_instruction
[DEBUG] 2023-03-01 13:47:34.239 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipe_instruction), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.239 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-03-01 13:47:34.239 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.RecipeInstruction:id]
[DEBUG] 2023-03-01 13:47:34.250 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2023-03-01 13:47:34.250 [main] PropertyBinder - Building property id
[DEBUG] 2023-03-01 13:47:34.251 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2023-03-01 13:47:34.253 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipe_instruction), mappingColumn=instruction, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.257 [main] PropertyBinder - MetadataSourceProcessor property instruction with lazy=false
[DEBUG] 2023-03-01 13:47:34.257 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.RecipeInstruction:instruction]
[DEBUG] 2023-03-01 13:47:34.258 [main] SimpleValueBinder - building SimpleValue for instruction
[DEBUG] 2023-03-01 13:47:34.258 [main] PropertyBinder - Building property instruction
[DEBUG] 2023-03-01 13:47:34.258 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipe_instruction), mappingColumn=instruction_order, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.258 [main] PropertyBinder - MetadataSourceProcessor property instructionOrder with lazy=false
[DEBUG] 2023-03-01 13:47:34.258 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.amgenz.entity.RecipeInstruction:instructionOrder]
[DEBUG] 2023-03-01 13:47:34.259 [main] SimpleValueBinder - building SimpleValue for instructionOrder
[DEBUG] 2023-03-01 13:47:34.259 [main] PropertyBinder - Building property instructionOrder
[DEBUG] 2023-03-01 13:47:34.259 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2023-03-01 13:47:34.270 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipe_instruction), mappingColumn=recipe, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-03-01 13:47:34.271 [main] PropertyBinder - Building property recipe
[DEBUG] 2023-03-01 13:47:34.278 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2023-03-01 13:47:34.278 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2023-03-01 13:47:34.278 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2023-03-01 13:47:34.278 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2023-03-01 13:47:34.278 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2023-03-01 13:47:34.279 [main] SimpleValueBinder - Starting fillSimpleValue for calories
[DEBUG] 2023-03-01 13:47:34.279 [main] SimpleValueBinder - Starting fillSimpleValue for carbohydrates
[DEBUG] 2023-03-01 13:47:34.279 [main] SimpleValueBinder - Starting fillSimpleValue for fat
[DEBUG] 2023-03-01 13:47:34.279 [main] SimpleValueBinder - Starting fillSimpleValue for protein
[DEBUG] 2023-03-01 13:47:34.283 [main] SimpleValueBinder - Starting fillSimpleValue for recipeName
[DEBUG] 2023-03-01 13:47:34.283 [main] SimpleValueBinder - Starting fillSimpleValue for serving
[DEBUG] 2023-03-01 13:47:34.284 [main] SimpleValueBinder - Starting fillSimpleValue for totalTimeInMin
[DEBUG] 2023-03-01 13:47:34.284 [main] SimpleValueBinder - Starting fillSimpleValue for type
[DEBUG] 2023-03-01 13:47:34.284 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2023-03-01 13:47:34.284 [main] SimpleValueBinder - Starting fillSimpleValue for ingredient
[DEBUG] 2023-03-01 13:47:34.288 [main] SimpleValueBinder - Starting fillSimpleValue for ingredientAmount
[DEBUG] 2023-03-01 13:47:34.290 [main] SimpleValueBinder - Starting fillSimpleValue for ingredientAmountMeasurement
[DEBUG] 2023-03-01 13:47:34.290 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2023-03-01 13:47:34.290 [main] SimpleValueBinder - Starting fillSimpleValue for instruction
[DEBUG] 2023-03-01 13:47:34.290 [main] SimpleValueBinder - Starting fillSimpleValue for instructionOrder
[DEBUG] 2023-03-01 13:47:34.316 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2023-03-01 13:47:34.317 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2023-03-01 13:47:34.317 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipe_ingredient]
[DEBUG] 2023-03-01 13:47:34.317 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipe_instruction]
[DEBUG] 2023-03-01 13:47:34.317 [main] CollectionSecondPass - Second pass for collection: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:34.318 [main] CollectionBinder - Binding a OneToMany: com.amgenz.entity.User.recipes through a foreign key
[DEBUG] 2023-03-01 13:47:34.319 [main] CollectionBinder - Mapping collection: com.amgenz.entity.User.recipes -> recipes
[DEBUG] 2023-03-01 13:47:34.320 [main] TableBinder - Retrieving property com.amgenz.entity.Recipe.user
[DEBUG] 2023-03-01 13:47:34.343 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.amgenz.entity.Recipe
[DEBUG] 2023-03-01 13:47:34.343 [main] CollectionSecondPass - Second pass for collection: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:34.343 [main] CollectionBinder - Binding a OneToMany: com.amgenz.entity.Recipe.ingredients through a foreign key
[DEBUG] 2023-03-01 13:47:34.344 [main] CollectionBinder - Mapping collection: com.amgenz.entity.Recipe.ingredients -> recipe_ingredient
[DEBUG] 2023-03-01 13:47:34.344 [main] TableBinder - Retrieving property com.amgenz.entity.RecipeIngredient.recipe
[DEBUG] 2023-03-01 13:47:34.344 [main] CollectionSecondPass - Mapped collection key: recipe_id, one-to-many: com.amgenz.entity.RecipeIngredient
[DEBUG] 2023-03-01 13:47:34.344 [main] CollectionSecondPass - Second pass for collection: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:34.344 [main] CollectionBinder - Binding a OneToMany: com.amgenz.entity.Recipe.instructions through a foreign key
[DEBUG] 2023-03-01 13:47:34.348 [main] CollectionBinder - Mapping collection: com.amgenz.entity.Recipe.instructions -> recipe_instruction
[DEBUG] 2023-03-01 13:47:34.348 [main] TableBinder - Retrieving property com.amgenz.entity.RecipeInstruction.recipe
[DEBUG] 2023-03-01 13:47:34.349 [main] CollectionSecondPass - Mapped collection key: recipe_id, one-to-many: com.amgenz.entity.RecipeInstruction
[DEBUG] 2023-03-01 13:47:34.349 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.amgenz.entity.Recipe
[DEBUG] 2023-03-01 13:47:34.356 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.amgenz.entity.Recipe
[DEBUG] 2023-03-01 13:47:34.357 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.amgenz.entity.User
[DEBUG] 2023-03-01 13:47:34.361 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.amgenz.entity.Recipe
[DEBUG] 2023-03-01 13:47:34.361 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.amgenz.entity.Recipe
[DEBUG] 2023-03-01 13:47:34.361 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.amgenz.entity.User
[DEBUG] 2023-03-01 13:47:34.423 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2023-03-01 13:47:34.425 [main] Settings - SessionFactory name : null
[DEBUG] 2023-03-01 13:47:34.425 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2023-03-01 13:47:34.425 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2023-03-01 13:47:34.425 [main] Settings - Statistics: disabled
[DEBUG] 2023-03-01 13:47:34.425 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2023-03-01 13:47:34.425 [main] Settings - Default entity-mode: pojo
[DEBUG] 2023-03-01 13:47:34.425 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2023-03-01 13:47:34.425 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2023-03-01 13:47:34.425 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2023-03-01 13:47:34.426 [main] Settings - Default batch fetch size: -1
[DEBUG] 2023-03-01 13:47:34.426 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2023-03-01 13:47:34.426 [main] Settings - Default null ordering: NONE
[DEBUG] 2023-03-01 13:47:34.426 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2023-03-01 13:47:34.426 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2023-03-01 13:47:34.426 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2023-03-01 13:47:34.426 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2023-03-01 13:47:34.427 [main] Settings - Query language substitutions: {}
[DEBUG] 2023-03-01 13:47:34.428 [main] Settings - Named query checking : enabled
[DEBUG] 2023-03-01 13:47:34.428 [main] Settings - Second-level cache: disabled
[DEBUG] 2023-03-01 13:47:34.428 [main] Settings - Second-level query cache: disabled
[DEBUG] 2023-03-01 13:47:34.428 [main] Settings - Second-level query cache factory: null
[DEBUG] 2023-03-01 13:47:34.428 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2023-03-01 13:47:34.429 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2023-03-01 13:47:34.430 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2023-03-01 13:47:34.430 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2023-03-01 13:47:34.431 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2023-03-01 13:47:34.431 [main] Settings - JDBC batch size: 15
[DEBUG] 2023-03-01 13:47:34.431 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2023-03-01 13:47:34.431 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2023-03-01 13:47:34.431 [main] Settings - Wrap result sets: disabled
[DEBUG] 2023-03-01 13:47:34.431 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2023-03-01 13:47:34.432 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2023-03-01 13:47:34.432 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2023-03-01 13:47:34.432 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2023-03-01 13:47:34.432 [main] Settings - JPA compliance - query : 
[DEBUG] 2023-03-01 13:47:34.432 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2023-03-01 13:47:34.432 [main] Settings - JPA compliance - lists : 
[DEBUG] 2023-03-01 13:47:34.432 [main] Settings - JPA compliance - transactions : 
[INFO ] 2023-03-01 13:47:34.572 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2023-03-01 13:47:34.651 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2023-03-01 13:47:34.652 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/inteliJ/lib/idea_rt.jar:/home/student/inteliJ/plugins/junit/lib/junit5-rt.jar:/home/student/inteliJ/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/foodieGrubProject/target/test-classes:/home/student/IdeaProjects/foodieGrubProject/target/classes:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.amgenz.persistence.RecipeInstructionDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.18+10-post-Ubuntu-0ubuntu120.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-139-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_foodie_grub, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.18, user.dir=/home/student/IdeaProjects/foodieGrubProject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1039bfc4, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.18+10-post-Ubuntu-0ubuntu120.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_foodie_grub, java.class.version=55.0}
[DEBUG] 2023-03-01 13:47:34.783 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2023-03-01 13:47:34.783 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2023-03-01 13:47:34.791 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2023-03-01 13:47:34.791 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ee25d80] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7a9ceddf]
[DEBUG] 2023-03-01 13:47:34.945 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.amgenz.entity.RecipeInstruction] is safe
[DEBUG] 2023-03-01 13:47:34.945 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.amgenz.entity.RecipeInstruction
[DEBUG] 2023-03-01 13:47:34.973 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.amgenz.entity.RecipeInstruction] is safe
[DEBUG] 2023-03-01 13:47:34.974 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.amgenz.entity.RecipeInstruction
[DEBUG] 2023-03-01 13:47:35.369 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.amgenz.entity.User] is safe
[DEBUG] 2023-03-01 13:47:35.370 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.amgenz.entity.User
[DEBUG] 2023-03-01 13:47:35.372 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.amgenz.entity.User] is safe
[DEBUG] 2023-03-01 13:47:35.378 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.amgenz.entity.User
[DEBUG] 2023-03-01 13:47:35.460 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.amgenz.entity.Recipe] is safe
[DEBUG] 2023-03-01 13:47:35.460 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.amgenz.entity.Recipe
[DEBUG] 2023-03-01 13:47:35.460 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.amgenz.entity.Recipe] is safe
[DEBUG] 2023-03-01 13:47:35.460 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.amgenz.entity.Recipe
[DEBUG] 2023-03-01 13:47:35.601 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.amgenz.entity.RecipeIngredient] is safe
[DEBUG] 2023-03-01 13:47:35.610 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.amgenz.entity.RecipeIngredient
[DEBUG] 2023-03-01 13:47:35.611 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.amgenz.entity.RecipeIngredient] is safe
[DEBUG] 2023-03-01 13:47:35.611 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.amgenz.entity.RecipeIngredient
[DEBUG] 2023-03-01 13:47:35.679 [main] AbstractCollectionPersister - Static SQL for collection: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:35.680 [main] AbstractCollectionPersister -  Row insert: update recipe_instruction set recipe_id=? where id=?
[DEBUG] 2023-03-01 13:47:35.680 [main] AbstractCollectionPersister -  Row update: update recipe_instruction set  where id=?
[DEBUG] 2023-03-01 13:47:35.680 [main] AbstractCollectionPersister -  Row delete: update recipe_instruction set recipe_id=null where recipe_id=? and id=?
[DEBUG] 2023-03-01 13:47:35.680 [main] AbstractCollectionPersister -  One-shot delete: update recipe_instruction set recipe_id=null where recipe_id=?
[DEBUG] 2023-03-01 13:47:35.680 [main] AbstractCollectionPersister - Static SQL for collection: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:35.680 [main] AbstractCollectionPersister -  Row insert: update recipe_ingredient set recipe_id=? where id=?
[DEBUG] 2023-03-01 13:47:35.680 [main] AbstractCollectionPersister -  Row update: update recipe_ingredient set  where id=?
[DEBUG] 2023-03-01 13:47:35.680 [main] AbstractCollectionPersister -  Row delete: update recipe_ingredient set recipe_id=null where recipe_id=? and id=?
[DEBUG] 2023-03-01 13:47:35.680 [main] AbstractCollectionPersister -  One-shot delete: update recipe_ingredient set recipe_id=null where recipe_id=?
[DEBUG] 2023-03-01 13:47:35.680 [main] AbstractCollectionPersister - Static SQL for collection: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:35.680 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2023-03-01 13:47:35.680 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2023-03-01 13:47:35.680 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2023-03-01 13:47:35.680 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2023-03-01 13:47:35.683 [main] AbstractEntityPersister - Static SQL for entity: com.amgenz.entity.RecipeInstruction
[DEBUG] 2023-03-01 13:47:35.683 [main] AbstractEntityPersister -  Version select: select id from recipe_instruction where id =?
[DEBUG] 2023-03-01 13:47:35.683 [main] AbstractEntityPersister -  Snapshot select: select recipeinst_.id, recipeinst_.instruction as instruct2_1_, recipeinst_.instruction_order as instruct3_1_, recipeinst_.recipe_id as recipe_i4_1_ from recipe_instruction recipeinst_ where recipeinst_.id=?
[DEBUG] 2023-03-01 13:47:35.683 [main] AbstractEntityPersister -  Insert 0: insert into recipe_instruction (instruction, instruction_order, recipe_id, id) values (?, ?, ?, ?)
[DEBUG] 2023-03-01 13:47:35.683 [main] AbstractEntityPersister -  Update 0: update recipe_instruction set instruction=?, instruction_order=?, recipe_id=? where id=?
[DEBUG] 2023-03-01 13:47:35.683 [main] AbstractEntityPersister -  Delete 0: delete from recipe_instruction where id=?
[DEBUG] 2023-03-01 13:47:35.683 [main] AbstractEntityPersister -  Identity insert: insert into recipe_instruction (instruction, instruction_order, recipe_id) values (?, ?, ?)
[DEBUG] 2023-03-01 13:47:35.752 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53016b11]
[DEBUG] 2023-03-01 13:47:35.753 [main] MetamodelGraphWalker - Visiting attribute path : instruction
[DEBUG] 2023-03-01 13:47:35.753 [main] MetamodelGraphWalker - Visiting attribute path : instructionOrder
[DEBUG] 2023-03-01 13:47:35.753 [main] MetamodelGraphWalker - Visiting attribute path : recipe
[DEBUG] 2023-03-01 13:47:35.755 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e958f08]
[DEBUG] 2023-03-01 13:47:35.756 [main] MetamodelGraphWalker - Visiting attribute path : recipe.calories
[DEBUG] 2023-03-01 13:47:35.756 [main] MetamodelGraphWalker - Visiting attribute path : recipe.carbohydrates
[DEBUG] 2023-03-01 13:47:35.756 [main] MetamodelGraphWalker - Visiting attribute path : recipe.fat
[DEBUG] 2023-03-01 13:47:35.756 [main] MetamodelGraphWalker - Visiting attribute path : recipe.ingredients
[DEBUG] 2023-03-01 13:47:35.757 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20bb85b4]
[DEBUG] 2023-03-01 13:47:35.759 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a8a551e]
[DEBUG] 2023-03-01 13:47:35.759 [main] MetamodelGraphWalker - Visiting attribute path : recipe.ingredients.ingredient
[DEBUG] 2023-03-01 13:47:35.759 [main] MetamodelGraphWalker - Visiting attribute path : recipe.ingredients.ingredientAmount
[DEBUG] 2023-03-01 13:47:35.759 [main] MetamodelGraphWalker - Visiting attribute path : recipe.ingredients.ingredientAmountMeasurement
[DEBUG] 2023-03-01 13:47:35.759 [main] MetamodelGraphWalker - Visiting attribute path : recipe.ingredients.recipe
[DEBUG] 2023-03-01 13:47:35.759 [main] MetamodelGraphWalker - Property path deemed to be circular : recipe.ingredients.recipe
[DEBUG] 2023-03-01 13:47:35.760 [main] MetamodelGraphWalker - Visiting attribute path : recipe.instructions
[DEBUG] 2023-03-01 13:47:35.760 [main] MetamodelGraphWalker - Property path deemed to be circular : recipe.instructions
[DEBUG] 2023-03-01 13:47:35.760 [main] MetamodelGraphWalker - Visiting attribute path : recipe.protein
[DEBUG] 2023-03-01 13:47:35.760 [main] MetamodelGraphWalker - Visiting attribute path : recipe.recipeName
[DEBUG] 2023-03-01 13:47:35.760 [main] MetamodelGraphWalker - Visiting attribute path : recipe.serving
[DEBUG] 2023-03-01 13:47:35.760 [main] MetamodelGraphWalker - Visiting attribute path : recipe.totalTimeInMin
[DEBUG] 2023-03-01 13:47:35.760 [main] MetamodelGraphWalker - Visiting attribute path : recipe.type
[DEBUG] 2023-03-01 13:47:35.760 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user
[DEBUG] 2023-03-01 13:47:35.760 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51b87df7]
[DEBUG] 2023-03-01 13:47:35.760 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.email
[DEBUG] 2023-03-01 13:47:35.760 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.firstName
[DEBUG] 2023-03-01 13:47:35.760 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.lastName
[DEBUG] 2023-03-01 13:47:35.760 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.recipes
[DEBUG] 2023-03-01 13:47:35.760 [main] MetamodelGraphWalker - Property path deemed to be circular : recipe.user.recipes
[DEBUG] 2023-03-01 13:47:35.761 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-03-01 13:47:35.769 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-03-01 13:47:35.775 [main] LoadPlanTreePrinter - LoadPlan(entity=com.amgenz.entity.RecipeInstruction)
    - Returns
       - EntityReturnImpl(entity=com.amgenz.entity.RecipeInstruction, querySpaceUid=<gen:0>, path=com.amgenz.entity.RecipeInstruction)
          - EntityAttributeFetchImpl(entity=com.amgenz.entity.Recipe, querySpaceUid=<gen:1>, path=com.amgenz.entity.RecipeInstruction.recipe)
             - CollectionAttributeFetchImpl(collection=com.amgenz.entity.Recipe.ingredients, querySpaceUid=<gen:2>, path=com.amgenz.entity.RecipeInstruction.recipe.ingredients)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeIngredient, querySpaceUid=<gen:3>, path=com.amgenz.entity.RecipeInstruction.recipe.ingredients.<elements>)
             - EntityAttributeFetchImpl(entity=com.amgenz.entity.User, querySpaceUid=<gen:4>, path=com.amgenz.entity.RecipeInstruction.recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.amgenz.entity.RecipeInstruction)
          - SQL table alias mapping - recipeinst0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipe)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.amgenz.entity.Recipe)
                - SQL table alias mapping - recipe1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(ingredients)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.amgenz.entity.Recipe.ingredients)
                      - SQL table alias mapping - ingredient2_
                      - alias suffix - 2_
                      - suffixed key columns - {recipe_i5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.amgenz.entity.RecipeIngredient)
                            - SQL table alias mapping - ingredient2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.amgenz.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_3_4_}

[DEBUG] 2023-03-01 13:47:35.776 [main] EntityLoader - Static select for entity com.amgenz.entity.RecipeInstruction [NONE]: select recipeinst0_.id as id1_1_0_, recipeinst0_.instruction as instruct2_1_0_, recipeinst0_.instruction_order as instruct3_1_0_, recipeinst0_.recipe_id as recipe_i4_1_0_, recipe1_.id as id1_2_1_, recipe1_.calories as calories2_2_1_, recipe1_.carbohydrates as carbohyd3_2_1_, recipe1_.fat as fat4_2_1_, recipe1_.protein as protein5_2_1_, recipe1_.recipe_name as recipe_n6_2_1_, recipe1_.serving as serving7_2_1_, recipe1_.total_time_in_min as total_ti8_2_1_, recipe1_.type as type9_2_1_, recipe1_.user_id as user_id10_2_1_, ingredient2_.recipe_id as recipe_i5_0_2_, ingredient2_.id as id1_0_2_, ingredient2_.id as id1_0_3_, ingredient2_.ingredient as ingredie2_0_3_, ingredient2_.ingredient_amount as ingredie3_0_3_, ingredient2_.ingredient_amount_measurement as ingredie4_0_3_, ingredient2_.recipe_id as recipe_i5_0_3_, user3_.id as id1_3_4_, user3_.email as email2_3_4_, user3_.first_name as first_na3_3_4_, user3_.last_name as last_nam4_3_4_ from recipe_instruction recipeinst0_ left outer join recipes recipe1_ on recipeinst0_.recipe_id=recipe1_.id left outer join recipe_ingredient ingredient2_ on recipe1_.id=ingredient2_.recipe_id left outer join users user3_ on recipe1_.user_id=user3_.id where recipeinst0_.id=?
[DEBUG] 2023-03-01 13:47:35.777 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b30a54e]
[DEBUG] 2023-03-01 13:47:35.777 [main] MetamodelGraphWalker - Visiting attribute path : instruction
[DEBUG] 2023-03-01 13:47:35.777 [main] MetamodelGraphWalker - Visiting attribute path : instructionOrder
[DEBUG] 2023-03-01 13:47:35.777 [main] MetamodelGraphWalker - Visiting attribute path : recipe
[DEBUG] 2023-03-01 13:47:35.777 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e9beef2]
[DEBUG] 2023-03-01 13:47:35.777 [main] MetamodelGraphWalker - Visiting attribute path : recipe.calories
[DEBUG] 2023-03-01 13:47:35.777 [main] MetamodelGraphWalker - Visiting attribute path : recipe.carbohydrates
[DEBUG] 2023-03-01 13:47:35.777 [main] MetamodelGraphWalker - Visiting attribute path : recipe.fat
[DEBUG] 2023-03-01 13:47:35.777 [main] MetamodelGraphWalker - Visiting attribute path : recipe.ingredients
[DEBUG] 2023-03-01 13:47:35.777 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3111631d]
[DEBUG] 2023-03-01 13:47:35.778 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d70f312]
[DEBUG] 2023-03-01 13:47:35.778 [main] MetamodelGraphWalker - Visiting attribute path : recipe.ingredients.ingredient
[DEBUG] 2023-03-01 13:47:35.778 [main] MetamodelGraphWalker - Visiting attribute path : recipe.ingredients.ingredientAmount
[DEBUG] 2023-03-01 13:47:35.778 [main] MetamodelGraphWalker - Visiting attribute path : recipe.ingredients.ingredientAmountMeasurement
[DEBUG] 2023-03-01 13:47:35.778 [main] MetamodelGraphWalker - Visiting attribute path : recipe.ingredients.recipe
[DEBUG] 2023-03-01 13:47:35.778 [main] MetamodelGraphWalker - Property path deemed to be circular : recipe.ingredients.recipe
[DEBUG] 2023-03-01 13:47:35.778 [main] MetamodelGraphWalker - Visiting attribute path : recipe.instructions
[DEBUG] 2023-03-01 13:47:35.778 [main] MetamodelGraphWalker - Property path deemed to be circular : recipe.instructions
[DEBUG] 2023-03-01 13:47:35.778 [main] MetamodelGraphWalker - Visiting attribute path : recipe.protein
[DEBUG] 2023-03-01 13:47:35.778 [main] MetamodelGraphWalker - Visiting attribute path : recipe.recipeName
[DEBUG] 2023-03-01 13:47:35.778 [main] MetamodelGraphWalker - Visiting attribute path : recipe.serving
[DEBUG] 2023-03-01 13:47:35.778 [main] MetamodelGraphWalker - Visiting attribute path : recipe.totalTimeInMin
[DEBUG] 2023-03-01 13:47:35.778 [main] MetamodelGraphWalker - Visiting attribute path : recipe.type
[DEBUG] 2023-03-01 13:47:35.778 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user
[DEBUG] 2023-03-01 13:47:35.778 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74123110]
[DEBUG] 2023-03-01 13:47:35.779 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.email
[DEBUG] 2023-03-01 13:47:35.779 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.firstName
[DEBUG] 2023-03-01 13:47:35.779 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.lastName
[DEBUG] 2023-03-01 13:47:35.779 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.recipes
[DEBUG] 2023-03-01 13:47:35.779 [main] MetamodelGraphWalker - Property path deemed to be circular : recipe.user.recipes
[DEBUG] 2023-03-01 13:47:35.779 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-03-01 13:47:35.779 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-03-01 13:47:35.781 [main] LoadPlanTreePrinter - LoadPlan(entity=com.amgenz.entity.RecipeInstruction)
    - Returns
       - EntityReturnImpl(entity=com.amgenz.entity.RecipeInstruction, querySpaceUid=<gen:0>, path=com.amgenz.entity.RecipeInstruction)
          - EntityAttributeFetchImpl(entity=com.amgenz.entity.Recipe, querySpaceUid=<gen:1>, path=com.amgenz.entity.RecipeInstruction.recipe)
             - CollectionAttributeFetchImpl(collection=com.amgenz.entity.Recipe.ingredients, querySpaceUid=<gen:2>, path=com.amgenz.entity.RecipeInstruction.recipe.ingredients)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeIngredient, querySpaceUid=<gen:3>, path=com.amgenz.entity.RecipeInstruction.recipe.ingredients.<elements>)
             - EntityAttributeFetchImpl(entity=com.amgenz.entity.User, querySpaceUid=<gen:4>, path=com.amgenz.entity.RecipeInstruction.recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.amgenz.entity.RecipeInstruction)
          - SQL table alias mapping - recipeinst0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipe)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.amgenz.entity.Recipe)
                - SQL table alias mapping - recipe1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(ingredients)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.amgenz.entity.Recipe.ingredients)
                      - SQL table alias mapping - ingredient2_
                      - alias suffix - 2_
                      - suffixed key columns - {recipe_i5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.amgenz.entity.RecipeIngredient)
                            - SQL table alias mapping - ingredient2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.amgenz.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_3_4_}

[DEBUG] 2023-03-01 13:47:35.781 [main] EntityLoader - Static select for entity com.amgenz.entity.RecipeInstruction [READ]: select recipeinst0_.id as id1_1_0_, recipeinst0_.instruction as instruct2_1_0_, recipeinst0_.instruction_order as instruct3_1_0_, recipeinst0_.recipe_id as recipe_i4_1_0_, recipe1_.id as id1_2_1_, recipe1_.calories as calories2_2_1_, recipe1_.carbohydrates as carbohyd3_2_1_, recipe1_.fat as fat4_2_1_, recipe1_.protein as protein5_2_1_, recipe1_.recipe_name as recipe_n6_2_1_, recipe1_.serving as serving7_2_1_, recipe1_.total_time_in_min as total_ti8_2_1_, recipe1_.type as type9_2_1_, recipe1_.user_id as user_id10_2_1_, ingredient2_.recipe_id as recipe_i5_0_2_, ingredient2_.id as id1_0_2_, ingredient2_.id as id1_0_3_, ingredient2_.ingredient as ingredie2_0_3_, ingredient2_.ingredient_amount as ingredie3_0_3_, ingredient2_.ingredient_amount_measurement as ingredie4_0_3_, ingredient2_.recipe_id as recipe_i5_0_3_, user3_.id as id1_3_4_, user3_.email as email2_3_4_, user3_.first_name as first_na3_3_4_, user3_.last_name as last_nam4_3_4_ from recipe_instruction recipeinst0_ left outer join recipes recipe1_ on recipeinst0_.recipe_id=recipe1_.id left outer join recipe_ingredient ingredient2_ on recipe1_.id=ingredient2_.recipe_id left outer join users user3_ on recipe1_.user_id=user3_.id where recipeinst0_.id=?
[DEBUG] 2023-03-01 13:47:35.789 [main] Loader - Static select for action ACTION_MERGE on entity com.amgenz.entity.RecipeInstruction: select recipeinst0_.id as id1_1_0_, recipeinst0_.instruction as instruct2_1_0_, recipeinst0_.instruction_order as instruct3_1_0_, recipeinst0_.recipe_id as recipe_i4_1_0_ from recipe_instruction recipeinst0_ where recipeinst0_.id=?
[DEBUG] 2023-03-01 13:47:35.790 [main] Loader - Static select for action ACTION_REFRESH on entity com.amgenz.entity.RecipeInstruction: select recipeinst0_.id as id1_1_0_, recipeinst0_.instruction as instruct2_1_0_, recipeinst0_.instruction_order as instruct3_1_0_, recipeinst0_.recipe_id as recipe_i4_1_0_ from recipe_instruction recipeinst0_ where recipeinst0_.id=?
[DEBUG] 2023-03-01 13:47:35.790 [main] AbstractEntityPersister - Static SQL for entity: com.amgenz.entity.User
[DEBUG] 2023-03-01 13:47:35.791 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2023-03-01 13:47:35.791 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_3_, user_.first_name as first_na3_3_, user_.last_name as last_nam4_3_ from users user_ where user_.id=?
[DEBUG] 2023-03-01 13:47:35.793 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, id) values (?, ?, ?, ?)
[DEBUG] 2023-03-01 13:47:35.794 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=? where id=?
[DEBUG] 2023-03-01 13:47:35.794 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2023-03-01 13:47:35.794 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name) values (?, ?, ?)
[DEBUG] 2023-03-01 13:47:35.795 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b7facc7]
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2023-03-01 13:47:35.795 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24197b13]
[DEBUG] 2023-03-01 13:47:35.795 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b97eeb]
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Visiting attribute path : recipes.calories
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Visiting attribute path : recipes.carbohydrates
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Visiting attribute path : recipes.fat
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2023-03-01 13:47:35.795 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@734ce281]
[DEBUG] 2023-03-01 13:47:35.795 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b89425]
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients.ingredient
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients.ingredientAmount
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients.ingredientAmountMeasurement
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients.recipe
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.ingredients.recipe
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Visiting attribute path : recipes.instructions
[DEBUG] 2023-03-01 13:47:35.795 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@478967eb]
[DEBUG] 2023-03-01 13:47:35.795 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a1dda83]
[DEBUG] 2023-03-01 13:47:35.795 [main] MetamodelGraphWalker - Visiting attribute path : recipes.instructions.instruction
[DEBUG] 2023-03-01 13:47:35.796 [main] MetamodelGraphWalker - Visiting attribute path : recipes.instructions.instructionOrder
[DEBUG] 2023-03-01 13:47:35.796 [main] MetamodelGraphWalker - Visiting attribute path : recipes.instructions.recipe
[DEBUG] 2023-03-01 13:47:35.796 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.instructions.recipe
[DEBUG] 2023-03-01 13:47:35.796 [main] MetamodelGraphWalker - Visiting attribute path : recipes.protein
[DEBUG] 2023-03-01 13:47:35.796 [main] MetamodelGraphWalker - Visiting attribute path : recipes.recipeName
[DEBUG] 2023-03-01 13:47:35.796 [main] MetamodelGraphWalker - Visiting attribute path : recipes.serving
[DEBUG] 2023-03-01 13:47:35.796 [main] MetamodelGraphWalker - Visiting attribute path : recipes.totalTimeInMin
[DEBUG] 2023-03-01 13:47:35.796 [main] MetamodelGraphWalker - Visiting attribute path : recipes.type
[DEBUG] 2023-03-01 13:47:35.796 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2023-03-01 13:47:35.796 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2023-03-01 13:47:35.796 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-03-01 13:47:35.796 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-03-01 13:47:35.797 [main] LoadPlanTreePrinter - LoadPlan(entity=com.amgenz.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.amgenz.entity.User, querySpaceUid=<gen:0>, path=com.amgenz.entity.User)
          - CollectionAttributeFetchImpl(collection=com.amgenz.entity.User.recipes, querySpaceUid=<gen:1>, path=com.amgenz.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.Recipe, querySpaceUid=<gen:2>, path=com.amgenz.entity.User.recipes.<elements>)
                - CollectionAttributeFetchImpl(collection=com.amgenz.entity.Recipe.ingredients, querySpaceUid=<gen:3>, path=com.amgenz.entity.User.recipes.<elements>.ingredients)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeIngredient, querySpaceUid=<gen:4>, path=com.amgenz.entity.User.recipes.<elements>.ingredients.<elements>)
                - CollectionAttributeFetchImpl(collection=com.amgenz.entity.Recipe.instructions, querySpaceUid=<gen:5>, path=com.amgenz.entity.User.recipes.<elements>.instructions)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeInstruction, querySpaceUid=<gen:6>, path=com.amgenz.entity.User.recipes.<elements>.instructions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.amgenz.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.amgenz.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id10_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.amgenz.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                      - JOIN (JoinDefinedByMetadata(ingredients)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.amgenz.entity.Recipe.ingredients)
                            - SQL table alias mapping - ingredient2_
                            - alias suffix - 3_
                            - suffixed key columns - {recipe_i5_0_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_0_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.amgenz.entity.RecipeIngredient)
                                  - SQL table alias mapping - ingredient2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_0_4_}
                      - JOIN (JoinDefinedByMetadata(instructions)) : <gen:2> -> <gen:5>
                         - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.amgenz.entity.Recipe.instructions)
                            - SQL table alias mapping - instructio3_
                            - alias suffix - 5_
                            - suffixed key columns - {recipe_i4_1_5_}
                            - entity-element alias suffix - 6_
                            - 6_entity-element suffixed key columns - id1_1_6_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                               - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.amgenz.entity.RecipeInstruction)
                                  - SQL table alias mapping - instructio3_
                                  - alias suffix - 6_
                                  - suffixed key columns - {id1_1_6_}

[DEBUG] 2023-03-01 13:47:35.797 [main] EntityLoader - Static select for entity com.amgenz.entity.User [NONE]: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, recipes1_.user_id as user_id10_2_1_, recipes1_.id as id1_2_1_, recipes1_.id as id1_2_2_, recipes1_.calories as calories2_2_2_, recipes1_.carbohydrates as carbohyd3_2_2_, recipes1_.fat as fat4_2_2_, recipes1_.protein as protein5_2_2_, recipes1_.recipe_name as recipe_n6_2_2_, recipes1_.serving as serving7_2_2_, recipes1_.total_time_in_min as total_ti8_2_2_, recipes1_.type as type9_2_2_, recipes1_.user_id as user_id10_2_2_, ingredient2_.recipe_id as recipe_i5_0_3_, ingredient2_.id as id1_0_3_, ingredient2_.id as id1_0_4_, ingredient2_.ingredient as ingredie2_0_4_, ingredient2_.ingredient_amount as ingredie3_0_4_, ingredient2_.ingredient_amount_measurement as ingredie4_0_4_, ingredient2_.recipe_id as recipe_i5_0_4_, instructio3_.recipe_id as recipe_i4_1_5_, instructio3_.id as id1_1_5_, instructio3_.id as id1_1_6_, instructio3_.instruction as instruct2_1_6_, instructio3_.instruction_order as instruct3_1_6_, instructio3_.recipe_id as recipe_i4_1_6_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id left outer join recipe_ingredient ingredient2_ on recipes1_.id=ingredient2_.recipe_id left outer join recipe_instruction instructio3_ on recipes1_.id=instructio3_.recipe_id where user0_.id=?
[DEBUG] 2023-03-01 13:47:35.797 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760f1081]
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2023-03-01 13:47:35.797 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@401e02b4]
[DEBUG] 2023-03-01 13:47:35.797 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@164d01ba]
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Visiting attribute path : recipes.calories
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Visiting attribute path : recipes.carbohydrates
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Visiting attribute path : recipes.fat
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2023-03-01 13:47:35.797 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6afbe6a1]
[DEBUG] 2023-03-01 13:47:35.797 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14457a95]
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients.ingredient
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients.ingredientAmount
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients.ingredientAmountMeasurement
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients.recipe
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.ingredients.recipe
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Visiting attribute path : recipes.instructions
[DEBUG] 2023-03-01 13:47:35.797 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@259287ac]
[DEBUG] 2023-03-01 13:47:35.797 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1abcd059]
[DEBUG] 2023-03-01 13:47:35.797 [main] MetamodelGraphWalker - Visiting attribute path : recipes.instructions.instruction
[DEBUG] 2023-03-01 13:47:35.798 [main] MetamodelGraphWalker - Visiting attribute path : recipes.instructions.instructionOrder
[DEBUG] 2023-03-01 13:47:35.798 [main] MetamodelGraphWalker - Visiting attribute path : recipes.instructions.recipe
[DEBUG] 2023-03-01 13:47:35.798 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.instructions.recipe
[DEBUG] 2023-03-01 13:47:35.798 [main] MetamodelGraphWalker - Visiting attribute path : recipes.protein
[DEBUG] 2023-03-01 13:47:35.798 [main] MetamodelGraphWalker - Visiting attribute path : recipes.recipeName
[DEBUG] 2023-03-01 13:47:35.798 [main] MetamodelGraphWalker - Visiting attribute path : recipes.serving
[DEBUG] 2023-03-01 13:47:35.798 [main] MetamodelGraphWalker - Visiting attribute path : recipes.totalTimeInMin
[DEBUG] 2023-03-01 13:47:35.798 [main] MetamodelGraphWalker - Visiting attribute path : recipes.type
[DEBUG] 2023-03-01 13:47:35.798 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2023-03-01 13:47:35.798 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2023-03-01 13:47:35.798 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-03-01 13:47:35.798 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-03-01 13:47:35.804 [main] LoadPlanTreePrinter - LoadPlan(entity=com.amgenz.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.amgenz.entity.User, querySpaceUid=<gen:0>, path=com.amgenz.entity.User)
          - CollectionAttributeFetchImpl(collection=com.amgenz.entity.User.recipes, querySpaceUid=<gen:1>, path=com.amgenz.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.Recipe, querySpaceUid=<gen:2>, path=com.amgenz.entity.User.recipes.<elements>)
                - CollectionAttributeFetchImpl(collection=com.amgenz.entity.Recipe.ingredients, querySpaceUid=<gen:3>, path=com.amgenz.entity.User.recipes.<elements>.ingredients)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeIngredient, querySpaceUid=<gen:4>, path=com.amgenz.entity.User.recipes.<elements>.ingredients.<elements>)
                - CollectionAttributeFetchImpl(collection=com.amgenz.entity.Recipe.instructions, querySpaceUid=<gen:5>, path=com.amgenz.entity.User.recipes.<elements>.instructions)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeInstruction, querySpaceUid=<gen:6>, path=com.amgenz.entity.User.recipes.<elements>.instructions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.amgenz.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.amgenz.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id10_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.amgenz.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                      - JOIN (JoinDefinedByMetadata(ingredients)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.amgenz.entity.Recipe.ingredients)
                            - SQL table alias mapping - ingredient2_
                            - alias suffix - 3_
                            - suffixed key columns - {recipe_i5_0_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_0_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.amgenz.entity.RecipeIngredient)
                                  - SQL table alias mapping - ingredient2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_0_4_}
                      - JOIN (JoinDefinedByMetadata(instructions)) : <gen:2> -> <gen:5>
                         - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.amgenz.entity.Recipe.instructions)
                            - SQL table alias mapping - instructio3_
                            - alias suffix - 5_
                            - suffixed key columns - {recipe_i4_1_5_}
                            - entity-element alias suffix - 6_
                            - 6_entity-element suffixed key columns - id1_1_6_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                               - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.amgenz.entity.RecipeInstruction)
                                  - SQL table alias mapping - instructio3_
                                  - alias suffix - 6_
                                  - suffixed key columns - {id1_1_6_}

[DEBUG] 2023-03-01 13:47:35.804 [main] EntityLoader - Static select for entity com.amgenz.entity.User [READ]: select user0_.id as id1_3_0_, user0_.email as email2_3_0_, user0_.first_name as first_na3_3_0_, user0_.last_name as last_nam4_3_0_, recipes1_.user_id as user_id10_2_1_, recipes1_.id as id1_2_1_, recipes1_.id as id1_2_2_, recipes1_.calories as calories2_2_2_, recipes1_.carbohydrates as carbohyd3_2_2_, recipes1_.fat as fat4_2_2_, recipes1_.protein as protein5_2_2_, recipes1_.recipe_name as recipe_n6_2_2_, recipes1_.serving as serving7_2_2_, recipes1_.total_time_in_min as total_ti8_2_2_, recipes1_.type as type9_2_2_, recipes1_.user_id as user_id10_2_2_, ingredient2_.recipe_id as recipe_i5_0_3_, ingredient2_.id as id1_0_3_, ingredient2_.id as id1_0_4_, ingredient2_.ingredient as ingredie2_0_4_, ingredient2_.ingredient_amount as ingredie3_0_4_, ingredient2_.ingredient_amount_measurement as ingredie4_0_4_, ingredient2_.recipe_id as recipe_i5_0_4_, instructio3_.recipe_id as recipe_i4_1_5_, instructio3_.id as id1_1_5_, instructio3_.id as id1_1_6_, instructio3_.instruction as instruct2_1_6_, instructio3_.instruction_order as instruct3_1_6_, instructio3_.recipe_id as recipe_i4_1_6_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id left outer join recipe_ingredient ingredient2_ on recipes1_.id=ingredient2_.recipe_id left outer join recipe_instruction instructio3_ on recipes1_.id=instructio3_.recipe_id where user0_.id=?
[DEBUG] 2023-03-01 13:47:35.807 [main] Loader - Static select for action ACTION_MERGE on entity com.amgenz.entity.User: select user0_.id as id1_3_1_, user0_.email as email2_3_1_, user0_.first_name as first_na3_3_1_, user0_.last_name as last_nam4_3_1_, recipes1_.user_id as user_id10_2_3_, recipes1_.id as id1_2_3_, recipes1_.id as id1_2_0_, recipes1_.calories as calories2_2_0_, recipes1_.carbohydrates as carbohyd3_2_0_, recipes1_.fat as fat4_2_0_, recipes1_.protein as protein5_2_0_, recipes1_.recipe_name as recipe_n6_2_0_, recipes1_.serving as serving7_2_0_, recipes1_.total_time_in_min as total_ti8_2_0_, recipes1_.type as type9_2_0_, recipes1_.user_id as user_id10_2_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2023-03-01 13:47:35.808 [main] Loader - Static select for action ACTION_REFRESH on entity com.amgenz.entity.User: select user0_.id as id1_3_1_, user0_.email as email2_3_1_, user0_.first_name as first_na3_3_1_, user0_.last_name as last_nam4_3_1_, recipes1_.user_id as user_id10_2_3_, recipes1_.id as id1_2_3_, recipes1_.id as id1_2_0_, recipes1_.calories as calories2_2_0_, recipes1_.carbohydrates as carbohyd3_2_0_, recipes1_.fat as fat4_2_0_, recipes1_.protein as protein5_2_0_, recipes1_.recipe_name as recipe_n6_2_0_, recipes1_.serving as serving7_2_0_, recipes1_.total_time_in_min as total_ti8_2_0_, recipes1_.type as type9_2_0_, recipes1_.user_id as user_id10_2_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2023-03-01 13:47:35.808 [main] AbstractEntityPersister - Static SQL for entity: com.amgenz.entity.Recipe
[DEBUG] 2023-03-01 13:47:35.808 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2023-03-01 13:47:35.808 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.calories as calories2_2_, recipe_.carbohydrates as carbohyd3_2_, recipe_.fat as fat4_2_, recipe_.protein as protein5_2_, recipe_.recipe_name as recipe_n6_2_, recipe_.serving as serving7_2_, recipe_.total_time_in_min as total_ti8_2_, recipe_.type as type9_2_, recipe_.user_id as user_id10_2_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2023-03-01 13:47:35.808 [main] AbstractEntityPersister -  Insert 0: insert into recipes (calories, carbohydrates, fat, protein, recipe_name, serving, total_time_in_min, type, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2023-03-01 13:47:35.808 [main] AbstractEntityPersister -  Update 0: update recipes set calories=?, carbohydrates=?, fat=?, protein=?, recipe_name=?, serving=?, total_time_in_min=?, type=?, user_id=? where id=?
[DEBUG] 2023-03-01 13:47:35.808 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2023-03-01 13:47:35.808 [main] AbstractEntityPersister -  Identity insert: insert into recipes (calories, carbohydrates, fat, protein, recipe_name, serving, total_time_in_min, type, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2023-03-01 13:47:35.808 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70091872]
[DEBUG] 2023-03-01 13:47:35.808 [main] MetamodelGraphWalker - Visiting attribute path : calories
[DEBUG] 2023-03-01 13:47:35.809 [main] MetamodelGraphWalker - Visiting attribute path : carbohydrates
[DEBUG] 2023-03-01 13:47:35.809 [main] MetamodelGraphWalker - Visiting attribute path : fat
[DEBUG] 2023-03-01 13:47:35.809 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2023-03-01 13:47:35.809 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d99ee1b]
[DEBUG] 2023-03-01 13:47:35.809 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3915e7c3]
[DEBUG] 2023-03-01 13:47:35.809 [main] MetamodelGraphWalker - Visiting attribute path : ingredients.ingredient
[DEBUG] 2023-03-01 13:47:35.809 [main] MetamodelGraphWalker - Visiting attribute path : ingredients.ingredientAmount
[DEBUG] 2023-03-01 13:47:35.809 [main] MetamodelGraphWalker - Visiting attribute path : ingredients.ingredientAmountMeasurement
[DEBUG] 2023-03-01 13:47:35.809 [main] MetamodelGraphWalker - Visiting attribute path : ingredients.recipe
[DEBUG] 2023-03-01 13:47:35.809 [main] MetamodelGraphWalker - Property path deemed to be circular : ingredients.recipe
[DEBUG] 2023-03-01 13:47:35.809 [main] MetamodelGraphWalker - Visiting attribute path : instructions
[DEBUG] 2023-03-01 13:47:35.809 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e362407]
[DEBUG] 2023-03-01 13:47:35.809 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388be5fd]
[DEBUG] 2023-03-01 13:47:35.809 [main] MetamodelGraphWalker - Visiting attribute path : instructions.instruction
[DEBUG] 2023-03-01 13:47:35.809 [main] MetamodelGraphWalker - Visiting attribute path : instructions.instructionOrder
[DEBUG] 2023-03-01 13:47:35.810 [main] MetamodelGraphWalker - Visiting attribute path : instructions.recipe
[DEBUG] 2023-03-01 13:47:35.810 [main] MetamodelGraphWalker - Property path deemed to be circular : instructions.recipe
[DEBUG] 2023-03-01 13:47:35.810 [main] MetamodelGraphWalker - Visiting attribute path : protein
[DEBUG] 2023-03-01 13:47:35.810 [main] MetamodelGraphWalker - Visiting attribute path : recipeName
[DEBUG] 2023-03-01 13:47:35.810 [main] MetamodelGraphWalker - Visiting attribute path : serving
[DEBUG] 2023-03-01 13:47:35.810 [main] MetamodelGraphWalker - Visiting attribute path : totalTimeInMin
[DEBUG] 2023-03-01 13:47:35.810 [main] MetamodelGraphWalker - Visiting attribute path : type
[DEBUG] 2023-03-01 13:47:35.810 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2023-03-01 13:47:35.810 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8f2e3e6]
[DEBUG] 2023-03-01 13:47:35.810 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2023-03-01 13:47:35.810 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2023-03-01 13:47:35.811 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2023-03-01 13:47:35.811 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2023-03-01 13:47:35.811 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2023-03-01 13:47:35.811 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-03-01 13:47:35.811 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-03-01 13:47:35.813 [main] LoadPlanTreePrinter - LoadPlan(entity=com.amgenz.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.amgenz.entity.Recipe, querySpaceUid=<gen:0>, path=com.amgenz.entity.Recipe)
          - CollectionAttributeFetchImpl(collection=com.amgenz.entity.Recipe.ingredients, querySpaceUid=<gen:1>, path=com.amgenz.entity.Recipe.ingredients)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeIngredient, querySpaceUid=<gen:2>, path=com.amgenz.entity.Recipe.ingredients.<elements>)
          - CollectionAttributeFetchImpl(collection=com.amgenz.entity.Recipe.instructions, querySpaceUid=<gen:3>, path=com.amgenz.entity.Recipe.instructions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeInstruction, querySpaceUid=<gen:4>, path=com.amgenz.entity.Recipe.instructions.<elements>)
          - EntityAttributeFetchImpl(entity=com.amgenz.entity.User, querySpaceUid=<gen:5>, path=com.amgenz.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.amgenz.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(ingredients)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.amgenz.entity.Recipe.ingredients)
                - SQL table alias mapping - ingredient1_
                - alias suffix - 1_
                - suffixed key columns - {recipe_i5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.amgenz.entity.RecipeIngredient)
                      - SQL table alias mapping - ingredient1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(instructions)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.amgenz.entity.Recipe.instructions)
                - SQL table alias mapping - instructio2_
                - alias suffix - 3_
                - suffixed key columns - {recipe_i4_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.amgenz.entity.RecipeInstruction)
                      - SQL table alias mapping - instructio2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.amgenz.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 5_
                - suffixed key columns - {id1_3_5_}

[DEBUG] 2023-03-01 13:47:35.813 [main] EntityLoader - Static select for entity com.amgenz.entity.Recipe [NONE]: select recipe0_.id as id1_2_0_, recipe0_.calories as calories2_2_0_, recipe0_.carbohydrates as carbohyd3_2_0_, recipe0_.fat as fat4_2_0_, recipe0_.protein as protein5_2_0_, recipe0_.recipe_name as recipe_n6_2_0_, recipe0_.serving as serving7_2_0_, recipe0_.total_time_in_min as total_ti8_2_0_, recipe0_.type as type9_2_0_, recipe0_.user_id as user_id10_2_0_, ingredient1_.recipe_id as recipe_i5_0_1_, ingredient1_.id as id1_0_1_, ingredient1_.id as id1_0_2_, ingredient1_.ingredient as ingredie2_0_2_, ingredient1_.ingredient_amount as ingredie3_0_2_, ingredient1_.ingredient_amount_measurement as ingredie4_0_2_, ingredient1_.recipe_id as recipe_i5_0_2_, instructio2_.recipe_id as recipe_i4_1_3_, instructio2_.id as id1_1_3_, instructio2_.id as id1_1_4_, instructio2_.instruction as instruct2_1_4_, instructio2_.instruction_order as instruct3_1_4_, instructio2_.recipe_id as recipe_i4_1_4_, user3_.id as id1_3_5_, user3_.email as email2_3_5_, user3_.first_name as first_na3_3_5_, user3_.last_name as last_nam4_3_5_ from recipes recipe0_ left outer join recipe_ingredient ingredient1_ on recipe0_.id=ingredient1_.recipe_id left outer join recipe_instruction instructio2_ on recipe0_.id=instructio2_.recipe_id left outer join users user3_ on recipe0_.user_id=user3_.id where recipe0_.id=?
[DEBUG] 2023-03-01 13:47:35.813 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c8efde4]
[DEBUG] 2023-03-01 13:47:35.813 [main] MetamodelGraphWalker - Visiting attribute path : calories
[DEBUG] 2023-03-01 13:47:35.813 [main] MetamodelGraphWalker - Visiting attribute path : carbohydrates
[DEBUG] 2023-03-01 13:47:35.813 [main] MetamodelGraphWalker - Visiting attribute path : fat
[DEBUG] 2023-03-01 13:47:35.813 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2023-03-01 13:47:35.813 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b170235]
[DEBUG] 2023-03-01 13:47:35.815 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9bf744]
[DEBUG] 2023-03-01 13:47:35.816 [main] MetamodelGraphWalker - Visiting attribute path : ingredients.ingredient
[DEBUG] 2023-03-01 13:47:35.816 [main] MetamodelGraphWalker - Visiting attribute path : ingredients.ingredientAmount
[DEBUG] 2023-03-01 13:47:35.816 [main] MetamodelGraphWalker - Visiting attribute path : ingredients.ingredientAmountMeasurement
[DEBUG] 2023-03-01 13:47:35.816 [main] MetamodelGraphWalker - Visiting attribute path : ingredients.recipe
[DEBUG] 2023-03-01 13:47:35.816 [main] MetamodelGraphWalker - Property path deemed to be circular : ingredients.recipe
[DEBUG] 2023-03-01 13:47:35.816 [main] MetamodelGraphWalker - Visiting attribute path : instructions
[DEBUG] 2023-03-01 13:47:35.816 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b4814d0]
[DEBUG] 2023-03-01 13:47:35.817 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae8fb2a]
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Visiting attribute path : instructions.instruction
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Visiting attribute path : instructions.instructionOrder
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Visiting attribute path : instructions.recipe
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Property path deemed to be circular : instructions.recipe
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Visiting attribute path : protein
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Visiting attribute path : recipeName
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Visiting attribute path : serving
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Visiting attribute path : totalTimeInMin
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Visiting attribute path : type
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2023-03-01 13:47:35.817 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b441e56]
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2023-03-01 13:47:35.817 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2023-03-01 13:47:35.817 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-03-01 13:47:35.817 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-03-01 13:47:35.818 [main] LoadPlanTreePrinter - LoadPlan(entity=com.amgenz.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.amgenz.entity.Recipe, querySpaceUid=<gen:0>, path=com.amgenz.entity.Recipe)
          - CollectionAttributeFetchImpl(collection=com.amgenz.entity.Recipe.ingredients, querySpaceUid=<gen:1>, path=com.amgenz.entity.Recipe.ingredients)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeIngredient, querySpaceUid=<gen:2>, path=com.amgenz.entity.Recipe.ingredients.<elements>)
          - CollectionAttributeFetchImpl(collection=com.amgenz.entity.Recipe.instructions, querySpaceUid=<gen:3>, path=com.amgenz.entity.Recipe.instructions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeInstruction, querySpaceUid=<gen:4>, path=com.amgenz.entity.Recipe.instructions.<elements>)
          - EntityAttributeFetchImpl(entity=com.amgenz.entity.User, querySpaceUid=<gen:5>, path=com.amgenz.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.amgenz.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(ingredients)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.amgenz.entity.Recipe.ingredients)
                - SQL table alias mapping - ingredient1_
                - alias suffix - 1_
                - suffixed key columns - {recipe_i5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.amgenz.entity.RecipeIngredient)
                      - SQL table alias mapping - ingredient1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(instructions)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.amgenz.entity.Recipe.instructions)
                - SQL table alias mapping - instructio2_
                - alias suffix - 3_
                - suffixed key columns - {recipe_i4_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.amgenz.entity.RecipeInstruction)
                      - SQL table alias mapping - instructio2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.amgenz.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 5_
                - suffixed key columns - {id1_3_5_}

[DEBUG] 2023-03-01 13:47:35.818 [main] EntityLoader - Static select for entity com.amgenz.entity.Recipe [READ]: select recipe0_.id as id1_2_0_, recipe0_.calories as calories2_2_0_, recipe0_.carbohydrates as carbohyd3_2_0_, recipe0_.fat as fat4_2_0_, recipe0_.protein as protein5_2_0_, recipe0_.recipe_name as recipe_n6_2_0_, recipe0_.serving as serving7_2_0_, recipe0_.total_time_in_min as total_ti8_2_0_, recipe0_.type as type9_2_0_, recipe0_.user_id as user_id10_2_0_, ingredient1_.recipe_id as recipe_i5_0_1_, ingredient1_.id as id1_0_1_, ingredient1_.id as id1_0_2_, ingredient1_.ingredient as ingredie2_0_2_, ingredient1_.ingredient_amount as ingredie3_0_2_, ingredient1_.ingredient_amount_measurement as ingredie4_0_2_, ingredient1_.recipe_id as recipe_i5_0_2_, instructio2_.recipe_id as recipe_i4_1_3_, instructio2_.id as id1_1_3_, instructio2_.id as id1_1_4_, instructio2_.instruction as instruct2_1_4_, instructio2_.instruction_order as instruct3_1_4_, instructio2_.recipe_id as recipe_i4_1_4_, user3_.id as id1_3_5_, user3_.email as email2_3_5_, user3_.first_name as first_na3_3_5_, user3_.last_name as last_nam4_3_5_ from recipes recipe0_ left outer join recipe_ingredient ingredient1_ on recipe0_.id=ingredient1_.recipe_id left outer join recipe_instruction instructio2_ on recipe0_.id=instructio2_.recipe_id left outer join users user3_ on recipe0_.user_id=user3_.id where recipe0_.id=?
[DEBUG] 2023-03-01 13:47:35.818 [main] Loader - Static select for action ACTION_MERGE on entity com.amgenz.entity.Recipe: select recipe0_.id as id1_2_1_, recipe0_.calories as calories2_2_1_, recipe0_.carbohydrates as carbohyd3_2_1_, recipe0_.fat as fat4_2_1_, recipe0_.protein as protein5_2_1_, recipe0_.recipe_name as recipe_n6_2_1_, recipe0_.serving as serving7_2_1_, recipe0_.total_time_in_min as total_ti8_2_1_, recipe0_.type as type9_2_1_, recipe0_.user_id as user_id10_2_1_, ingredient1_.recipe_id as recipe_i5_0_3_, ingredient1_.id as id1_0_3_, ingredient1_.id as id1_0_0_, ingredient1_.ingredient as ingredie2_0_0_, ingredient1_.ingredient_amount as ingredie3_0_0_, ingredient1_.ingredient_amount_measurement as ingredie4_0_0_, ingredient1_.recipe_id as recipe_i5_0_0_ from recipes recipe0_ left outer join recipe_ingredient ingredient1_ on recipe0_.id=ingredient1_.recipe_id where recipe0_.id=?
[DEBUG] 2023-03-01 13:47:35.818 [main] Loader - Static select for action ACTION_REFRESH on entity com.amgenz.entity.Recipe: select recipe0_.id as id1_2_1_, recipe0_.calories as calories2_2_1_, recipe0_.carbohydrates as carbohyd3_2_1_, recipe0_.fat as fat4_2_1_, recipe0_.protein as protein5_2_1_, recipe0_.recipe_name as recipe_n6_2_1_, recipe0_.serving as serving7_2_1_, recipe0_.total_time_in_min as total_ti8_2_1_, recipe0_.type as type9_2_1_, recipe0_.user_id as user_id10_2_1_, ingredient1_.recipe_id as recipe_i5_0_3_, ingredient1_.id as id1_0_3_, ingredient1_.id as id1_0_0_, ingredient1_.ingredient as ingredie2_0_0_, ingredient1_.ingredient_amount as ingredie3_0_0_, ingredient1_.ingredient_amount_measurement as ingredie4_0_0_, ingredient1_.recipe_id as recipe_i5_0_0_ from recipes recipe0_ left outer join recipe_ingredient ingredient1_ on recipe0_.id=ingredient1_.recipe_id where recipe0_.id=?
[DEBUG] 2023-03-01 13:47:35.818 [main] AbstractEntityPersister - Static SQL for entity: com.amgenz.entity.RecipeIngredient
[DEBUG] 2023-03-01 13:47:35.818 [main] AbstractEntityPersister -  Version select: select id from recipe_ingredient where id =?
[DEBUG] 2023-03-01 13:47:35.818 [main] AbstractEntityPersister -  Snapshot select: select recipeingr_.id, recipeingr_.ingredient as ingredie2_0_, recipeingr_.ingredient_amount as ingredie3_0_, recipeingr_.ingredient_amount_measurement as ingredie4_0_, recipeingr_.recipe_id as recipe_i5_0_ from recipe_ingredient recipeingr_ where recipeingr_.id=?
[DEBUG] 2023-03-01 13:47:35.818 [main] AbstractEntityPersister -  Insert 0: insert into recipe_ingredient (ingredient, ingredient_amount, ingredient_amount_measurement, recipe_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2023-03-01 13:47:35.818 [main] AbstractEntityPersister -  Update 0: update recipe_ingredient set ingredient=?, ingredient_amount=?, ingredient_amount_measurement=?, recipe_id=? where id=?
[DEBUG] 2023-03-01 13:47:35.818 [main] AbstractEntityPersister -  Delete 0: delete from recipe_ingredient where id=?
[DEBUG] 2023-03-01 13:47:35.818 [main] AbstractEntityPersister -  Identity insert: insert into recipe_ingredient (ingredient, ingredient_amount, ingredient_amount_measurement, recipe_id) values (?, ?, ?, ?)
[DEBUG] 2023-03-01 13:47:35.818 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a109ff7]
[DEBUG] 2023-03-01 13:47:35.818 [main] MetamodelGraphWalker - Visiting attribute path : ingredient
[DEBUG] 2023-03-01 13:47:35.818 [main] MetamodelGraphWalker - Visiting attribute path : ingredientAmount
[DEBUG] 2023-03-01 13:47:35.818 [main] MetamodelGraphWalker - Visiting attribute path : ingredientAmountMeasurement
[DEBUG] 2023-03-01 13:47:35.818 [main] MetamodelGraphWalker - Visiting attribute path : recipe
[DEBUG] 2023-03-01 13:47:35.819 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a2773a8]
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.calories
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.carbohydrates
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.fat
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.ingredients
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Property path deemed to be circular : recipe.ingredients
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.instructions
[DEBUG] 2023-03-01 13:47:35.819 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46612bfc]
[DEBUG] 2023-03-01 13:47:35.819 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f213a2]
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.instructions.instruction
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.instructions.instructionOrder
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.instructions.recipe
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Property path deemed to be circular : recipe.instructions.recipe
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.protein
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.recipeName
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.serving
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.totalTimeInMin
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.type
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user
[DEBUG] 2023-03-01 13:47:35.819 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15369d73]
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.email
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.firstName
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.lastName
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.recipes
[DEBUG] 2023-03-01 13:47:35.819 [main] MetamodelGraphWalker - Property path deemed to be circular : recipe.user.recipes
[DEBUG] 2023-03-01 13:47:35.819 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-03-01 13:47:35.819 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-03-01 13:47:35.820 [main] LoadPlanTreePrinter - LoadPlan(entity=com.amgenz.entity.RecipeIngredient)
    - Returns
       - EntityReturnImpl(entity=com.amgenz.entity.RecipeIngredient, querySpaceUid=<gen:0>, path=com.amgenz.entity.RecipeIngredient)
          - EntityAttributeFetchImpl(entity=com.amgenz.entity.Recipe, querySpaceUid=<gen:1>, path=com.amgenz.entity.RecipeIngredient.recipe)
             - CollectionAttributeFetchImpl(collection=com.amgenz.entity.Recipe.instructions, querySpaceUid=<gen:2>, path=com.amgenz.entity.RecipeIngredient.recipe.instructions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeInstruction, querySpaceUid=<gen:3>, path=com.amgenz.entity.RecipeIngredient.recipe.instructions.<elements>)
             - EntityAttributeFetchImpl(entity=com.amgenz.entity.User, querySpaceUid=<gen:4>, path=com.amgenz.entity.RecipeIngredient.recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.amgenz.entity.RecipeIngredient)
          - SQL table alias mapping - recipeingr0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(recipe)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.amgenz.entity.Recipe)
                - SQL table alias mapping - recipe1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(instructions)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.amgenz.entity.Recipe.instructions)
                      - SQL table alias mapping - instructio2_
                      - alias suffix - 2_
                      - suffixed key columns - {recipe_i4_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.amgenz.entity.RecipeInstruction)
                            - SQL table alias mapping - instructio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.amgenz.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_3_4_}

[DEBUG] 2023-03-01 13:47:35.820 [main] EntityLoader - Static select for entity com.amgenz.entity.RecipeIngredient [NONE]: select recipeingr0_.id as id1_0_0_, recipeingr0_.ingredient as ingredie2_0_0_, recipeingr0_.ingredient_amount as ingredie3_0_0_, recipeingr0_.ingredient_amount_measurement as ingredie4_0_0_, recipeingr0_.recipe_id as recipe_i5_0_0_, recipe1_.id as id1_2_1_, recipe1_.calories as calories2_2_1_, recipe1_.carbohydrates as carbohyd3_2_1_, recipe1_.fat as fat4_2_1_, recipe1_.protein as protein5_2_1_, recipe1_.recipe_name as recipe_n6_2_1_, recipe1_.serving as serving7_2_1_, recipe1_.total_time_in_min as total_ti8_2_1_, recipe1_.type as type9_2_1_, recipe1_.user_id as user_id10_2_1_, instructio2_.recipe_id as recipe_i4_1_2_, instructio2_.id as id1_1_2_, instructio2_.id as id1_1_3_, instructio2_.instruction as instruct2_1_3_, instructio2_.instruction_order as instruct3_1_3_, instructio2_.recipe_id as recipe_i4_1_3_, user3_.id as id1_3_4_, user3_.email as email2_3_4_, user3_.first_name as first_na3_3_4_, user3_.last_name as last_nam4_3_4_ from recipe_ingredient recipeingr0_ left outer join recipes recipe1_ on recipeingr0_.recipe_id=recipe1_.id left outer join recipe_instruction instructio2_ on recipe1_.id=instructio2_.recipe_id left outer join users user3_ on recipe1_.user_id=user3_.id where recipeingr0_.id=?
[DEBUG] 2023-03-01 13:47:35.820 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6818fd48]
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : ingredient
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : ingredientAmount
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : ingredientAmountMeasurement
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe
[DEBUG] 2023-03-01 13:47:35.820 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28daf506]
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe.calories
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe.carbohydrates
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe.fat
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe.ingredients
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Property path deemed to be circular : recipe.ingredients
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe.instructions
[DEBUG] 2023-03-01 13:47:35.820 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@693f2213]
[DEBUG] 2023-03-01 13:47:35.820 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@514377fc]
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe.instructions.instruction
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe.instructions.instructionOrder
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe.instructions.recipe
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Property path deemed to be circular : recipe.instructions.recipe
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe.protein
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe.recipeName
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe.serving
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe.totalTimeInMin
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe.type
[DEBUG] 2023-03-01 13:47:35.820 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user
[DEBUG] 2023-03-01 13:47:35.820 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6befbb12]
[DEBUG] 2023-03-01 13:47:35.821 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.email
[DEBUG] 2023-03-01 13:47:35.821 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.firstName
[DEBUG] 2023-03-01 13:47:35.821 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.lastName
[DEBUG] 2023-03-01 13:47:35.821 [main] MetamodelGraphWalker - Visiting attribute path : recipe.user.recipes
[DEBUG] 2023-03-01 13:47:35.821 [main] MetamodelGraphWalker - Property path deemed to be circular : recipe.user.recipes
[DEBUG] 2023-03-01 13:47:35.821 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-03-01 13:47:35.821 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-03-01 13:47:35.821 [main] LoadPlanTreePrinter - LoadPlan(entity=com.amgenz.entity.RecipeIngredient)
    - Returns
       - EntityReturnImpl(entity=com.amgenz.entity.RecipeIngredient, querySpaceUid=<gen:0>, path=com.amgenz.entity.RecipeIngredient)
          - EntityAttributeFetchImpl(entity=com.amgenz.entity.Recipe, querySpaceUid=<gen:1>, path=com.amgenz.entity.RecipeIngredient.recipe)
             - CollectionAttributeFetchImpl(collection=com.amgenz.entity.Recipe.instructions, querySpaceUid=<gen:2>, path=com.amgenz.entity.RecipeIngredient.recipe.instructions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeInstruction, querySpaceUid=<gen:3>, path=com.amgenz.entity.RecipeIngredient.recipe.instructions.<elements>)
             - EntityAttributeFetchImpl(entity=com.amgenz.entity.User, querySpaceUid=<gen:4>, path=com.amgenz.entity.RecipeIngredient.recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.amgenz.entity.RecipeIngredient)
          - SQL table alias mapping - recipeingr0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(recipe)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.amgenz.entity.Recipe)
                - SQL table alias mapping - recipe1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(instructions)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.amgenz.entity.Recipe.instructions)
                      - SQL table alias mapping - instructio2_
                      - alias suffix - 2_
                      - suffixed key columns - {recipe_i4_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.amgenz.entity.RecipeInstruction)
                            - SQL table alias mapping - instructio2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.amgenz.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_3_4_}

[DEBUG] 2023-03-01 13:47:35.821 [main] EntityLoader - Static select for entity com.amgenz.entity.RecipeIngredient [READ]: select recipeingr0_.id as id1_0_0_, recipeingr0_.ingredient as ingredie2_0_0_, recipeingr0_.ingredient_amount as ingredie3_0_0_, recipeingr0_.ingredient_amount_measurement as ingredie4_0_0_, recipeingr0_.recipe_id as recipe_i5_0_0_, recipe1_.id as id1_2_1_, recipe1_.calories as calories2_2_1_, recipe1_.carbohydrates as carbohyd3_2_1_, recipe1_.fat as fat4_2_1_, recipe1_.protein as protein5_2_1_, recipe1_.recipe_name as recipe_n6_2_1_, recipe1_.serving as serving7_2_1_, recipe1_.total_time_in_min as total_ti8_2_1_, recipe1_.type as type9_2_1_, recipe1_.user_id as user_id10_2_1_, instructio2_.recipe_id as recipe_i4_1_2_, instructio2_.id as id1_1_2_, instructio2_.id as id1_1_3_, instructio2_.instruction as instruct2_1_3_, instructio2_.instruction_order as instruct3_1_3_, instructio2_.recipe_id as recipe_i4_1_3_, user3_.id as id1_3_4_, user3_.email as email2_3_4_, user3_.first_name as first_na3_3_4_, user3_.last_name as last_nam4_3_4_ from recipe_ingredient recipeingr0_ left outer join recipes recipe1_ on recipeingr0_.recipe_id=recipe1_.id left outer join recipe_instruction instructio2_ on recipe1_.id=instructio2_.recipe_id left outer join users user3_ on recipe1_.user_id=user3_.id where recipeingr0_.id=?
[DEBUG] 2023-03-01 13:47:35.821 [main] Loader - Static select for action ACTION_MERGE on entity com.amgenz.entity.RecipeIngredient: select recipeingr0_.id as id1_0_0_, recipeingr0_.ingredient as ingredie2_0_0_, recipeingr0_.ingredient_amount as ingredie3_0_0_, recipeingr0_.ingredient_amount_measurement as ingredie4_0_0_, recipeingr0_.recipe_id as recipe_i5_0_0_ from recipe_ingredient recipeingr0_ where recipeingr0_.id=?
[DEBUG] 2023-03-01 13:47:35.821 [main] Loader - Static select for action ACTION_REFRESH on entity com.amgenz.entity.RecipeIngredient: select recipeingr0_.id as id1_0_0_, recipeingr0_.ingredient as ingredie2_0_0_, recipeingr0_.ingredient_amount as ingredie3_0_0_, recipeingr0_.ingredient_amount_measurement as ingredie4_0_0_, recipeingr0_.recipe_id as recipe_i5_0_0_ from recipe_ingredient recipeingr0_ where recipeingr0_.id=?
[DEBUG] 2023-03-01 13:47:35.824 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f5c30b1]
[DEBUG] 2023-03-01 13:47:35.824 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62e73ab6]
[DEBUG] 2023-03-01 13:47:35.824 [main] MetamodelGraphWalker - Visiting attribute path : instruction
[DEBUG] 2023-03-01 13:47:35.824 [main] MetamodelGraphWalker - Visiting attribute path : instructionOrder
[DEBUG] 2023-03-01 13:47:35.824 [main] MetamodelGraphWalker - Visiting attribute path : recipe
[DEBUG] 2023-03-01 13:47:35.824 [main] MetamodelGraphWalker - Property path deemed to be circular : recipe
[DEBUG] 2023-03-01 13:47:35.824 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-03-01 13:47:35.825 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-03-01 13:47:35.825 [main] LoadPlanTreePrinter - LoadPlan(collection=com.amgenz.entity.Recipe.instructions)
    - Returns
       - CollectionReturnImpl(collection=com.amgenz.entity.Recipe.instructions, querySpaceUid=<gen:0>, path=[com.amgenz.entity.Recipe.instructions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeInstruction, querySpaceUid=<gen:1>, path=[com.amgenz.entity.Recipe.instructions].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.amgenz.entity.Recipe.instructions)
          - SQL table alias mapping - instructio0_
          - alias suffix - 0_
          - suffixed key columns - {recipe_i4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.amgenz.entity.RecipeInstruction)
                - SQL table alias mapping - instructio0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2023-03-01 13:47:35.826 [main] CollectionLoader - Static select for collection com.amgenz.entity.Recipe.instructions: select instructio0_.recipe_id as recipe_i4_1_0_, instructio0_.id as id1_1_0_, instructio0_.id as id1_1_1_, instructio0_.instruction as instruct2_1_1_, instructio0_.instruction_order as instruct3_1_1_, instructio0_.recipe_id as recipe_i4_1_1_ from recipe_instruction instructio0_ where instructio0_.recipe_id=?
[DEBUG] 2023-03-01 13:47:35.826 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ebbde60]
[DEBUG] 2023-03-01 13:47:35.826 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a056b26]
[DEBUG] 2023-03-01 13:47:35.826 [main] MetamodelGraphWalker - Visiting attribute path : ingredient
[DEBUG] 2023-03-01 13:47:35.826 [main] MetamodelGraphWalker - Visiting attribute path : ingredientAmount
[DEBUG] 2023-03-01 13:47:35.826 [main] MetamodelGraphWalker - Visiting attribute path : ingredientAmountMeasurement
[DEBUG] 2023-03-01 13:47:35.826 [main] MetamodelGraphWalker - Visiting attribute path : recipe
[DEBUG] 2023-03-01 13:47:35.826 [main] MetamodelGraphWalker - Property path deemed to be circular : recipe
[DEBUG] 2023-03-01 13:47:35.826 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-03-01 13:47:35.826 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-03-01 13:47:35.826 [main] LoadPlanTreePrinter - LoadPlan(collection=com.amgenz.entity.Recipe.ingredients)
    - Returns
       - CollectionReturnImpl(collection=com.amgenz.entity.Recipe.ingredients, querySpaceUid=<gen:0>, path=[com.amgenz.entity.Recipe.ingredients])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeIngredient, querySpaceUid=<gen:1>, path=[com.amgenz.entity.Recipe.ingredients].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.amgenz.entity.Recipe.ingredients)
          - SQL table alias mapping - ingredient0_
          - alias suffix - 0_
          - suffixed key columns - {recipe_i5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.amgenz.entity.RecipeIngredient)
                - SQL table alias mapping - ingredient0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2023-03-01 13:47:35.826 [main] CollectionLoader - Static select for collection com.amgenz.entity.Recipe.ingredients: select ingredient0_.recipe_id as recipe_i5_0_0_, ingredient0_.id as id1_0_0_, ingredient0_.id as id1_0_1_, ingredient0_.ingredient as ingredie2_0_1_, ingredient0_.ingredient_amount as ingredie3_0_1_, ingredient0_.ingredient_amount_measurement as ingredie4_0_1_, ingredient0_.recipe_id as recipe_i5_0_1_ from recipe_ingredient ingredient0_ where ingredient0_.recipe_id=?
[DEBUG] 2023-03-01 13:47:35.826 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25c1f5ee]
[DEBUG] 2023-03-01 13:47:35.826 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bce62b]
[DEBUG] 2023-03-01 13:47:35.826 [main] MetamodelGraphWalker - Visiting attribute path : calories
[DEBUG] 2023-03-01 13:47:35.826 [main] MetamodelGraphWalker - Visiting attribute path : carbohydrates
[DEBUG] 2023-03-01 13:47:35.826 [main] MetamodelGraphWalker - Visiting attribute path : fat
[DEBUG] 2023-03-01 13:47:35.827 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2023-03-01 13:47:35.827 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f6c2763]
[DEBUG] 2023-03-01 13:47:35.827 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c82031b]
[DEBUG] 2023-03-01 13:47:35.827 [main] MetamodelGraphWalker - Visiting attribute path : instructions
[DEBUG] 2023-03-01 13:47:35.827 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@274fdea6]
[DEBUG] 2023-03-01 13:47:35.827 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74c121d4]
[DEBUG] 2023-03-01 13:47:35.827 [main] MetamodelGraphWalker - Visiting attribute path : protein
[DEBUG] 2023-03-01 13:47:35.827 [main] MetamodelGraphWalker - Visiting attribute path : recipeName
[DEBUG] 2023-03-01 13:47:35.827 [main] MetamodelGraphWalker - Visiting attribute path : serving
[DEBUG] 2023-03-01 13:47:35.827 [main] MetamodelGraphWalker - Visiting attribute path : totalTimeInMin
[DEBUG] 2023-03-01 13:47:35.827 [main] MetamodelGraphWalker - Visiting attribute path : type
[DEBUG] 2023-03-01 13:47:35.827 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2023-03-01 13:47:35.827 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2023-03-01 13:47:35.827 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-03-01 13:47:35.827 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-03-01 13:47:35.827 [main] LoadPlanTreePrinter - LoadPlan(collection=com.amgenz.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.amgenz.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.amgenz.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.Recipe, querySpaceUid=<gen:1>, path=[com.amgenz.entity.User.recipes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.amgenz.entity.Recipe.ingredients, querySpaceUid=<gen:2>, path=[com.amgenz.entity.User.recipes].<elements>.ingredients)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeIngredient, querySpaceUid=<gen:3>, path=[com.amgenz.entity.User.recipes].<elements>.ingredients.<elements>)
             - CollectionAttributeFetchImpl(collection=com.amgenz.entity.Recipe.instructions, querySpaceUid=<gen:4>, path=[com.amgenz.entity.User.recipes].<elements>.instructions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.amgenz.entity.RecipeInstruction, querySpaceUid=<gen:5>, path=[com.amgenz.entity.User.recipes].<elements>.instructions.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.amgenz.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id10_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.amgenz.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

[DEBUG] 2023-03-01 13:47:35.827 [main] CollectionLoader - Static select for collection com.amgenz.entity.User.recipes: select recipes0_.user_id as user_id10_2_0_, recipes0_.id as id1_2_0_, recipes0_.id as id1_2_1_, recipes0_.calories as calories2_2_1_, recipes0_.carbohydrates as carbohyd3_2_1_, recipes0_.fat as fat4_2_1_, recipes0_.protein as protein5_2_1_, recipes0_.recipe_name as recipe_n6_2_1_, recipes0_.serving as serving7_2_1_, recipes0_.total_time_in_min as total_ti8_2_1_, recipes0_.type as type9_2_1_, recipes0_.user_id as user_id10_2_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2023-03-01 13:47:35.857 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2023-03-01 13:47:35.857 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2023-03-01 13:47:35.858 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-03-01 13:47:35.868 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2023-03-01 13:47:35.868 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-03-01 13:47:35.898 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2023-03-01 13:47:35.898 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2023-03-01 13:47:35.902 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6fb0261e
[DEBUG] 2023-03-01 13:47:35.909 [main] SessionFactoryRegistry - Registering SessionFactory: 89c6f53d-906e-44aa-ba89-cf281657f2eb (<unnamed>)
[DEBUG] 2023-03-01 13:47:35.909 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-03-01 13:47:36.023 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2023-03-01 13:47:36.100 [main] SQL - select recipeinst0_.id as id1_1_0_, recipeinst0_.instruction as instruct2_1_0_, recipeinst0_.instruction_order as instruct3_1_0_, recipeinst0_.recipe_id as recipe_i4_1_0_, recipe1_.id as id1_2_1_, recipe1_.calories as calories2_2_1_, recipe1_.carbohydrates as carbohyd3_2_1_, recipe1_.fat as fat4_2_1_, recipe1_.protein as protein5_2_1_, recipe1_.recipe_name as recipe_n6_2_1_, recipe1_.serving as serving7_2_1_, recipe1_.total_time_in_min as total_ti8_2_1_, recipe1_.type as type9_2_1_, recipe1_.user_id as user_id10_2_1_, ingredient2_.recipe_id as recipe_i5_0_2_, ingredient2_.id as id1_0_2_, ingredient2_.id as id1_0_3_, ingredient2_.ingredient as ingredie2_0_3_, ingredient2_.ingredient_amount as ingredie3_0_3_, ingredient2_.ingredient_amount_measurement as ingredie4_0_3_, ingredient2_.recipe_id as recipe_i5_0_3_, user3_.id as id1_3_4_, user3_.email as email2_3_4_, user3_.first_name as first_na3_3_4_, user3_.last_name as last_nam4_3_4_ from recipe_instruction recipeinst0_ left outer join recipes recipe1_ on recipeinst0_.recipe_id=recipe1_.id left outer join recipe_ingredient ingredient2_ on recipe1_.id=ingredient2_.recipe_id left outer join users user3_ on recipe1_.user_id=user3_.id where recipeinst0_.id=?
[DEBUG] 2023-03-01 13:47:36.130 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:36.133 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.185 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.210 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2023-03-01 13:47:36.211 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.216 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.216 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2023-03-01 13:47:36.216 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.217 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.217 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2023-03-01 13:47:36.217 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.218 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.218 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2023-03-01 13:47:36.218 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.219 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.219 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2023-03-01 13:47:36.219 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.220 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.220 [main] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2023-03-01 13:47:36.220 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.221 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.221 [main] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2023-03-01 13:47:36.221 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.222 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.222 [main] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2023-03-01 13:47:36.222 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.233 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.234 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:36.235 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Wash Chicken breast then pat dry. Cut into thin strips. 
[DEBUG] 2023-03-01 13:47:36.235 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.235 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 1
[DEBUG] 2023-03-01 13:47:36.235 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.235 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.235 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.236 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:36.236 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.Recipe#1]
[DEBUG] 2023-03-01 13:47:36.236 [main] TwoPhaseLoad - Processing attribute `calories` : value = 1196
[DEBUG] 2023-03-01 13:47:36.236 [main] TwoPhaseLoad - Attribute (`calories`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.236 [main] TwoPhaseLoad - Processing attribute `carbohydrates` : value = 14
[DEBUG] 2023-03-01 13:47:36.236 [main] TwoPhaseLoad - Attribute (`carbohydrates`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.236 [main] TwoPhaseLoad - Processing attribute `fat` : value = 105
[DEBUG] 2023-03-01 13:47:36.236 [main] TwoPhaseLoad - Attribute (`fat`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.236 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:36.236 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.237 [main] TwoPhaseLoad - Processing attribute `instructions` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:36.237 [main] TwoPhaseLoad - Attribute (`instructions`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.238 [main] TwoPhaseLoad - Processing attribute `protein` : value = 50
[DEBUG] 2023-03-01 13:47:36.238 [main] TwoPhaseLoad - Attribute (`protein`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.238 [main] TwoPhaseLoad - Processing attribute `recipeName` : value = Homemade Chicken Alfredo
[DEBUG] 2023-03-01 13:47:36.238 [main] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.239 [main] TwoPhaseLoad - Processing attribute `serving` : value = 2
[DEBUG] 2023-03-01 13:47:36.239 [main] TwoPhaseLoad - Attribute (`serving`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.239 [main] TwoPhaseLoad - Processing attribute `totalTimeInMin` : value = 35
[DEBUG] 2023-03-01 13:47:36.239 [main] TwoPhaseLoad - Attribute (`totalTimeInMin`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.240 [main] TwoPhaseLoad - Processing attribute `type` : value = Dinner
[DEBUG] 2023-03-01 13:47:36.240 [main] TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.240 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2023-03-01 13:47:36.240 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.241 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.Recipe#1]
[DEBUG] 2023-03-01 13:47:36.241 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#1]
[DEBUG] 2023-03-01 13:47:36.241 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chicken breast 
[DEBUG] 2023-03-01 13:47:36.241 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.241 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:36.241 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.242 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:36.242 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.242 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.242 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.242 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#1]
[DEBUG] 2023-03-01 13:47:36.242 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.User#1]
[DEBUG] 2023-03-01 13:47:36.242 [main] TwoPhaseLoad - Processing attribute `email` : value = halou
[DEBUG] 2023-03-01 13:47:36.242 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.244 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Harry
[DEBUG] 2023-03-01 13:47:36.244 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.244 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Louis
[DEBUG] 2023-03-01 13:47:36.244 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.244 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:36.244 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.244 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.User#1]
[DEBUG] 2023-03-01 13:47:36.244 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#2]
[DEBUG] 2023-03-01 13:47:36.244 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Fettuccini noodles
[DEBUG] 2023-03-01 13:47:36.244 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.244 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:36.244 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.244 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = pound
[DEBUG] 2023-03-01 13:47:36.244 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.245 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.245 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.247 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#2]
[DEBUG] 2023-03-01 13:47:36.247 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#3]
[DEBUG] 2023-03-01 13:47:36.247 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Extra virgin olive oil
[DEBUG] 2023-03-01 13:47:36.247 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.247 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 3.0
[DEBUG] 2023-03-01 13:47:36.247 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.247 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = tbsp
[DEBUG] 2023-03-01 13:47:36.247 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.251 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.251 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.251 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#3]
[DEBUG] 2023-03-01 13:47:36.251 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#4]
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chicken stock
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.5
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#4]
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#5]
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Garlic clove
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.252 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.255 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.255 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#5]
[DEBUG] 2023-03-01 13:47:36.255 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#6]
[DEBUG] 2023-03-01 13:47:36.259 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Heavy cream
[DEBUG] 2023-03-01 13:47:36.259 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.259 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.5
[DEBUG] 2023-03-01 13:47:36.259 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.259 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:36.259 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.259 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.259 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.259 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#6]
[DEBUG] 2023-03-01 13:47:36.259 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#7]
[DEBUG] 2023-03-01 13:47:36.259 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Parmesan
[DEBUG] 2023-03-01 13:47:36.259 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.259 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:36.259 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.260 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:36.260 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.260 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.260 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.263 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#7]
[DEBUG] 2023-03-01 13:47:36.263 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#8]
[DEBUG] 2023-03-01 13:47:36.263 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Parsley
[DEBUG] 2023-03-01 13:47:36.263 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.263 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 0.25
[DEBUG] 2023-03-01 13:47:36.263 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.263 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:36.263 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.263 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.263 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.263 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#8]
[DEBUG] 2023-03-01 13:47:36.263 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#9]
[DEBUG] 2023-03-01 13:47:36.264 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Lemon (Juice)
[DEBUG] 2023-03-01 13:47:36.264 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.264 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:36.264 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.264 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:36.264 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.264 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.264 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.265 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#9]
[DEBUG] 2023-03-01 13:47:36.266 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:36.270 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.271 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:36.272 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:36.283 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:36.283 [main] SQL - select recipes0_.user_id as user_id10_2_0_, recipes0_.id as id1_2_0_, recipes0_.id as id1_2_1_, recipes0_.calories as calories2_2_1_, recipes0_.carbohydrates as carbohyd3_2_1_, recipes0_.fat as fat4_2_1_, recipes0_.protein as protein5_2_1_, recipes0_.recipe_name as recipe_n6_2_1_, recipes0_.serving as serving7_2_1_, recipes0_.total_time_in_min as total_ti8_2_1_, recipes0_.type as type9_2_1_, recipes0_.user_id as user_id10_2_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2023-03-01 13:47:36.289 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:36.290 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:36.290 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:36.290 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:36.290 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:36.290 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:36.290 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:36.290 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2023-03-01 13:47:36.290 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.291 [main] SQL - select instructio0_.recipe_id as recipe_i4_1_0_, instructio0_.id as id1_1_0_, instructio0_.id as id1_1_1_, instructio0_.instruction as instruct2_1_1_, instructio0_.instruction_order as instruct3_1_1_, instructio0_.recipe_id as recipe_i4_1_1_ from recipe_instruction instructio0_ where instructio0_.recipe_id=?
[DEBUG] 2023-03-01 13:47:36.299 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.299 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:36.299 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.299 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2023-03-01 13:47:36.299 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.299 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2023-03-01 13:47:36.300 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.300 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2023-03-01 13:47:36.300 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.300 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2023-03-01 13:47:36.300 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.300 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2023-03-01 13:47:36.300 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.300 [main] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2023-03-01 13:47:36.301 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Boil fettucine pasta according to box instructions, when ready se aside.
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 2
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Heat a non-stick pan with olive oil and add chicken strips. Cook for 6-7 minutes on each side until golden brown, on medium heat. Remove chicken from pan when ready and set aside.
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 3
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add minced garlic and saute for 3 minutes. Deglaze pan with chicken stock, add lemon juice and bring to boil.
[DEBUG] 2023-03-01 13:47:36.301 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 4
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add heavy cream, then add the cooked pasta and chicken.
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 5
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add parmesan and stir until everything is well combined.
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 6
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:36.302 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Sprinkle with parsley and enjoy!
[DEBUG] 2023-03-01 13:47:36.303 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.303 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 7
[DEBUG] 2023-03-01 13:47:36.303 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.303 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.303 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.303 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:36.303 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:36.303 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.303 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:36.303 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:36.303 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2023-03-01 13:47:36.303 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.amgenz.entity.RecipeInstruction#1
[DEBUG] 2023-03-01 13:47:36.304 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-03-01 13:47:36.334 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2023-03-01 13:47:36.334 [main] TransactionImpl - begin
[DEBUG] 2023-03-01 13:47:36.367 [main] TransactionImpl - committing
[DEBUG] 2023-03-01 13:47:36.367 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2023-03-01 13:47:36.367 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2023-03-01 13:47:36.369 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2023-03-01 13:47:36.369 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2023-03-01 13:47:36.370 [main] EntityPrinter - Listing entities:
[DEBUG] 2023-03-01 13:47:36.370 [main] EntityPrinter - com.amgenz.entity.RecipeInstruction{instruction=Wash Chicken breast then pat dry. Cut into thin strips. , recipe=com.amgenz.entity.Recipe#1, instructionOrder=1, id=1}
[DEBUG] 2023-03-01 13:47:36.376 [main] SQL - delete from recipe_instruction where id=?
[DEBUG] 2023-03-01 13:47:36.409 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-03-01 13:47:36.410 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-03-01 13:47:36.411 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2023-03-01 13:47:36.411 [main] SQL - select recipeinst0_.id as id1_1_0_, recipeinst0_.instruction as instruct2_1_0_, recipeinst0_.instruction_order as instruct3_1_0_, recipeinst0_.recipe_id as recipe_i4_1_0_, recipe1_.id as id1_2_1_, recipe1_.calories as calories2_2_1_, recipe1_.carbohydrates as carbohyd3_2_1_, recipe1_.fat as fat4_2_1_, recipe1_.protein as protein5_2_1_, recipe1_.recipe_name as recipe_n6_2_1_, recipe1_.serving as serving7_2_1_, recipe1_.total_time_in_min as total_ti8_2_1_, recipe1_.type as type9_2_1_, recipe1_.user_id as user_id10_2_1_, ingredient2_.recipe_id as recipe_i5_0_2_, ingredient2_.id as id1_0_2_, ingredient2_.id as id1_0_3_, ingredient2_.ingredient as ingredie2_0_3_, ingredient2_.ingredient_amount as ingredie3_0_3_, ingredient2_.ingredient_amount_measurement as ingredie4_0_3_, ingredient2_.recipe_id as recipe_i5_0_3_, user3_.id as id1_3_4_, user3_.email as email2_3_4_, user3_.first_name as first_na3_3_4_, user3_.last_name as last_nam4_3_4_ from recipe_instruction recipeinst0_ left outer join recipes recipe1_ on recipeinst0_.recipe_id=recipe1_.id left outer join recipe_ingredient ingredient2_ on recipe1_.id=ingredient2_.recipe_id left outer join users user3_ on recipe1_.user_id=user3_.id where recipeinst0_.id=?
[DEBUG] 2023-03-01 13:47:36.415 [main] CollectionLoadContext - No collections were found in result set for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:36.415 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:36.415 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.amgenz.entity.RecipeInstruction#1
[DEBUG] 2023-03-01 13:47:36.415 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-03-01 13:47:36.608 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from RecipeInstruction as generatedAlias0 where generatedAlias0.instruction=:param0
[DEBUG] 2023-03-01 13:47:36.643 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@47eaf55c
[DEBUG] 2023-03-01 13:47:36.693 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.amgenz.entity.RecipeInstruction as generatedAlias0 where generatedAlias0.instruction=:param0
[DEBUG] 2023-03-01 13:47:36.696 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-03-01 13:47:36.705 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'amgenz'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'RecipeInstruction'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'instruction'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2023-03-01 13:47:36.716 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2023-03-01 13:47:36.733 [main] FromElement - FromClause{level=1} : com.amgenz.entity.RecipeInstruction (generatedAlias0) -> recipeinst0_
[DEBUG] 2023-03-01 13:47:36.751 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipeinst0_.id
[DEBUG] 2023-03-01 13:47:36.755 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipeinst0_.id
[DEBUG] 2023-03-01 13:47:36.756 [main] DotNode - getDataType() : instruction -> org.hibernate.type.StringType@13da7ab0
[DEBUG] 2023-03-01 13:47:36.760 [main] FromReferenceNode - Resolved : generatedAlias0.instruction -> recipeinst0_.instruction
[DEBUG] 2023-03-01 13:47:36.763 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2023-03-01 13:47:36.768 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipeinst0_.id ) ( FromClause{level=1} recipe_instruction recipeinst0_ ) ( where ( = ( recipeinst0_.instruction recipeinst0_.id instruction ) ? ) ) )
[DEBUG] 2023-03-01 13:47:36.776 [main] JoinProcessor - Using FROM fragment [recipe_instruction recipeinst0_]
[DEBUG] 2023-03-01 13:47:36.782 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2023-03-01 13:47:36.783 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipe_instruction)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipeinst0_.id as id1_1_' {alias=generatedAlias0, className=com.amgenz.entity.RecipeInstruction, tableAlias=recipeinst0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipeinst0_.instruction as instruct2_1_, recipeinst0_.instruction_order as instruct3_1_, recipeinst0_.recipe_id as recipe_i4_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipeinst0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'recipe_instruction recipeinst0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipe_instruction,tableAlias=recipeinst0_,origin=null,columns={,className=com.amgenz.entity.RecipeInstruction}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'recipeinst0_.instruction' {propertyName=instruction,dereferenceType=PRIMITIVE,getPropertyPath=instruction,path=generatedAlias0.instruction,tableAlias=recipeinst0_,className=com.amgenz.entity.RecipeInstruction,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'recipeinst0_.id' {alias=generatedAlias0, className=com.amgenz.entity.RecipeInstruction, tableAlias=recipeinst0_}
          |  \-[IDENT] IdentNode: 'instruction' {originalText=instruction}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@13da7ab0}

[DEBUG] 2023-03-01 13:47:36.783 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-03-01 13:47:36.795 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.amgenz.entity.RecipeInstruction as generatedAlias0 where generatedAlias0.instruction=:param0
[DEBUG] 2023-03-01 13:47:36.795 [main] QueryTranslatorImpl - SQL: select recipeinst0_.id as id1_1_, recipeinst0_.instruction as instruct2_1_, recipeinst0_.instruction_order as instruct3_1_, recipeinst0_.recipe_id as recipe_i4_1_ from recipe_instruction recipeinst0_ where recipeinst0_.instruction=?
[DEBUG] 2023-03-01 13:47:36.796 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-03-01 13:47:36.823 [main] SQL - select recipeinst0_.id as id1_1_, recipeinst0_.instruction as instruct2_1_, recipeinst0_.instruction_order as instruct3_1_, recipeinst0_.recipe_id as recipe_i4_1_ from recipe_instruction recipeinst0_ where recipeinst0_.instruction=?
[DEBUG] 2023-03-01 13:47:36.834 [main] Loader - Result set row: 0
[DEBUG] 2023-03-01 13:47:36.835 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:36.835 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:36.835 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Sprinkle with parsley and enjoy!
[DEBUG] 2023-03-01 13:47:36.835 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.835 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 7
[DEBUG] 2023-03-01 13:47:36.835 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.835 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.835 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.835 [main] SQL - select recipe0_.id as id1_2_0_, recipe0_.calories as calories2_2_0_, recipe0_.carbohydrates as carbohyd3_2_0_, recipe0_.fat as fat4_2_0_, recipe0_.protein as protein5_2_0_, recipe0_.recipe_name as recipe_n6_2_0_, recipe0_.serving as serving7_2_0_, recipe0_.total_time_in_min as total_ti8_2_0_, recipe0_.type as type9_2_0_, recipe0_.user_id as user_id10_2_0_, ingredient1_.recipe_id as recipe_i5_0_1_, ingredient1_.id as id1_0_1_, ingredient1_.id as id1_0_2_, ingredient1_.ingredient as ingredie2_0_2_, ingredient1_.ingredient_amount as ingredie3_0_2_, ingredient1_.ingredient_amount_measurement as ingredie4_0_2_, ingredient1_.recipe_id as recipe_i5_0_2_, instructio2_.recipe_id as recipe_i4_1_3_, instructio2_.id as id1_1_3_, instructio2_.id as id1_1_4_, instructio2_.instruction as instruct2_1_4_, instructio2_.instruction_order as instruct3_1_4_, instructio2_.recipe_id as recipe_i4_1_4_, user3_.id as id1_3_5_, user3_.email as email2_3_5_, user3_.first_name as first_na3_3_5_, user3_.last_name as last_nam4_3_5_ from recipes recipe0_ left outer join recipe_ingredient ingredient1_ on recipe0_.id=ingredient1_.recipe_id left outer join recipe_instruction instructio2_ on recipe0_.id=instructio2_.recipe_id left outer join users user3_ on recipe0_.user_id=user3_.id where recipe0_.id=?
[DEBUG] 2023-03-01 13:47:36.841 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:36.842 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.842 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.842 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.842 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2023-03-01 13:47:36.842 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.842 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.843 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.843 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2023-03-01 13:47:36.843 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.843 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.843 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.843 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2023-03-01 13:47:36.843 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.843 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.843 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.843 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2023-03-01 13:47:36.843 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.843 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.843 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.843 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2023-03-01 13:47:36.844 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.844 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.844 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.844 [main] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2023-03-01 13:47:36.844 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.844 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.844 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.844 [main] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2023-03-01 13:47:36.844 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.844 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.844 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.844 [main] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2023-03-01 13:47:36.844 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.844 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.844 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.845 [main] ResultSetProcessorImpl - Starting ResultSet row #9
[DEBUG] 2023-03-01 13:47:36.845 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.845 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.845 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.845 [main] ResultSetProcessorImpl - Starting ResultSet row #10
[DEBUG] 2023-03-01 13:47:36.845 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.845 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.845 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.845 [main] ResultSetProcessorImpl - Starting ResultSet row #11
[DEBUG] 2023-03-01 13:47:36.845 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.845 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.845 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.845 [main] ResultSetProcessorImpl - Starting ResultSet row #12
[DEBUG] 2023-03-01 13:47:36.845 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.845 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.845 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.845 [main] ResultSetProcessorImpl - Starting ResultSet row #13
[DEBUG] 2023-03-01 13:47:36.845 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.845 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.845 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.845 [main] ResultSetProcessorImpl - Starting ResultSet row #14
[DEBUG] 2023-03-01 13:47:36.845 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.846 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.846 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.846 [main] ResultSetProcessorImpl - Starting ResultSet row #15
[DEBUG] 2023-03-01 13:47:36.846 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.846 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.846 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.846 [main] ResultSetProcessorImpl - Starting ResultSet row #16
[DEBUG] 2023-03-01 13:47:36.846 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.846 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.846 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.846 [main] ResultSetProcessorImpl - Starting ResultSet row #17
[DEBUG] 2023-03-01 13:47:36.846 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.846 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.846 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.846 [main] ResultSetProcessorImpl - Starting ResultSet row #18
[DEBUG] 2023-03-01 13:47:36.846 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.846 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.846 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.847 [main] ResultSetProcessorImpl - Starting ResultSet row #19
[DEBUG] 2023-03-01 13:47:36.847 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.847 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.847 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.847 [main] ResultSetProcessorImpl - Starting ResultSet row #20
[DEBUG] 2023-03-01 13:47:36.847 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.847 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.847 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.847 [main] ResultSetProcessorImpl - Starting ResultSet row #21
[DEBUG] 2023-03-01 13:47:36.847 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.857 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.857 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.857 [main] ResultSetProcessorImpl - Starting ResultSet row #22
[DEBUG] 2023-03-01 13:47:36.857 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.857 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.857 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.857 [main] ResultSetProcessorImpl - Starting ResultSet row #23
[DEBUG] 2023-03-01 13:47:36.857 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.857 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.857 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.857 [main] ResultSetProcessorImpl - Starting ResultSet row #24
[DEBUG] 2023-03-01 13:47:36.857 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.858 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.858 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.858 [main] ResultSetProcessorImpl - Starting ResultSet row #25
[DEBUG] 2023-03-01 13:47:36.858 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.858 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.858 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.858 [main] ResultSetProcessorImpl - Starting ResultSet row #26
[DEBUG] 2023-03-01 13:47:36.858 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.858 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.858 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.858 [main] ResultSetProcessorImpl - Starting ResultSet row #27
[DEBUG] 2023-03-01 13:47:36.858 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.858 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.858 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.858 [main] ResultSetProcessorImpl - Starting ResultSet row #28
[DEBUG] 2023-03-01 13:47:36.858 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.859 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.859 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.859 [main] ResultSetProcessorImpl - Starting ResultSet row #29
[DEBUG] 2023-03-01 13:47:36.859 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.859 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.859 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.859 [main] ResultSetProcessorImpl - Starting ResultSet row #30
[DEBUG] 2023-03-01 13:47:36.859 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.859 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.859 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.859 [main] ResultSetProcessorImpl - Starting ResultSet row #31
[DEBUG] 2023-03-01 13:47:36.859 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.859 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.859 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.859 [main] ResultSetProcessorImpl - Starting ResultSet row #32
[DEBUG] 2023-03-01 13:47:36.859 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.859 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.859 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.860 [main] ResultSetProcessorImpl - Starting ResultSet row #33
[DEBUG] 2023-03-01 13:47:36.860 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.860 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.860 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.860 [main] ResultSetProcessorImpl - Starting ResultSet row #34
[DEBUG] 2023-03-01 13:47:36.860 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.860 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.860 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.860 [main] ResultSetProcessorImpl - Starting ResultSet row #35
[DEBUG] 2023-03-01 13:47:36.860 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.860 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.860 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.860 [main] ResultSetProcessorImpl - Starting ResultSet row #36
[DEBUG] 2023-03-01 13:47:36.860 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.861 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.861 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.861 [main] ResultSetProcessorImpl - Starting ResultSet row #37
[DEBUG] 2023-03-01 13:47:36.861 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.861 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.861 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.861 [main] ResultSetProcessorImpl - Starting ResultSet row #38
[DEBUG] 2023-03-01 13:47:36.861 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.861 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.861 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.861 [main] ResultSetProcessorImpl - Starting ResultSet row #39
[DEBUG] 2023-03-01 13:47:36.861 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.861 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.861 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.861 [main] ResultSetProcessorImpl - Starting ResultSet row #40
[DEBUG] 2023-03-01 13:47:36.861 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.861 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.861 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.861 [main] ResultSetProcessorImpl - Starting ResultSet row #41
[DEBUG] 2023-03-01 13:47:36.862 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.862 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.862 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.862 [main] ResultSetProcessorImpl - Starting ResultSet row #42
[DEBUG] 2023-03-01 13:47:36.862 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.862 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.862 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.862 [main] ResultSetProcessorImpl - Starting ResultSet row #43
[DEBUG] 2023-03-01 13:47:36.862 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.862 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.862 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.875 [main] ResultSetProcessorImpl - Starting ResultSet row #44
[DEBUG] 2023-03-01 13:47:36.875 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.876 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.876 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.876 [main] ResultSetProcessorImpl - Starting ResultSet row #45
[DEBUG] 2023-03-01 13:47:36.877 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.877 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.877 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.877 [main] ResultSetProcessorImpl - Starting ResultSet row #46
[DEBUG] 2023-03-01 13:47:36.877 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.878 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.879 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.879 [main] ResultSetProcessorImpl - Starting ResultSet row #47
[DEBUG] 2023-03-01 13:47:36.879 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.879 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.881 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.881 [main] ResultSetProcessorImpl - Starting ResultSet row #48
[DEBUG] 2023-03-01 13:47:36.882 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.882 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.882 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.882 [main] ResultSetProcessorImpl - Starting ResultSet row #49
[DEBUG] 2023-03-01 13:47:36.882 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.882 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.882 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.882 [main] ResultSetProcessorImpl - Starting ResultSet row #50
[DEBUG] 2023-03-01 13:47:36.882 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.882 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.882 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.882 [main] ResultSetProcessorImpl - Starting ResultSet row #51
[DEBUG] 2023-03-01 13:47:36.882 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.882 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.882 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.882 [main] ResultSetProcessorImpl - Starting ResultSet row #52
[DEBUG] 2023-03-01 13:47:36.883 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.883 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.883 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.883 [main] ResultSetProcessorImpl - Starting ResultSet row #53
[DEBUG] 2023-03-01 13:47:36.883 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.883 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.883 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.883 [main] ResultSetProcessorImpl - Starting ResultSet row #54
[DEBUG] 2023-03-01 13:47:36.883 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.883 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.883 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.883 [main] ResultSetProcessorImpl - Starting ResultSet row #55
[DEBUG] 2023-03-01 13:47:36.883 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.883 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.883 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.883 [main] ResultSetProcessorImpl - Starting ResultSet row #56
[DEBUG] 2023-03-01 13:47:36.883 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.883 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.884 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.884 [main] ResultSetProcessorImpl - Starting ResultSet row #57
[DEBUG] 2023-03-01 13:47:36.884 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.884 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.884 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.884 [main] ResultSetProcessorImpl - Starting ResultSet row #58
[DEBUG] 2023-03-01 13:47:36.884 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.884 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.884 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.884 [main] ResultSetProcessorImpl - Starting ResultSet row #59
[DEBUG] 2023-03-01 13:47:36.884 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.884 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.884 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.884 [main] ResultSetProcessorImpl - Starting ResultSet row #60
[DEBUG] 2023-03-01 13:47:36.884 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.884 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.884 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.884 [main] ResultSetProcessorImpl - Starting ResultSet row #61
[DEBUG] 2023-03-01 13:47:36.884 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.884 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.884 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.884 [main] ResultSetProcessorImpl - Starting ResultSet row #62
[DEBUG] 2023-03-01 13:47:36.884 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:36.884 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.885 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.Recipe#1]
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `calories` : value = 1196
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`calories`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `carbohydrates` : value = 14
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`carbohydrates`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `fat` : value = 105
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`fat`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `instructions` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`instructions`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `protein` : value = 50
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`protein`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `recipeName` : value = Homemade Chicken Alfredo
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `serving` : value = 2
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`serving`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `totalTimeInMin` : value = 35
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`totalTimeInMin`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `type` : value = Dinner
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.Recipe#1]
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#1]
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chicken breast 
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#1]
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Wash Chicken breast then pat dry. Cut into thin strips. 
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 1
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.User#1]
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `email` : value = halou
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Harry
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Louis
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.User#1]
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Boil fettucine pasta according to box instructions, when ready se aside.
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 2
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Heat a non-stick pan with olive oil and add chicken strips. Cook for 6-7 minutes on each side until golden brown, on medium heat. Remove chicken from pan when ready and set aside.
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 3
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.885 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add minced garlic and saute for 3 minutes. Deglaze pan with chicken stock, add lemon juice and bring to boil.
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 4
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add heavy cream, then add the cooked pasta and chicken.
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 5
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add parmesan and stir until everything is well combined.
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 6
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#2]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Fettuccini noodles
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = pound
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#2]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#3]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Extra virgin olive oil
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 3.0
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = tbsp
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#3]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#4]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chicken stock
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.5
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#4]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#5]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Garlic clove
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#5]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#6]
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Heavy cream
[DEBUG] 2023-03-01 13:47:36.886 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.5
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#6]
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#7]
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Parmesan
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#7]
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#8]
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Parsley
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 0.25
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#8]
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#9]
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Lemon (Juice)
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:36.887 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#9]
[DEBUG] 2023-03-01 13:47:36.887 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:36.887 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:36.887 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:36.887 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:36.888 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:36.888 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:36.888 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:36.888 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.amgenz.entity.Recipe#1
[DEBUG] 2023-03-01 13:47:36.888 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:36.888 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:36.888 [main] SQL - select recipes0_.user_id as user_id10_2_0_, recipes0_.id as id1_2_0_, recipes0_.id as id1_2_1_, recipes0_.calories as calories2_2_1_, recipes0_.carbohydrates as carbohyd3_2_1_, recipes0_.fat as fat4_2_1_, recipes0_.protein as protein5_2_1_, recipes0_.recipe_name as recipe_n6_2_1_, recipes0_.serving as serving7_2_1_, recipes0_.total_time_in_min as total_ti8_2_1_, recipes0_.type as type9_2_1_, recipes0_.user_id as user_id10_2_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2023-03-01 13:47:36.907 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:36.907 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:36.908 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:36.908 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:36.908 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:36.908 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:36.908 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:36.908 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2023-03-01 13:47:36.910 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-03-01 13:47:37.045 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from RecipeInstruction as generatedAlias0
[DEBUG] 2023-03-01 13:47:37.046 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.amgenz.entity.RecipeInstruction as generatedAlias0
[DEBUG] 2023-03-01 13:47:37.053 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-03-01 13:47:37.056 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'amgenz'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'RecipeInstruction'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2023-03-01 13:47:37.056 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2023-03-01 13:47:37.056 [main] FromElement - FromClause{level=1} : com.amgenz.entity.RecipeInstruction (generatedAlias0) -> recipeinst0_
[DEBUG] 2023-03-01 13:47:37.056 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipeinst0_.id
[DEBUG] 2023-03-01 13:47:37.056 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2023-03-01 13:47:37.056 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipeinst0_.id ) ( FromClause{level=1} recipe_instruction recipeinst0_ ) )
[DEBUG] 2023-03-01 13:47:37.056 [main] JoinProcessor - Using FROM fragment [recipe_instruction recipeinst0_]
[DEBUG] 2023-03-01 13:47:37.057 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2023-03-01 13:47:37.057 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipe_instruction)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipeinst0_.id as id1_1_' {alias=generatedAlias0, className=com.amgenz.entity.RecipeInstruction, tableAlias=recipeinst0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipeinst0_.instruction as instruct2_1_, recipeinst0_.instruction_order as instruct3_1_, recipeinst0_.recipe_id as recipe_i4_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipeinst0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'recipe_instruction recipeinst0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipe_instruction,tableAlias=recipeinst0_,origin=null,columns={,className=com.amgenz.entity.RecipeInstruction}}

[DEBUG] 2023-03-01 13:47:37.057 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-03-01 13:47:37.057 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.amgenz.entity.RecipeInstruction as generatedAlias0
[DEBUG] 2023-03-01 13:47:37.057 [main] QueryTranslatorImpl - SQL: select recipeinst0_.id as id1_1_, recipeinst0_.instruction as instruct2_1_, recipeinst0_.instruction_order as instruct3_1_, recipeinst0_.recipe_id as recipe_i4_1_ from recipe_instruction recipeinst0_
[DEBUG] 2023-03-01 13:47:37.057 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-03-01 13:47:37.061 [main] SQL - select recipeinst0_.id as id1_1_, recipeinst0_.instruction as instruct2_1_, recipeinst0_.instruction_order as instruct3_1_, recipeinst0_.recipe_id as recipe_i4_1_ from recipe_instruction recipeinst0_
[DEBUG] 2023-03-01 13:47:37.066 [main] Loader - Result set row: 0
[DEBUG] 2023-03-01 13:47:37.066 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:37.067 [main] Loader - Result set row: 1
[DEBUG] 2023-03-01 13:47:37.067 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:37.067 [main] Loader - Result set row: 2
[DEBUG] 2023-03-01 13:47:37.067 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:37.068 [main] Loader - Result set row: 3
[DEBUG] 2023-03-01 13:47:37.068 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:37.069 [main] Loader - Result set row: 4
[DEBUG] 2023-03-01 13:47:37.069 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:37.069 [main] Loader - Result set row: 5
[DEBUG] 2023-03-01 13:47:37.069 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:37.069 [main] Loader - Result set row: 6
[DEBUG] 2023-03-01 13:47:37.070 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:37.070 [main] Loader - Result set row: 7
[DEBUG] 2023-03-01 13:47:37.070 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#8]
[DEBUG] 2023-03-01 13:47:37.070 [main] Loader - Result set row: 8
[DEBUG] 2023-03-01 13:47:37.070 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#9]
[DEBUG] 2023-03-01 13:47:37.071 [main] Loader - Result set row: 9
[DEBUG] 2023-03-01 13:47:37.072 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#10]
[DEBUG] 2023-03-01 13:47:37.091 [main] Loader - Result set row: 10
[DEBUG] 2023-03-01 13:47:37.091 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#11]
[DEBUG] 2023-03-01 13:47:37.091 [main] Loader - Result set row: 11
[DEBUG] 2023-03-01 13:47:37.091 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#12]
[DEBUG] 2023-03-01 13:47:37.091 [main] Loader - Result set row: 12
[DEBUG] 2023-03-01 13:47:37.092 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#13]
[DEBUG] 2023-03-01 13:47:37.092 [main] Loader - Result set row: 13
[DEBUG] 2023-03-01 13:47:37.092 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#14]
[DEBUG] 2023-03-01 13:47:37.092 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:37.092 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Wash Chicken breast then pat dry. Cut into thin strips. 
[DEBUG] 2023-03-01 13:47:37.092 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.092 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 1
[DEBUG] 2023-03-01 13:47:37.092 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.092 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.092 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.092 [main] SQL - select recipe0_.id as id1_2_0_, recipe0_.calories as calories2_2_0_, recipe0_.carbohydrates as carbohyd3_2_0_, recipe0_.fat as fat4_2_0_, recipe0_.protein as protein5_2_0_, recipe0_.recipe_name as recipe_n6_2_0_, recipe0_.serving as serving7_2_0_, recipe0_.total_time_in_min as total_ti8_2_0_, recipe0_.type as type9_2_0_, recipe0_.user_id as user_id10_2_0_, ingredient1_.recipe_id as recipe_i5_0_1_, ingredient1_.id as id1_0_1_, ingredient1_.id as id1_0_2_, ingredient1_.ingredient as ingredie2_0_2_, ingredient1_.ingredient_amount as ingredie3_0_2_, ingredient1_.ingredient_amount_measurement as ingredie4_0_2_, ingredient1_.recipe_id as recipe_i5_0_2_, instructio2_.recipe_id as recipe_i4_1_3_, instructio2_.id as id1_1_3_, instructio2_.id as id1_1_4_, instructio2_.instruction as instruct2_1_4_, instructio2_.instruction_order as instruct3_1_4_, instructio2_.recipe_id as recipe_i4_1_4_, user3_.id as id1_3_5_, user3_.email as email2_3_5_, user3_.first_name as first_na3_3_5_, user3_.last_name as last_nam4_3_5_ from recipes recipe0_ left outer join recipe_ingredient ingredient1_ on recipe0_.id=ingredient1_.recipe_id left outer join recipe_instruction instructio2_ on recipe0_.id=instructio2_.recipe_id left outer join users user3_ on recipe0_.user_id=user3_.id where recipe0_.id=?
[DEBUG] 2023-03-01 13:47:37.100 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.100 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.104 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.104 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.104 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2023-03-01 13:47:37.104 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.104 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.104 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.104 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2023-03-01 13:47:37.104 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.104 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.108 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.108 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2023-03-01 13:47:37.109 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.109 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.109 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.109 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2023-03-01 13:47:37.109 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.109 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.109 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.109 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2023-03-01 13:47:37.109 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.109 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.109 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.110 [main] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2023-03-01 13:47:37.110 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.110 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.110 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.110 [main] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2023-03-01 13:47:37.110 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.110 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.111 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.111 [main] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2023-03-01 13:47:37.111 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.111 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.111 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.111 [main] ResultSetProcessorImpl - Starting ResultSet row #9
[DEBUG] 2023-03-01 13:47:37.111 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.111 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.111 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.111 [main] ResultSetProcessorImpl - Starting ResultSet row #10
[DEBUG] 2023-03-01 13:47:37.111 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.111 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.112 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.112 [main] ResultSetProcessorImpl - Starting ResultSet row #11
[DEBUG] 2023-03-01 13:47:37.112 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.112 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.112 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.112 [main] ResultSetProcessorImpl - Starting ResultSet row #12
[DEBUG] 2023-03-01 13:47:37.112 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.112 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.112 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.112 [main] ResultSetProcessorImpl - Starting ResultSet row #13
[DEBUG] 2023-03-01 13:47:37.112 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.112 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.112 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.113 [main] ResultSetProcessorImpl - Starting ResultSet row #14
[DEBUG] 2023-03-01 13:47:37.113 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.113 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.113 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.113 [main] ResultSetProcessorImpl - Starting ResultSet row #15
[DEBUG] 2023-03-01 13:47:37.113 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.113 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.113 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.114 [main] ResultSetProcessorImpl - Starting ResultSet row #16
[DEBUG] 2023-03-01 13:47:37.114 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.114 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.114 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.114 [main] ResultSetProcessorImpl - Starting ResultSet row #17
[DEBUG] 2023-03-01 13:47:37.114 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.114 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.114 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.114 [main] ResultSetProcessorImpl - Starting ResultSet row #18
[DEBUG] 2023-03-01 13:47:37.114 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.114 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.114 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.114 [main] ResultSetProcessorImpl - Starting ResultSet row #19
[DEBUG] 2023-03-01 13:47:37.115 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.115 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.115 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.115 [main] ResultSetProcessorImpl - Starting ResultSet row #20
[DEBUG] 2023-03-01 13:47:37.115 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.115 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.115 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.115 [main] ResultSetProcessorImpl - Starting ResultSet row #21
[DEBUG] 2023-03-01 13:47:37.115 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.115 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.116 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.116 [main] ResultSetProcessorImpl - Starting ResultSet row #22
[DEBUG] 2023-03-01 13:47:37.116 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.116 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.116 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.116 [main] ResultSetProcessorImpl - Starting ResultSet row #23
[DEBUG] 2023-03-01 13:47:37.116 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.116 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.116 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.116 [main] ResultSetProcessorImpl - Starting ResultSet row #24
[DEBUG] 2023-03-01 13:47:37.116 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.116 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.116 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.117 [main] ResultSetProcessorImpl - Starting ResultSet row #25
[DEBUG] 2023-03-01 13:47:37.117 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.117 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.117 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.117 [main] ResultSetProcessorImpl - Starting ResultSet row #26
[DEBUG] 2023-03-01 13:47:37.117 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.117 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.117 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.117 [main] ResultSetProcessorImpl - Starting ResultSet row #27
[DEBUG] 2023-03-01 13:47:37.117 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.117 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.117 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.117 [main] ResultSetProcessorImpl - Starting ResultSet row #28
[DEBUG] 2023-03-01 13:47:37.117 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.118 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.118 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.118 [main] ResultSetProcessorImpl - Starting ResultSet row #29
[DEBUG] 2023-03-01 13:47:37.118 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.118 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.118 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.118 [main] ResultSetProcessorImpl - Starting ResultSet row #30
[DEBUG] 2023-03-01 13:47:37.118 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.118 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.118 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.118 [main] ResultSetProcessorImpl - Starting ResultSet row #31
[DEBUG] 2023-03-01 13:47:37.118 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.118 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.118 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.118 [main] ResultSetProcessorImpl - Starting ResultSet row #32
[DEBUG] 2023-03-01 13:47:37.119 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.119 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.119 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.119 [main] ResultSetProcessorImpl - Starting ResultSet row #33
[DEBUG] 2023-03-01 13:47:37.119 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.119 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.119 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.119 [main] ResultSetProcessorImpl - Starting ResultSet row #34
[DEBUG] 2023-03-01 13:47:37.119 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.119 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.119 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.119 [main] ResultSetProcessorImpl - Starting ResultSet row #35
[DEBUG] 2023-03-01 13:47:37.119 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.120 [main] ResultSetProcessorImpl - Starting ResultSet row #36
[DEBUG] 2023-03-01 13:47:37.120 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.120 [main] ResultSetProcessorImpl - Starting ResultSet row #37
[DEBUG] 2023-03-01 13:47:37.120 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.120 [main] ResultSetProcessorImpl - Starting ResultSet row #38
[DEBUG] 2023-03-01 13:47:37.120 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.120 [main] ResultSetProcessorImpl - Starting ResultSet row #39
[DEBUG] 2023-03-01 13:47:37.120 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.121 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.147 [main] ResultSetProcessorImpl - Starting ResultSet row #40
[DEBUG] 2023-03-01 13:47:37.148 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.148 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.148 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.149 [main] ResultSetProcessorImpl - Starting ResultSet row #41
[DEBUG] 2023-03-01 13:47:37.149 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.149 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.150 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.150 [main] ResultSetProcessorImpl - Starting ResultSet row #42
[DEBUG] 2023-03-01 13:47:37.150 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.151 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.151 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.151 [main] ResultSetProcessorImpl - Starting ResultSet row #43
[DEBUG] 2023-03-01 13:47:37.151 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.151 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.151 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.151 [main] ResultSetProcessorImpl - Starting ResultSet row #44
[DEBUG] 2023-03-01 13:47:37.151 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.151 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.151 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.151 [main] ResultSetProcessorImpl - Starting ResultSet row #45
[DEBUG] 2023-03-01 13:47:37.151 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.152 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.152 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.152 [main] ResultSetProcessorImpl - Starting ResultSet row #46
[DEBUG] 2023-03-01 13:47:37.152 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.152 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.152 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.152 [main] ResultSetProcessorImpl - Starting ResultSet row #47
[DEBUG] 2023-03-01 13:47:37.152 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.152 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.152 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.152 [main] ResultSetProcessorImpl - Starting ResultSet row #48
[DEBUG] 2023-03-01 13:47:37.152 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.152 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.152 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.153 [main] ResultSetProcessorImpl - Starting ResultSet row #49
[DEBUG] 2023-03-01 13:47:37.153 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.153 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.153 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.153 [main] ResultSetProcessorImpl - Starting ResultSet row #50
[DEBUG] 2023-03-01 13:47:37.153 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.153 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.153 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.154 [main] ResultSetProcessorImpl - Starting ResultSet row #51
[DEBUG] 2023-03-01 13:47:37.154 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.154 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.154 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.154 [main] ResultSetProcessorImpl - Starting ResultSet row #52
[DEBUG] 2023-03-01 13:47:37.154 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.154 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.154 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.154 [main] ResultSetProcessorImpl - Starting ResultSet row #53
[DEBUG] 2023-03-01 13:47:37.154 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.154 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.154 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.155 [main] ResultSetProcessorImpl - Starting ResultSet row #54
[DEBUG] 2023-03-01 13:47:37.155 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.155 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.155 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.155 [main] ResultSetProcessorImpl - Starting ResultSet row #55
[DEBUG] 2023-03-01 13:47:37.155 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.155 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.155 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.155 [main] ResultSetProcessorImpl - Starting ResultSet row #56
[DEBUG] 2023-03-01 13:47:37.155 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.156 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.156 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.156 [main] ResultSetProcessorImpl - Starting ResultSet row #57
[DEBUG] 2023-03-01 13:47:37.156 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.156 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.156 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.156 [main] ResultSetProcessorImpl - Starting ResultSet row #58
[DEBUG] 2023-03-01 13:47:37.156 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.156 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.156 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.156 [main] ResultSetProcessorImpl - Starting ResultSet row #59
[DEBUG] 2023-03-01 13:47:37.156 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.156 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.157 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.157 [main] ResultSetProcessorImpl - Starting ResultSet row #60
[DEBUG] 2023-03-01 13:47:37.157 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.157 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.157 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.157 [main] ResultSetProcessorImpl - Starting ResultSet row #61
[DEBUG] 2023-03-01 13:47:37.157 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.157 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.157 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.157 [main] ResultSetProcessorImpl - Starting ResultSet row #62
[DEBUG] 2023-03-01 13:47:37.157 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.157 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.158 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.Recipe#1]
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Processing attribute `calories` : value = 1196
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Attribute (`calories`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Processing attribute `carbohydrates` : value = 14
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Attribute (`carbohydrates`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Processing attribute `fat` : value = 105
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Attribute (`fat`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Processing attribute `instructions` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Attribute (`instructions`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Processing attribute `protein` : value = 50
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Attribute (`protein`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Processing attribute `recipeName` : value = Homemade Chicken Alfredo
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Processing attribute `serving` : value = 2
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Attribute (`serving`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Processing attribute `totalTimeInMin` : value = 35
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Attribute (`totalTimeInMin`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Processing attribute `type` : value = Dinner
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.Recipe#1]
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#1]
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chicken breast 
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.158 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#1]
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.User#1]
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Processing attribute `email` : value = halou
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Harry
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Louis
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.User#1]
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#2]
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Fettuccini noodles
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = pound
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#2]
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#3]
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Extra virgin olive oil
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 3.0
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = tbsp
[DEBUG] 2023-03-01 13:47:37.159 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#3]
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#4]
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chicken stock
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.5
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#4]
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#5]
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Garlic clove
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#5]
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#6]
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Heavy cream
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.5
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.160 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#6]
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#7]
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Parmesan
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#7]
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#8]
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Parsley
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 0.25
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#8]
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#9]
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Lemon (Juice)
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.161 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.162 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#9]
[DEBUG] 2023-03-01 13:47:37.162 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:37.162 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.162 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:37.162 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:37.162 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.162 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:37.182 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.182 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.amgenz.entity.Recipe#1
[DEBUG] 2023-03-01 13:47:37.182 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:37.182 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:37.183 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Boil fettucine pasta according to box instructions, when ready se aside.
[DEBUG] 2023-03-01 13:47:37.183 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.183 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 2
[DEBUG] 2023-03-01 13:47:37.183 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.183 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.183 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.183 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:37.183 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:37.183 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Heat a non-stick pan with olive oil and add chicken strips. Cook for 6-7 minutes on each side until golden brown, on medium heat. Remove chicken from pan when ready and set aside.
[DEBUG] 2023-03-01 13:47:37.183 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.183 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 3
[DEBUG] 2023-03-01 13:47:37.183 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add minced garlic and saute for 3 minutes. Deglaze pan with chicken stock, add lemon juice and bring to boil.
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 4
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add heavy cream, then add the cooked pasta and chicken.
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 5
[DEBUG] 2023-03-01 13:47:37.184 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add parmesan and stir until everything is well combined.
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 6
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Sprinkle with parsley and enjoy!
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 7
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#8]
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Place eggs in a saucepan and cover with cold water. Bring water to a boil and immediately remove from heat. Cover and let eggs stand in hot water for 10 - 12 minutes. Remove from hot water, cool, peel, and chop.
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 1
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 2
[DEBUG] 2023-03-01 13:47:37.185 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.185 [main] SQL - select recipe0_.id as id1_2_0_, recipe0_.calories as calories2_2_0_, recipe0_.carbohydrates as carbohyd3_2_0_, recipe0_.fat as fat4_2_0_, recipe0_.protein as protein5_2_0_, recipe0_.recipe_name as recipe_n6_2_0_, recipe0_.serving as serving7_2_0_, recipe0_.total_time_in_min as total_ti8_2_0_, recipe0_.type as type9_2_0_, recipe0_.user_id as user_id10_2_0_, ingredient1_.recipe_id as recipe_i5_0_1_, ingredient1_.id as id1_0_1_, ingredient1_.id as id1_0_2_, ingredient1_.ingredient as ingredie2_0_2_, ingredient1_.ingredient_amount as ingredie3_0_2_, ingredient1_.ingredient_amount_measurement as ingredie4_0_2_, ingredient1_.recipe_id as recipe_i5_0_2_, instructio2_.recipe_id as recipe_i4_1_3_, instructio2_.id as id1_1_3_, instructio2_.id as id1_1_4_, instructio2_.instruction as instruct2_1_4_, instructio2_.instruction_order as instruct3_1_4_, instructio2_.recipe_id as recipe_i4_1_4_, user3_.id as id1_3_5_, user3_.email as email2_3_5_, user3_.first_name as first_na3_3_5_, user3_.last_name as last_nam4_3_5_ from recipes recipe0_ left outer join recipe_ingredient ingredient1_ on recipe0_.id=ingredient1_.recipe_id left outer join recipe_instruction instructio2_ on recipe0_.id=instructio2_.recipe_id left outer join users user3_ on recipe0_.user_id=user3_.id where recipe0_.id=?
[DEBUG] 2023-03-01 13:47:37.193 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.193 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.194 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#2]
[DEBUG] 2023-03-01 13:47:37.194 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#2]
[DEBUG] 2023-03-01 13:47:37.196 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2023-03-01 13:47:37.196 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.196 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#2]
[DEBUG] 2023-03-01 13:47:37.196 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#2]
[DEBUG] 2023-03-01 13:47:37.196 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2023-03-01 13:47:37.196 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.197 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#2]
[DEBUG] 2023-03-01 13:47:37.197 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#2]
[DEBUG] 2023-03-01 13:47:37.197 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2023-03-01 13:47:37.197 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.198 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#2]
[DEBUG] 2023-03-01 13:47:37.198 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#2]
[DEBUG] 2023-03-01 13:47:37.198 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2023-03-01 13:47:37.198 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.198 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#2]
[DEBUG] 2023-03-01 13:47:37.198 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#2]
[DEBUG] 2023-03-01 13:47:37.198 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2023-03-01 13:47:37.198 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.199 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#2]
[DEBUG] 2023-03-01 13:47:37.199 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#2]
[DEBUG] 2023-03-01 13:47:37.199 [main] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2023-03-01 13:47:37.199 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.199 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#2]
[DEBUG] 2023-03-01 13:47:37.199 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#2]
[DEBUG] 2023-03-01 13:47:37.199 [main] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2023-03-01 13:47:37.199 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.199 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#2]
[DEBUG] 2023-03-01 13:47:37.199 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#2]
[DEBUG] 2023-03-01 13:47:37.200 [main] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2023-03-01 13:47:37.200 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.200 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#2]
[DEBUG] 2023-03-01 13:47:37.200 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#2]
[DEBUG] 2023-03-01 13:47:37.200 [main] ResultSetProcessorImpl - Starting ResultSet row #9
[DEBUG] 2023-03-01 13:47:37.200 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.200 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#2]
[DEBUG] 2023-03-01 13:47:37.200 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#2]
[DEBUG] 2023-03-01 13:47:37.200 [main] ResultSetProcessorImpl - Starting ResultSet row #10
[DEBUG] 2023-03-01 13:47:37.200 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.201 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#2]
[DEBUG] 2023-03-01 13:47:37.201 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#2]
[DEBUG] 2023-03-01 13:47:37.201 [main] ResultSetProcessorImpl - Starting ResultSet row #11
[DEBUG] 2023-03-01 13:47:37.201 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.201 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#2]
[DEBUG] 2023-03-01 13:47:37.201 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#2]
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.Recipe#2]
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Processing attribute `calories` : value = 334
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Attribute (`calories`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Processing attribute `carbohydrates` : value = 2
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Attribute (`carbohydrates`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Processing attribute `fat` : value = 32
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Attribute (`fat`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Processing attribute `instructions` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Attribute (`instructions`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Processing attribute `protein` : value = 13
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Attribute (`protein`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Processing attribute `recipeName` : value = Delicious Egg Salad (Easy)
[DEBUG] 2023-03-01 13:47:37.201 [main] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Processing attribute `serving` : value = 4
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Attribute (`serving`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Processing attribute `totalTimeInMin` : value = 35
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Attribute (`totalTimeInMin`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Processing attribute `type` : value = Lunch
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.Recipe#2]
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#10]
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Eggs
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 8.0
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 2
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#10]
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.User#2]
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Processing attribute `email` : value = sijames
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Simon
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Processing attribute `lastName` : value = James
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.User#2]
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#11]
[DEBUG] 2023-03-01 13:47:37.202 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Mayonnaise
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 0.5
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 2
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#11]
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#12]
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chopped Green Onion
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 0.25
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 2
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#12]
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#13]
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Yellow mustard
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = teaspoon
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 2
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#13]
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#14]
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Paprika
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 0.25
[DEBUG] 2023-03-01 13:47:37.203 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.204 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = teaspoon
[DEBUG] 2023-03-01 13:47:37.204 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.204 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 2
[DEBUG] 2023-03-01 13:47:37.204 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.220 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#14]
[DEBUG] 2023-03-01 13:47:37.220 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#15]
[DEBUG] 2023-03-01 13:47:37.220 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Salt and pepper to taste
[DEBUG] 2023-03-01 13:47:37.220 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.220 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 0.0
[DEBUG] 2023-03-01 13:47:37.221 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.221 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.221 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.221 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 2
[DEBUG] 2023-03-01 13:47:37.221 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.221 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#15]
[DEBUG] 2023-03-01 13:47:37.221 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:37.223 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.ingredients#2]
[DEBUG] 2023-03-01 13:47:37.224 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:37.224 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:37.224 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.instructions#2]
[DEBUG] 2023-03-01 13:47:37.224 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:37.224 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.224 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.amgenz.entity.Recipe#2
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#8]
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#9]
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Place chopped eggs in a bowl, stir in mayonnaise, green onion, and mustard. Season with paprika, salt, and pepper. Stir and serve on your favorite bread or crackers.
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 2
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 2
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#9]
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#10]
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Preheat oven to 375 degrees. Spray 9-inch pie pan with non-stick cooking spray.
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 1
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 3
[DEBUG] 2023-03-01 13:47:37.224 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.224 [main] SQL - select recipe0_.id as id1_2_0_, recipe0_.calories as calories2_2_0_, recipe0_.carbohydrates as carbohyd3_2_0_, recipe0_.fat as fat4_2_0_, recipe0_.protein as protein5_2_0_, recipe0_.recipe_name as recipe_n6_2_0_, recipe0_.serving as serving7_2_0_, recipe0_.total_time_in_min as total_ti8_2_0_, recipe0_.type as type9_2_0_, recipe0_.user_id as user_id10_2_0_, ingredient1_.recipe_id as recipe_i5_0_1_, ingredient1_.id as id1_0_1_, ingredient1_.id as id1_0_2_, ingredient1_.ingredient as ingredie2_0_2_, ingredient1_.ingredient_amount as ingredie3_0_2_, ingredient1_.ingredient_amount_measurement as ingredie4_0_2_, ingredient1_.recipe_id as recipe_i5_0_2_, instructio2_.recipe_id as recipe_i4_1_3_, instructio2_.id as id1_1_3_, instructio2_.id as id1_1_4_, instructio2_.instruction as instruct2_1_4_, instructio2_.instruction_order as instruct3_1_4_, instructio2_.recipe_id as recipe_i4_1_4_, user3_.id as id1_3_5_, user3_.email as email2_3_5_, user3_.first_name as first_na3_3_5_, user3_.last_name as last_nam4_3_5_ from recipes recipe0_ left outer join recipe_ingredient ingredient1_ on recipe0_.id=ingredient1_.recipe_id left outer join recipe_instruction instructio2_ on recipe0_.id=instructio2_.recipe_id left outer join users user3_ on recipe0_.user_id=user3_.id where recipe0_.id=?
[DEBUG] 2023-03-01 13:47:37.227 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.227 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.227 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.228 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.228 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2023-03-01 13:47:37.228 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.228 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.228 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.228 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2023-03-01 13:47:37.228 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.228 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.228 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.228 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2023-03-01 13:47:37.228 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.228 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.228 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.228 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2023-03-01 13:47:37.228 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.228 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.228 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.228 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2023-03-01 13:47:37.228 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.229 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.229 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.229 [main] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2023-03-01 13:47:37.229 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.229 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.230 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.230 [main] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2023-03-01 13:47:37.230 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.230 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.230 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.230 [main] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2023-03-01 13:47:37.230 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.230 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.230 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.230 [main] ResultSetProcessorImpl - Starting ResultSet row #9
[DEBUG] 2023-03-01 13:47:37.230 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.230 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.230 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.230 [main] ResultSetProcessorImpl - Starting ResultSet row #10
[DEBUG] 2023-03-01 13:47:37.230 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.235 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.235 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.235 [main] ResultSetProcessorImpl - Starting ResultSet row #11
[DEBUG] 2023-03-01 13:47:37.235 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.235 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.235 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.235 [main] ResultSetProcessorImpl - Starting ResultSet row #12
[DEBUG] 2023-03-01 13:47:37.235 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.235 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.235 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] ResultSetProcessorImpl - Starting ResultSet row #13
[DEBUG] 2023-03-01 13:47:37.236 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.236 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] ResultSetProcessorImpl - Starting ResultSet row #14
[DEBUG] 2023-03-01 13:47:37.236 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.236 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] ResultSetProcessorImpl - Starting ResultSet row #15
[DEBUG] 2023-03-01 13:47:37.236 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.236 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] ResultSetProcessorImpl - Starting ResultSet row #16
[DEBUG] 2023-03-01 13:47:37.236 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.236 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] ResultSetProcessorImpl - Starting ResultSet row #17
[DEBUG] 2023-03-01 13:47:37.236 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.236 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] ResultSetProcessorImpl - Starting ResultSet row #18
[DEBUG] 2023-03-01 13:47:37.236 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.236 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] ResultSetProcessorImpl - Starting ResultSet row #19
[DEBUG] 2023-03-01 13:47:37.236 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.236 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.236 [main] ResultSetProcessorImpl - Starting ResultSet row #20
[DEBUG] 2023-03-01 13:47:37.236 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] ResultSetProcessorImpl - Starting ResultSet row #21
[DEBUG] 2023-03-01 13:47:37.237 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] ResultSetProcessorImpl - Starting ResultSet row #22
[DEBUG] 2023-03-01 13:47:37.237 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] ResultSetProcessorImpl - Starting ResultSet row #23
[DEBUG] 2023-03-01 13:47:37.237 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] ResultSetProcessorImpl - Starting ResultSet row #24
[DEBUG] 2023-03-01 13:47:37.237 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] ResultSetProcessorImpl - Starting ResultSet row #25
[DEBUG] 2023-03-01 13:47:37.237 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] ResultSetProcessorImpl - Starting ResultSet row #26
[DEBUG] 2023-03-01 13:47:37.237 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] ResultSetProcessorImpl - Starting ResultSet row #27
[DEBUG] 2023-03-01 13:47:37.237 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] ResultSetProcessorImpl - Starting ResultSet row #28
[DEBUG] 2023-03-01 13:47:37.238 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.238 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] ResultSetProcessorImpl - Starting ResultSet row #29
[DEBUG] 2023-03-01 13:47:37.238 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.238 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] ResultSetProcessorImpl - Starting ResultSet row #30
[DEBUG] 2023-03-01 13:47:37.238 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.238 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] ResultSetProcessorImpl - Starting ResultSet row #31
[DEBUG] 2023-03-01 13:47:37.238 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.238 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] ResultSetProcessorImpl - Starting ResultSet row #32
[DEBUG] 2023-03-01 13:47:37.238 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.238 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] ResultSetProcessorImpl - Starting ResultSet row #33
[DEBUG] 2023-03-01 13:47:37.238 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.238 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] ResultSetProcessorImpl - Starting ResultSet row #34
[DEBUG] 2023-03-01 13:47:37.238 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.238 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.238 [main] ResultSetProcessorImpl - Starting ResultSet row #35
[DEBUG] 2023-03-01 13:47:37.238 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.239 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.239 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.239 [main] ResultSetProcessorImpl - Starting ResultSet row #36
[DEBUG] 2023-03-01 13:47:37.239 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.239 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.239 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.239 [main] ResultSetProcessorImpl - Starting ResultSet row #37
[DEBUG] 2023-03-01 13:47:37.239 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.239 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.239 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.239 [main] ResultSetProcessorImpl - Starting ResultSet row #38
[DEBUG] 2023-03-01 13:47:37.239 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.239 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.239 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.239 [main] ResultSetProcessorImpl - Starting ResultSet row #39
[DEBUG] 2023-03-01 13:47:37.239 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.239 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.239 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.Recipe#3]
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `calories` : value = 312
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`calories`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `carbohydrates` : value = 5
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`carbohydrates`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `fat` : value = 24
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`fat`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `instructions` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`instructions`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `protein` : value = 19
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`protein`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `recipeName` : value = Hashbrown Breakfast Casserole
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `serving` : value = 6
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`serving`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `totalTimeInMin` : value = 70
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`totalTimeInMin`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `type` : value = Breakfast
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.Recipe#3]
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#16]
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Frozen hashbrowns, thawed 
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = bag
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 3
[DEBUG] 2023-03-01 13:47:37.239 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#16]
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.User#5]
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `email` : value = ashdoug
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ashley
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Douglas
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.User#5]
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#17]
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Salted butter, melted
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 0.25
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 3
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#17]
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#18]
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Eggs
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 3.0
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 3
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#18]
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#19]
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Milk
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 3
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#19]
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#20]
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Salt
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = teaspoon
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 3
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#20]
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#21]
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Shredded mild cheddar cheese
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 3
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#21]
[DEBUG] 2023-03-01 13:47:37.246 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#22]
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Shredded swiss cheese
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 3
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#22]
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#23]
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Diced ham
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 3
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#23]
[DEBUG] 2023-03-01 13:47:37.247 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:37.247 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.ingredients#3]
[DEBUG] 2023-03-01 13:47:37.247 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:37.247 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:37.247 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.instructions#3]
[DEBUG] 2023-03-01 13:47:37.247 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:37.247 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.247 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.amgenz.entity.Recipe#3
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#10]
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#11]
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Place hashbrowns in pan and drizzle with melted butter. Bake 20 minutes and remove from oven.
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 2
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 3
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#11]
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#12]
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Combine eggs, milk and salt in a medium bowl and wisk thoroughly. Set aside. 
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 3
[DEBUG] 2023-03-01 13:47:37.247 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.261 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 3
[DEBUG] 2023-03-01 13:47:37.261 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.261 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#12]
[DEBUG] 2023-03-01 13:47:37.261 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#13]
[DEBUG] 2023-03-01 13:47:37.261 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Evenly layer cheddar cheese, swiss cheese and ham on top of cooked hashbrowns. Pour egg mixtue over top. 
[DEBUG] 2023-03-01 13:47:37.261 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.262 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 4
[DEBUG] 2023-03-01 13:47:37.262 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.262 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 3
[DEBUG] 2023-03-01 13:47:37.262 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.262 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#13]
[DEBUG] 2023-03-01 13:47:37.262 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#14]
[DEBUG] 2023-03-01 13:47:37.262 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Bake at 350 degrees for 40 minutes or until eggs are set. Remove from oven and let sit for 3 to 5 minutes. Serve warm. 
[DEBUG] 2023-03-01 13:47:37.262 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.262 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 5
[DEBUG] 2023-03-01 13:47:37.262 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.262 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 3
[DEBUG] 2023-03-01 13:47:37.262 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.263 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#14]
[DEBUG] 2023-03-01 13:47:37.263 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.amgenz.entity.User.recipes#5]
[DEBUG] 2023-03-01 13:47:37.263 [main] SQL - select recipes0_.user_id as user_id10_2_0_, recipes0_.id as id1_2_0_, recipes0_.id as id1_2_1_, recipes0_.calories as calories2_2_1_, recipes0_.carbohydrates as carbohyd3_2_1_, recipes0_.fat as fat4_2_1_, recipes0_.protein as protein5_2_1_, recipes0_.recipe_name as recipe_n6_2_1_, recipes0_.serving as serving7_2_1_, recipes0_.total_time_in_min as total_ti8_2_1_, recipes0_.type as type9_2_1_, recipes0_.user_id as user_id10_2_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2023-03-01 13:47:37.265 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.amgenz.entity.User.recipes#5]
[DEBUG] 2023-03-01 13:47:37.265 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.265 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.User.recipes#5]
[DEBUG] 2023-03-01 13:47:37.266 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:37.266 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.User.recipes#5]
[DEBUG] 2023-03-01 13:47:37.266 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:37.266 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.266 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2023-03-01 13:47:37.266 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.amgenz.entity.User.recipes#2]
[DEBUG] 2023-03-01 13:47:37.267 [main] SQL - select recipes0_.user_id as user_id10_2_0_, recipes0_.id as id1_2_0_, recipes0_.id as id1_2_1_, recipes0_.calories as calories2_2_1_, recipes0_.carbohydrates as carbohyd3_2_1_, recipes0_.fat as fat4_2_1_, recipes0_.protein as protein5_2_1_, recipes0_.recipe_name as recipe_n6_2_1_, recipes0_.serving as serving7_2_1_, recipes0_.total_time_in_min as total_ti8_2_1_, recipes0_.type as type9_2_1_, recipes0_.user_id as user_id10_2_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2023-03-01 13:47:37.278 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.amgenz.entity.User.recipes#2]
[DEBUG] 2023-03-01 13:47:37.278 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.279 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.User.recipes#2]
[DEBUG] 2023-03-01 13:47:37.279 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:37.279 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.User.recipes#2]
[DEBUG] 2023-03-01 13:47:37.279 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:37.279 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.279 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2023-03-01 13:47:37.279 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.279 [main] SQL - select recipes0_.user_id as user_id10_2_0_, recipes0_.id as id1_2_0_, recipes0_.id as id1_2_1_, recipes0_.calories as calories2_2_1_, recipes0_.carbohydrates as carbohyd3_2_1_, recipes0_.fat as fat4_2_1_, recipes0_.protein as protein5_2_1_, recipes0_.recipe_name as recipe_n6_2_1_, recipes0_.serving as serving7_2_1_, recipes0_.total_time_in_min as total_ti8_2_1_, recipes0_.type as type9_2_1_, recipes0_.user_id as user_id10_2_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2023-03-01 13:47:37.283 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.283 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.283 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.283 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:37.283 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.283 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:37.283 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.283 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2023-03-01 13:47:37.283 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-03-01 13:47:37.460 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from RecipeInstruction as generatedAlias0 where generatedAlias0.instruction like :param0
[DEBUG] 2023-03-01 13:47:37.462 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.amgenz.entity.RecipeInstruction as generatedAlias0 where generatedAlias0.instruction like :param0
[DEBUG] 2023-03-01 13:47:37.463 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-03-01 13:47:37.463 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'amgenz'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'RecipeInstruction'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'instruction'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2023-03-01 13:47:37.463 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2023-03-01 13:47:37.464 [main] FromElement - FromClause{level=1} : com.amgenz.entity.RecipeInstruction (generatedAlias0) -> recipeinst0_
[DEBUG] 2023-03-01 13:47:37.464 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipeinst0_.id
[DEBUG] 2023-03-01 13:47:37.464 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipeinst0_.id
[DEBUG] 2023-03-01 13:47:37.464 [main] DotNode - getDataType() : instruction -> org.hibernate.type.StringType@13da7ab0
[DEBUG] 2023-03-01 13:47:37.464 [main] FromReferenceNode - Resolved : generatedAlias0.instruction -> recipeinst0_.instruction
[DEBUG] 2023-03-01 13:47:37.464 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2023-03-01 13:47:37.464 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipeinst0_.id ) ( FromClause{level=1} recipe_instruction recipeinst0_ ) ( where ( like ( recipeinst0_.instruction recipeinst0_.id instruction ) ? ) ) )
[DEBUG] 2023-03-01 13:47:37.464 [main] JoinProcessor - Using FROM fragment [recipe_instruction recipeinst0_]
[DEBUG] 2023-03-01 13:47:37.464 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2023-03-01 13:47:37.464 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipe_instruction)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipeinst0_.id as id1_1_' {alias=generatedAlias0, className=com.amgenz.entity.RecipeInstruction, tableAlias=recipeinst0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipeinst0_.instruction as instruct2_1_, recipeinst0_.instruction_order as instruct3_1_, recipeinst0_.recipe_id as recipe_i4_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipeinst0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'recipe_instruction recipeinst0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipe_instruction,tableAlias=recipeinst0_,origin=null,columns={,className=com.amgenz.entity.RecipeInstruction}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'recipeinst0_.instruction' {propertyName=instruction,dereferenceType=PRIMITIVE,getPropertyPath=instruction,path=generatedAlias0.instruction,tableAlias=recipeinst0_,className=com.amgenz.entity.RecipeInstruction,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'recipeinst0_.id' {alias=generatedAlias0, className=com.amgenz.entity.RecipeInstruction, tableAlias=recipeinst0_}
          |  \-[IDENT] IdentNode: 'instruction' {originalText=instruction}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@13da7ab0}

[DEBUG] 2023-03-01 13:47:37.464 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-03-01 13:47:37.464 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.amgenz.entity.RecipeInstruction as generatedAlias0 where generatedAlias0.instruction like :param0
[DEBUG] 2023-03-01 13:47:37.464 [main] QueryTranslatorImpl - SQL: select recipeinst0_.id as id1_1_, recipeinst0_.instruction as instruct2_1_, recipeinst0_.instruction_order as instruct3_1_, recipeinst0_.recipe_id as recipe_i4_1_ from recipe_instruction recipeinst0_ where recipeinst0_.instruction like ?
[DEBUG] 2023-03-01 13:47:37.464 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-03-01 13:47:37.465 [main] SQL - select recipeinst0_.id as id1_1_, recipeinst0_.instruction as instruct2_1_, recipeinst0_.instruction_order as instruct3_1_, recipeinst0_.recipe_id as recipe_i4_1_ from recipe_instruction recipeinst0_ where recipeinst0_.instruction like ?
[DEBUG] 2023-03-01 13:47:37.468 [main] Loader - Result set row: 0
[DEBUG] 2023-03-01 13:47:37.468 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:37.468 [main] Loader - Result set row: 1
[DEBUG] 2023-03-01 13:47:37.468 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:37.469 [main] Loader - Result set row: 2
[DEBUG] 2023-03-01 13:47:37.469 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:37.469 [main] Loader - Result set row: 3
[DEBUG] 2023-03-01 13:47:37.469 [main] Loader - Result row: EntityKey[com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:37.469 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:37.469 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Heat a non-stick pan with olive oil and add chicken strips. Cook for 6-7 minutes on each side until golden brown, on medium heat. Remove chicken from pan when ready and set aside.
[DEBUG] 2023-03-01 13:47:37.469 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.469 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 3
[DEBUG] 2023-03-01 13:47:37.469 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.469 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.469 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.469 [main] SQL - select recipe0_.id as id1_2_0_, recipe0_.calories as calories2_2_0_, recipe0_.carbohydrates as carbohyd3_2_0_, recipe0_.fat as fat4_2_0_, recipe0_.protein as protein5_2_0_, recipe0_.recipe_name as recipe_n6_2_0_, recipe0_.serving as serving7_2_0_, recipe0_.total_time_in_min as total_ti8_2_0_, recipe0_.type as type9_2_0_, recipe0_.user_id as user_id10_2_0_, ingredient1_.recipe_id as recipe_i5_0_1_, ingredient1_.id as id1_0_1_, ingredient1_.id as id1_0_2_, ingredient1_.ingredient as ingredie2_0_2_, ingredient1_.ingredient_amount as ingredie3_0_2_, ingredient1_.ingredient_amount_measurement as ingredie4_0_2_, ingredient1_.recipe_id as recipe_i5_0_2_, instructio2_.recipe_id as recipe_i4_1_3_, instructio2_.id as id1_1_3_, instructio2_.id as id1_1_4_, instructio2_.instruction as instruct2_1_4_, instructio2_.instruction_order as instruct3_1_4_, instructio2_.recipe_id as recipe_i4_1_4_, user3_.id as id1_3_5_, user3_.email as email2_3_5_, user3_.first_name as first_na3_3_5_, user3_.last_name as last_nam4_3_5_ from recipes recipe0_ left outer join recipe_ingredient ingredient1_ on recipe0_.id=ingredient1_.recipe_id left outer join recipe_instruction instructio2_ on recipe0_.id=instructio2_.recipe_id left outer join users user3_ on recipe0_.user_id=user3_.id where recipe0_.id=?
[DEBUG] 2023-03-01 13:47:37.477 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.478 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.478 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.480 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.480 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2023-03-01 13:47:37.480 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.480 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.480 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.480 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2023-03-01 13:47:37.480 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.480 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2023-03-01 13:47:37.481 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2023-03-01 13:47:37.481 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2023-03-01 13:47:37.481 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2023-03-01 13:47:37.481 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2023-03-01 13:47:37.481 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2023-03-01 13:47:37.481 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] ResultSetProcessorImpl - Starting ResultSet row #9
[DEBUG] 2023-03-01 13:47:37.481 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.481 [main] ResultSetProcessorImpl - Starting ResultSet row #10
[DEBUG] 2023-03-01 13:47:37.482 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] ResultSetProcessorImpl - Starting ResultSet row #11
[DEBUG] 2023-03-01 13:47:37.482 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] ResultSetProcessorImpl - Starting ResultSet row #12
[DEBUG] 2023-03-01 13:47:37.482 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] ResultSetProcessorImpl - Starting ResultSet row #13
[DEBUG] 2023-03-01 13:47:37.482 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] ResultSetProcessorImpl - Starting ResultSet row #14
[DEBUG] 2023-03-01 13:47:37.482 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] ResultSetProcessorImpl - Starting ResultSet row #15
[DEBUG] 2023-03-01 13:47:37.482 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] ResultSetProcessorImpl - Starting ResultSet row #16
[DEBUG] 2023-03-01 13:47:37.482 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] ResultSetProcessorImpl - Starting ResultSet row #17
[DEBUG] 2023-03-01 13:47:37.482 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] ResultSetProcessorImpl - Starting ResultSet row #18
[DEBUG] 2023-03-01 13:47:37.482 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.482 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] ResultSetProcessorImpl - Starting ResultSet row #19
[DEBUG] 2023-03-01 13:47:37.483 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] ResultSetProcessorImpl - Starting ResultSet row #20
[DEBUG] 2023-03-01 13:47:37.483 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] ResultSetProcessorImpl - Starting ResultSet row #21
[DEBUG] 2023-03-01 13:47:37.483 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] ResultSetProcessorImpl - Starting ResultSet row #22
[DEBUG] 2023-03-01 13:47:37.483 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] ResultSetProcessorImpl - Starting ResultSet row #23
[DEBUG] 2023-03-01 13:47:37.483 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] ResultSetProcessorImpl - Starting ResultSet row #24
[DEBUG] 2023-03-01 13:47:37.483 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] ResultSetProcessorImpl - Starting ResultSet row #25
[DEBUG] 2023-03-01 13:47:37.483 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] ResultSetProcessorImpl - Starting ResultSet row #26
[DEBUG] 2023-03-01 13:47:37.483 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] ResultSetProcessorImpl - Starting ResultSet row #27
[DEBUG] 2023-03-01 13:47:37.483 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] ResultSetProcessorImpl - Starting ResultSet row #28
[DEBUG] 2023-03-01 13:47:37.484 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.484 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] ResultSetProcessorImpl - Starting ResultSet row #29
[DEBUG] 2023-03-01 13:47:37.484 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.484 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] ResultSetProcessorImpl - Starting ResultSet row #30
[DEBUG] 2023-03-01 13:47:37.484 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.484 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] ResultSetProcessorImpl - Starting ResultSet row #31
[DEBUG] 2023-03-01 13:47:37.484 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.484 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] ResultSetProcessorImpl - Starting ResultSet row #32
[DEBUG] 2023-03-01 13:47:37.484 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.484 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] ResultSetProcessorImpl - Starting ResultSet row #33
[DEBUG] 2023-03-01 13:47:37.484 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.484 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] ResultSetProcessorImpl - Starting ResultSet row #34
[DEBUG] 2023-03-01 13:47:37.484 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.484 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.484 [main] ResultSetProcessorImpl - Starting ResultSet row #35
[DEBUG] 2023-03-01 13:47:37.484 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] ResultSetProcessorImpl - Starting ResultSet row #36
[DEBUG] 2023-03-01 13:47:37.485 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] ResultSetProcessorImpl - Starting ResultSet row #37
[DEBUG] 2023-03-01 13:47:37.485 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] ResultSetProcessorImpl - Starting ResultSet row #38
[DEBUG] 2023-03-01 13:47:37.485 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] ResultSetProcessorImpl - Starting ResultSet row #39
[DEBUG] 2023-03-01 13:47:37.485 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] ResultSetProcessorImpl - Starting ResultSet row #40
[DEBUG] 2023-03-01 13:47:37.485 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] ResultSetProcessorImpl - Starting ResultSet row #41
[DEBUG] 2023-03-01 13:47:37.485 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] ResultSetProcessorImpl - Starting ResultSet row #42
[DEBUG] 2023-03-01 13:47:37.485 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.485 [main] ResultSetProcessorImpl - Starting ResultSet row #43
[DEBUG] 2023-03-01 13:47:37.485 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] ResultSetProcessorImpl - Starting ResultSet row #44
[DEBUG] 2023-03-01 13:47:37.486 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] ResultSetProcessorImpl - Starting ResultSet row #45
[DEBUG] 2023-03-01 13:47:37.486 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] ResultSetProcessorImpl - Starting ResultSet row #46
[DEBUG] 2023-03-01 13:47:37.486 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] ResultSetProcessorImpl - Starting ResultSet row #47
[DEBUG] 2023-03-01 13:47:37.486 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] ResultSetProcessorImpl - Starting ResultSet row #48
[DEBUG] 2023-03-01 13:47:37.486 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] ResultSetProcessorImpl - Starting ResultSet row #49
[DEBUG] 2023-03-01 13:47:37.486 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] ResultSetProcessorImpl - Starting ResultSet row #50
[DEBUG] 2023-03-01 13:47:37.486 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] ResultSetProcessorImpl - Starting ResultSet row #51
[DEBUG] 2023-03-01 13:47:37.486 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.486 [main] ResultSetProcessorImpl - Starting ResultSet row #52
[DEBUG] 2023-03-01 13:47:37.486 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] ResultSetProcessorImpl - Starting ResultSet row #53
[DEBUG] 2023-03-01 13:47:37.487 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] ResultSetProcessorImpl - Starting ResultSet row #54
[DEBUG] 2023-03-01 13:47:37.487 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] ResultSetProcessorImpl - Starting ResultSet row #55
[DEBUG] 2023-03-01 13:47:37.487 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] ResultSetProcessorImpl - Starting ResultSet row #56
[DEBUG] 2023-03-01 13:47:37.487 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] ResultSetProcessorImpl - Starting ResultSet row #57
[DEBUG] 2023-03-01 13:47:37.487 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] ResultSetProcessorImpl - Starting ResultSet row #58
[DEBUG] 2023-03-01 13:47:37.487 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] ResultSetProcessorImpl - Starting ResultSet row #59
[DEBUG] 2023-03-01 13:47:37.487 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] ResultSetProcessorImpl - Starting ResultSet row #60
[DEBUG] 2023-03-01 13:47:37.487 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] ResultSetProcessorImpl - Starting ResultSet row #61
[DEBUG] 2023-03-01 13:47:37.487 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.487 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.488 [main] ResultSetProcessorImpl - Starting ResultSet row #62
[DEBUG] 2023-03-01 13:47:37.488 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.488 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.488 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.Recipe#1]
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `calories` : value = 1196
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`calories`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `carbohydrates` : value = 14
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`carbohydrates`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `fat` : value = 105
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`fat`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `instructions` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`instructions`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `protein` : value = 50
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`protein`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `recipeName` : value = Homemade Chicken Alfredo
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `serving` : value = 2
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`serving`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `totalTimeInMin` : value = 35
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`totalTimeInMin`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `type` : value = Dinner
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.Recipe#1]
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#1]
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chicken breast 
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#1]
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Wash Chicken breast then pat dry. Cut into thin strips. 
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 1
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.User#1]
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `email` : value = halou
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Harry
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Louis
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.User#1]
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Boil fettucine pasta according to box instructions, when ready se aside.
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 2
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Sprinkle with parsley and enjoy!
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 7
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#2]
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Fettuccini noodles
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = pound
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.488 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#2]
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#3]
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Extra virgin olive oil
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 3.0
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = tbsp
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#3]
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#4]
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chicken stock
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.5
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#4]
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#5]
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Garlic clove
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#5]
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#6]
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Heavy cream
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.5
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#6]
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#7]
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Parmesan
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#7]
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#8]
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Parsley
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 0.25
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#8]
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#9]
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Lemon (Juice)
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.489 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#9]
[DEBUG] 2023-03-01 13:47:37.489 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:37.490 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.490 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:37.490 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:37.490 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.490 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:37.490 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.490 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.amgenz.entity.Recipe#1
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add minced garlic and saute for 3 minutes. Deglaze pan with chicken stock, add lemon juice and bring to boil.
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 4
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add heavy cream, then add the cooked pasta and chicken.
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 5
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add parmesan and stir until everything is well combined.
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 6
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.490 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:37.490 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.490 [main] SQL - select recipes0_.user_id as user_id10_2_0_, recipes0_.id as id1_2_0_, recipes0_.id as id1_2_1_, recipes0_.calories as calories2_2_1_, recipes0_.carbohydrates as carbohyd3_2_1_, recipes0_.fat as fat4_2_1_, recipes0_.protein as protein5_2_1_, recipes0_.recipe_name as recipe_n6_2_1_, recipes0_.serving as serving7_2_1_, recipes0_.total_time_in_min as total_ti8_2_1_, recipes0_.type as type9_2_1_, recipes0_.user_id as user_id10_2_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2023-03-01 13:47:37.527 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.527 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.527 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.527 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:37.527 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.527 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:37.527 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.528 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2023-03-01 13:47:37.528 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-03-01 13:47:37.685 [main] SQL - select recipeinst0_.id as id1_1_0_, recipeinst0_.instruction as instruct2_1_0_, recipeinst0_.instruction_order as instruct3_1_0_, recipeinst0_.recipe_id as recipe_i4_1_0_, recipe1_.id as id1_2_1_, recipe1_.calories as calories2_2_1_, recipe1_.carbohydrates as carbohyd3_2_1_, recipe1_.fat as fat4_2_1_, recipe1_.protein as protein5_2_1_, recipe1_.recipe_name as recipe_n6_2_1_, recipe1_.serving as serving7_2_1_, recipe1_.total_time_in_min as total_ti8_2_1_, recipe1_.type as type9_2_1_, recipe1_.user_id as user_id10_2_1_, ingredient2_.recipe_id as recipe_i5_0_2_, ingredient2_.id as id1_0_2_, ingredient2_.id as id1_0_3_, ingredient2_.ingredient as ingredie2_0_3_, ingredient2_.ingredient_amount as ingredie3_0_3_, ingredient2_.ingredient_amount_measurement as ingredie4_0_3_, ingredient2_.recipe_id as recipe_i5_0_3_, user3_.id as id1_3_4_, user3_.email as email2_3_4_, user3_.first_name as first_na3_3_4_, user3_.last_name as last_nam4_3_4_ from recipe_instruction recipeinst0_ left outer join recipes recipe1_ on recipeinst0_.recipe_id=recipe1_.id left outer join recipe_ingredient ingredient2_ on recipe1_.id=ingredient2_.recipe_id left outer join users user3_ on recipe1_.user_id=user3_.id where recipeinst0_.id=?
[DEBUG] 2023-03-01 13:47:37.698 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.698 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.699 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.699 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2023-03-01 13:47:37.699 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.699 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.699 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2023-03-01 13:47:37.700 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.700 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.700 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2023-03-01 13:47:37.700 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.700 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.700 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2023-03-01 13:47:37.700 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.701 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.701 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2023-03-01 13:47:37.701 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.701 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.718 [main] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2023-03-01 13:47:37.718 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.719 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.719 [main] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2023-03-01 13:47:37.719 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.719 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.720 [main] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2023-03-01 13:47:37.720 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.720 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Sprinkle with parsley and enjoy!
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 7
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.Recipe#1]
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Processing attribute `calories` : value = 1196
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Attribute (`calories`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Processing attribute `carbohydrates` : value = 14
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Attribute (`carbohydrates`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Processing attribute `fat` : value = 105
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Attribute (`fat`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Processing attribute `instructions` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Attribute (`instructions`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Processing attribute `protein` : value = 50
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Attribute (`protein`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Processing attribute `recipeName` : value = Homemade Chicken Alfredo
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Processing attribute `serving` : value = 2
[DEBUG] 2023-03-01 13:47:37.720 [main] TwoPhaseLoad - Attribute (`serving`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `totalTimeInMin` : value = 35
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`totalTimeInMin`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `type` : value = Dinner
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.Recipe#1]
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#1]
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chicken breast 
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#1]
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.User#1]
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `email` : value = halou
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Harry
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Louis
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.User#1]
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#2]
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Fettuccini noodles
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = pound
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#2]
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#3]
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Extra virgin olive oil
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 3.0
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = tbsp
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.721 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#3]
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#4]
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chicken stock
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.5
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#4]
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#5]
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Garlic clove
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#5]
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#6]
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Heavy cream
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.5
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#6]
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#7]
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Parmesan
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#7]
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#8]
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Parsley
[DEBUG] 2023-03-01 13:47:37.722 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 0.25
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#8]
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#9]
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Lemon (Juice)
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.723 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#9]
[DEBUG] 2023-03-01 13:47:37.723 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:37.723 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.723 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:37.723 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.723 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.723 [main] SQL - select recipes0_.user_id as user_id10_2_0_, recipes0_.id as id1_2_0_, recipes0_.id as id1_2_1_, recipes0_.calories as calories2_2_1_, recipes0_.carbohydrates as carbohyd3_2_1_, recipes0_.fat as fat4_2_1_, recipes0_.protein as protein5_2_1_, recipes0_.recipe_name as recipe_n6_2_1_, recipes0_.serving as serving7_2_1_, recipes0_.total_time_in_min as total_ti8_2_1_, recipes0_.type as type9_2_1_, recipes0_.user_id as user_id10_2_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2023-03-01 13:47:37.733 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.733 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.733 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.733 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:37.733 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.733 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:37.733 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.733 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2023-03-01 13:47:37.733 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.734 [main] SQL - select instructio0_.recipe_id as recipe_i4_1_0_, instructio0_.id as id1_1_0_, instructio0_.id as id1_1_1_, instructio0_.instruction as instruct2_1_1_, instructio0_.instruction_order as instruct3_1_1_, instructio0_.recipe_id as recipe_i4_1_1_ from recipe_instruction instructio0_ where instructio0_.recipe_id=?
[DEBUG] 2023-03-01 13:47:37.735 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.735 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.735 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.735 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2023-03-01 13:47:37.735 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.735 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2023-03-01 13:47:37.735 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.735 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2023-03-01 13:47:37.735 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.735 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2023-03-01 13:47:37.735 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.735 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2023-03-01 13:47:37.736 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.736 [main] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2023-03-01 13:47:37.736 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Wash Chicken breast then pat dry. Cut into thin strips. 
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 1
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Boil fettucine pasta according to box instructions, when ready se aside.
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 2
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Heat a non-stick pan with olive oil and add chicken strips. Cook for 6-7 minutes on each side until golden brown, on medium heat. Remove chicken from pan when ready and set aside.
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 3
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add minced garlic and saute for 3 minutes. Deglaze pan with chicken stock, add lemon juice and bring to boil.
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 4
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add heavy cream, then add the cooked pasta and chicken.
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 5
[DEBUG] 2023-03-01 13:47:37.736 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.737 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.737 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.737 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:37.737 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:37.737 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add parmesan and stir until everything is well combined.
[DEBUG] 2023-03-01 13:47:37.737 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.737 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 6
[DEBUG] 2023-03-01 13:47:37.737 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.737 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.737 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.737 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:37.737 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:37.737 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.737 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:37.737 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.737 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2023-03-01 13:47:37.737 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.amgenz.entity.RecipeInstruction#7
[DEBUG] 2023-03-01 13:47:37.737 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-03-01 13:47:37.846 [main] SQL - select recipeinst0_.id as id1_1_0_, recipeinst0_.instruction as instruct2_1_0_, recipeinst0_.instruction_order as instruct3_1_0_, recipeinst0_.recipe_id as recipe_i4_1_0_, recipe1_.id as id1_2_1_, recipe1_.calories as calories2_2_1_, recipe1_.carbohydrates as carbohyd3_2_1_, recipe1_.fat as fat4_2_1_, recipe1_.protein as protein5_2_1_, recipe1_.recipe_name as recipe_n6_2_1_, recipe1_.serving as serving7_2_1_, recipe1_.total_time_in_min as total_ti8_2_1_, recipe1_.type as type9_2_1_, recipe1_.user_id as user_id10_2_1_, ingredient2_.recipe_id as recipe_i5_0_2_, ingredient2_.id as id1_0_2_, ingredient2_.id as id1_0_3_, ingredient2_.ingredient as ingredie2_0_3_, ingredient2_.ingredient_amount as ingredie3_0_3_, ingredient2_.ingredient_amount_measurement as ingredie4_0_3_, ingredient2_.recipe_id as recipe_i5_0_3_, user3_.id as id1_3_4_, user3_.email as email2_3_4_, user3_.first_name as first_na3_3_4_, user3_.last_name as last_nam4_3_4_ from recipe_instruction recipeinst0_ left outer join recipes recipe1_ on recipeinst0_.recipe_id=recipe1_.id left outer join recipe_ingredient ingredient2_ on recipe1_.id=ingredient2_.recipe_id left outer join users user3_ on recipe1_.user_id=user3_.id where recipeinst0_.id=?
[DEBUG] 2023-03-01 13:47:37.852 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.852 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.853 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.853 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2023-03-01 13:47:37.853 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.856 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.856 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2023-03-01 13:47:37.856 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.856 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.856 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2023-03-01 13:47:37.856 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.856 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.856 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2023-03-01 13:47:37.856 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.857 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.857 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2023-03-01 13:47:37.857 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.857 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.857 [main] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2023-03-01 13:47:37.857 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.857 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.857 [main] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2023-03-01 13:47:37.857 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.857 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.857 [main] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2023-03-01 13:47:37.857 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.857 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Wash Chicken breast then pat dry. Cut into thin strips. 
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 1
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.Recipe#1]
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Processing attribute `calories` : value = 1196
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Attribute (`calories`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Processing attribute `carbohydrates` : value = 14
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Attribute (`carbohydrates`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Processing attribute `fat` : value = 105
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Attribute (`fat`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Processing attribute `instructions` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Attribute (`instructions`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.857 [main] TwoPhaseLoad - Processing attribute `protein` : value = 50
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`protein`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `recipeName` : value = Homemade Chicken Alfredo
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `serving` : value = 2
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`serving`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `totalTimeInMin` : value = 35
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`totalTimeInMin`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `type` : value = Dinner
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.Recipe#1]
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#1]
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chicken breast 
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#1]
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.User#1]
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `email` : value = halou
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Harry
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Louis
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.User#1]
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#2]
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Fettuccini noodles
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = pound
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#2]
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#3]
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Extra virgin olive oil
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 3.0
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = tbsp
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#3]
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#4]
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chicken stock
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.5
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#4]
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#5]
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Garlic clove
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#5]
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#6]
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Heavy cream
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.5
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.858 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#6]
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#7]
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Parmesan
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#7]
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#8]
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Parsley
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 0.25
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#8]
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#9]
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Lemon (Juice)
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.859 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#9]
[DEBUG] 2023-03-01 13:47:37.859 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:37.859 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.859 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:37.859 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.859 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.859 [main] SQL - select recipes0_.user_id as user_id10_2_0_, recipes0_.id as id1_2_0_, recipes0_.id as id1_2_1_, recipes0_.calories as calories2_2_1_, recipes0_.carbohydrates as carbohyd3_2_1_, recipes0_.fat as fat4_2_1_, recipes0_.protein as protein5_2_1_, recipes0_.recipe_name as recipe_n6_2_1_, recipes0_.serving as serving7_2_1_, recipes0_.total_time_in_min as total_ti8_2_1_, recipes0_.type as type9_2_1_, recipes0_.user_id as user_id10_2_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2023-03-01 13:47:37.872 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.872 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.872 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.873 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:37.873 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.873 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:37.873 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.873 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2023-03-01 13:47:37.873 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.873 [main] SQL - select instructio0_.recipe_id as recipe_i4_1_0_, instructio0_.id as id1_1_0_, instructio0_.id as id1_1_1_, instructio0_.instruction as instruct2_1_1_, instructio0_.instruction_order as instruct3_1_1_, instructio0_.recipe_id as recipe_i4_1_1_ from recipe_instruction instructio0_ where instructio0_.recipe_id=?
[DEBUG] 2023-03-01 13:47:37.874 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.874 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.874 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.874 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2023-03-01 13:47:37.874 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.874 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2023-03-01 13:47:37.874 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.874 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2023-03-01 13:47:37.874 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.874 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2023-03-01 13:47:37.874 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.874 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2023-03-01 13:47:37.875 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.875 [main] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2023-03-01 13:47:37.875 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Boil fettucine pasta according to box instructions, when ready se aside.
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 2
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Heat a non-stick pan with olive oil and add chicken strips. Cook for 6-7 minutes on each side until golden brown, on medium heat. Remove chicken from pan when ready and set aside.
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 3
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add minced garlic and saute for 3 minutes. Deglaze pan with chicken stock, add lemon juice and bring to boil.
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 4
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add heavy cream, then add the cooked pasta and chicken.
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 5
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add parmesan and stir until everything is well combined.
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 6
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Sprinkle with parsley and enjoy!
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 7
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.875 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:37.875 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:37.875 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.875 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:37.875 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.875 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2023-03-01 13:47:37.875 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.amgenz.entity.RecipeInstruction#1
[DEBUG] 2023-03-01 13:47:37.875 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-03-01 13:47:37.876 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2023-03-01 13:47:37.876 [main] TransactionImpl - begin
[DEBUG] 2023-03-01 13:47:37.877 [main] TransactionImpl - committing
[DEBUG] 2023-03-01 13:47:37.881 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2023-03-01 13:47:37.881 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2023-03-01 13:47:37.881 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2023-03-01 13:47:37.881 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2023-03-01 13:47:37.881 [main] EntityPrinter - Listing entities:
[DEBUG] 2023-03-01 13:47:37.881 [main] EntityPrinter - com.amgenz.entity.RecipeInstruction{instruction=Wash Chicken breast then pat dry. Cut into thin strips. , recipe=com.amgenz.entity.Recipe#1, instructionOrder=3, id=1}
[DEBUG] 2023-03-01 13:47:37.882 [main] SQL - update recipe_instruction set instruction=?, instruction_order=?, recipe_id=? where id=?
[DEBUG] 2023-03-01 13:47:37.886 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-03-01 13:47:37.892 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-03-01 13:47:37.892 [main] SQL - select recipeinst0_.id as id1_1_0_, recipeinst0_.instruction as instruct2_1_0_, recipeinst0_.instruction_order as instruct3_1_0_, recipeinst0_.recipe_id as recipe_i4_1_0_, recipe1_.id as id1_2_1_, recipe1_.calories as calories2_2_1_, recipe1_.carbohydrates as carbohyd3_2_1_, recipe1_.fat as fat4_2_1_, recipe1_.protein as protein5_2_1_, recipe1_.recipe_name as recipe_n6_2_1_, recipe1_.serving as serving7_2_1_, recipe1_.total_time_in_min as total_ti8_2_1_, recipe1_.type as type9_2_1_, recipe1_.user_id as user_id10_2_1_, ingredient2_.recipe_id as recipe_i5_0_2_, ingredient2_.id as id1_0_2_, ingredient2_.id as id1_0_3_, ingredient2_.ingredient as ingredie2_0_3_, ingredient2_.ingredient_amount as ingredie3_0_3_, ingredient2_.ingredient_amount_measurement as ingredie4_0_3_, ingredient2_.recipe_id as recipe_i5_0_3_, user3_.id as id1_3_4_, user3_.email as email2_3_4_, user3_.first_name as first_na3_3_4_, user3_.last_name as last_nam4_3_4_ from recipe_instruction recipeinst0_ left outer join recipes recipe1_ on recipeinst0_.recipe_id=recipe1_.id left outer join recipe_ingredient ingredient2_ on recipe1_.id=ingredient2_.recipe_id left outer join users user3_ on recipe1_.user_id=user3_.id where recipeinst0_.id=?
[DEBUG] 2023-03-01 13:47:37.895 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.895 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.896 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.896 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2023-03-01 13:47:37.896 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.896 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.896 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2023-03-01 13:47:37.896 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.896 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.896 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2023-03-01 13:47:37.896 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.896 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.896 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2023-03-01 13:47:37.897 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.897 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.897 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2023-03-01 13:47:37.897 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.897 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.897 [main] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2023-03-01 13:47:37.897 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.897 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.897 [main] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2023-03-01 13:47:37.897 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.897 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.897 [main] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2023-03-01 13:47:37.897 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:37.897 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Wash Chicken breast then pat dry. Cut into thin strips. 
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 3
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#1]
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.Recipe#1]
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Processing attribute `calories` : value = 1196
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Attribute (`calories`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Processing attribute `carbohydrates` : value = 14
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Attribute (`carbohydrates`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Processing attribute `fat` : value = 105
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Attribute (`fat`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Processing attribute `instructions` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Attribute (`instructions`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Processing attribute `protein` : value = 50
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Attribute (`protein`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Processing attribute `recipeName` : value = Homemade Chicken Alfredo
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Processing attribute `serving` : value = 2
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Attribute (`serving`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Processing attribute `totalTimeInMin` : value = 35
[DEBUG] 2023-03-01 13:47:37.897 [main] TwoPhaseLoad - Attribute (`totalTimeInMin`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Processing attribute `type` : value = Dinner
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.Recipe#1]
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#1]
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chicken breast 
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#1]
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.User#1]
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Processing attribute `email` : value = halou
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Harry
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Louis
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.User#1]
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#2]
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Fettuccini noodles
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = pound
[DEBUG] 2023-03-01 13:47:37.898 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.912 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.912 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#2]
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#3]
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Extra virgin olive oil
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 3.0
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = tbsp
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#3]
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#4]
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Chicken stock
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.5
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#4]
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#5]
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Garlic clove
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#5]
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#6]
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Heavy cream
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.5
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.913 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#6]
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#7]
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Parmesan
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#7]
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#8]
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Parsley
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 0.25
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = cup
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#8]
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeIngredient#9]
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Processing attribute `ingredient` : value = Lemon (Juice)
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Attribute (`ingredient`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Processing attribute `ingredientAmount` : value = 1.0
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Attribute (`ingredientAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Processing attribute `ingredientAmountMeasurement` : value = null
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Attribute (`ingredientAmountMeasurement`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.914 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeIngredient#9]
[DEBUG] 2023-03-01 13:47:37.914 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:37.914 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.ingredients#1]
[DEBUG] 2023-03-01 13:47:37.914 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:37.914 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.914 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.915 [main] SQL - select recipes0_.user_id as user_id10_2_0_, recipes0_.id as id1_2_0_, recipes0_.id as id1_2_1_, recipes0_.calories as calories2_2_1_, recipes0_.carbohydrates as carbohyd3_2_1_, recipes0_.fat as fat4_2_1_, recipes0_.protein as protein5_2_1_, recipes0_.recipe_name as recipe_n6_2_1_, recipes0_.serving as serving7_2_1_, recipes0_.total_time_in_min as total_ti8_2_1_, recipes0_.type as type9_2_1_, recipes0_.user_id as user_id10_2_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2023-03-01 13:47:37.927 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.927 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.927 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.928 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:37.928 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.User.recipes#1]
[DEBUG] 2023-03-01 13:47:37.928 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.User.recipes
[DEBUG] 2023-03-01 13:47:37.928 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.928 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2023-03-01 13:47:37.928 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.928 [main] SQL - select instructio0_.recipe_id as recipe_i4_1_0_, instructio0_.id as id1_1_0_, instructio0_.id as id1_1_1_, instructio0_.instruction as instruct2_1_1_, instructio0_.instruction_order as instruct3_1_1_, instructio0_.recipe_id as recipe_i4_1_1_ from recipe_instruction instructio0_ where instructio0_.recipe_id=?
[DEBUG] 2023-03-01 13:47:37.932 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.932 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:37.932 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.932 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2023-03-01 13:47:37.932 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.932 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2023-03-01 13:47:37.932 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.932 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2023-03-01 13:47:37.932 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.932 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2023-03-01 13:47:37.932 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.932 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2023-03-01 13:47:37.932 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.932 [main] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2023-03-01 13:47:37.932 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Boil fettucine pasta according to box instructions, when ready se aside.
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 2
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#2]
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Heat a non-stick pan with olive oil and add chicken strips. Cook for 6-7 minutes on each side until golden brown, on medium heat. Remove chicken from pan when ready and set aside.
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 3
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#3]
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add minced garlic and saute for 3 minutes. Deglaze pan with chicken stock, add lemon juice and bring to boil.
[DEBUG] 2023-03-01 13:47:37.932 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 4
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#4]
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add heavy cream, then add the cooked pasta and chicken.
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 5
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#5]
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Add parmesan and stir until everything is well combined.
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 6
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#6]
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Sprinkle with parsley and enjoy!
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 7
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Processing attribute `recipe` : value = 1
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:37.933 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#7]
[DEBUG] 2023-03-01 13:47:37.933 [main] CollectionLoadContext - 1 collections were found in result set for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:37.933 [main] CollectionLoadContext - Collection fully initialized: [com.amgenz.entity.Recipe.instructions#1]
[DEBUG] 2023-03-01 13:47:37.933 [main] CollectionLoadContext - 1 collections initialized for role: com.amgenz.entity.Recipe.instructions
[DEBUG] 2023-03-01 13:47:37.933 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:37.933 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2023-03-01 13:47:37.933 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.amgenz.entity.RecipeInstruction#1
[DEBUG] 2023-03-01 13:47:37.933 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-03-01 13:47:38.014 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2023-03-01 13:47:38.014 [main] TransactionImpl - begin
[DEBUG] 2023-03-01 13:47:38.018 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2023-03-01 13:47:38.018 [main] SQL - insert into recipe_instruction (instruction, instruction_order, recipe_id) values (?, ?, ?)
[DEBUG] 2023-03-01 13:47:38.026 [main] IdentifierGeneratorHelper - Natively generated identity: 33
[DEBUG] 2023-03-01 13:47:38.029 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:38.029 [main] TransactionImpl - committing
[DEBUG] 2023-03-01 13:47:38.030 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2023-03-01 13:47:38.030 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2023-03-01 13:47:38.030 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2023-03-01 13:47:38.030 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2023-03-01 13:47:38.030 [main] EntityPrinter - Listing entities:
[DEBUG] 2023-03-01 13:47:38.030 [main] EntityPrinter - com.amgenz.entity.RecipeInstruction{instruction=Enjoy!, recipe=null, instructionOrder=5, id=33}
[DEBUG] 2023-03-01 13:47:38.035 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-03-01 13:47:38.035 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-03-01 13:47:38.036 [main] SQL - select recipeinst0_.id as id1_1_0_, recipeinst0_.instruction as instruct2_1_0_, recipeinst0_.instruction_order as instruct3_1_0_, recipeinst0_.recipe_id as recipe_i4_1_0_, recipe1_.id as id1_2_1_, recipe1_.calories as calories2_2_1_, recipe1_.carbohydrates as carbohyd3_2_1_, recipe1_.fat as fat4_2_1_, recipe1_.protein as protein5_2_1_, recipe1_.recipe_name as recipe_n6_2_1_, recipe1_.serving as serving7_2_1_, recipe1_.total_time_in_min as total_ti8_2_1_, recipe1_.type as type9_2_1_, recipe1_.user_id as user_id10_2_1_, ingredient2_.recipe_id as recipe_i5_0_2_, ingredient2_.id as id1_0_2_, ingredient2_.id as id1_0_3_, ingredient2_.ingredient as ingredie2_0_3_, ingredient2_.ingredient_amount as ingredie3_0_3_, ingredient2_.ingredient_amount_measurement as ingredie4_0_3_, ingredient2_.recipe_id as recipe_i5_0_3_, user3_.id as id1_3_4_, user3_.email as email2_3_4_, user3_.first_name as first_na3_3_4_, user3_.last_name as last_nam4_3_4_ from recipe_instruction recipeinst0_ left outer join recipes recipe1_ on recipeinst0_.recipe_id=recipe1_.id left outer join recipe_ingredient ingredient2_ on recipe1_.id=ingredient2_.recipe_id left outer join users user3_ on recipe1_.user_id=user3_.id where recipeinst0_.id=?
[DEBUG] 2023-03-01 13:47:38.037 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-03-01 13:47:38.038 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-03-01 13:47:38.038 [main] TwoPhaseLoad - Resolving attributes for [com.amgenz.entity.RecipeInstruction#33]
[DEBUG] 2023-03-01 13:47:38.038 [main] TwoPhaseLoad - Processing attribute `instruction` : value = Enjoy!
[DEBUG] 2023-03-01 13:47:38.038 [main] TwoPhaseLoad - Attribute (`instruction`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:38.038 [main] TwoPhaseLoad - Processing attribute `instructionOrder` : value = 5
[DEBUG] 2023-03-01 13:47:38.038 [main] TwoPhaseLoad - Attribute (`instructionOrder`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:38.038 [main] TwoPhaseLoad - Processing attribute `recipe` : value = null
[DEBUG] 2023-03-01 13:47:38.038 [main] TwoPhaseLoad - Attribute (`recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-03-01 13:47:38.039 [main] TwoPhaseLoad - Done materializing entity [com.amgenz.entity.RecipeInstruction#33]
[DEBUG] 2023-03-01 13:47:38.039 [main] CollectionLoadContext - No collections were found in result set for role: com.amgenz.entity.Recipe.ingredients
[DEBUG] 2023-03-01 13:47:38.039 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-03-01 13:47:38.039 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.amgenz.entity.RecipeInstruction#33
[DEBUG] 2023-03-01 13:47:38.039 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
